

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 10 20:50:59 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F2550 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     
    64                           	psect	idataBANK1
    65  000DA8                     __pidataBANK1:
    66                           	opt stack 0
    67                           
    68                           ;initializer for loop@direccion
    69  000DA8  0005               	dw	5
    70  0000                     _LATCbits	set	3979
    71  0000                     _PORTCbits	set	3970
    72  0000                     _PORTBbits	set	3969
    73  0000                     _PORTAbits	set	3968
    74  0000                     _LATAbits	set	3977
    75  0000                     _INTCONbits	set	4082
    76  0000                     _PIE1bits	set	3997
    77  0000                     _RCONbits	set	4048
    78  0000                     _PIE2	set	4000
    79  0000                     _PIE1	set	3997
    80  0000                     _INTCON3	set	4080
    81  0000                     _CCP2CONbits	set	4026
    82  0000                     _CCPR2L	set	4027
    83  0000                     _CCP1CONbits	set	4029
    84  0000                     _CCPR1L	set	4030
    85  0000                     _PR2	set	4043
    86  0000                     _T2CONbits	set	4042
    87  0000                     _T2CON	set	4042
    88  0000                     _TRISCbits	set	3988
    89  0000                     _TRISBbits	set	3987
    90  0000                     _TRISAbits	set	3986
    91  0000                     _UCFGbits	set	3951
    92  0000                     _UCONbits	set	3949
    93  0000                     _ADCON1bits	set	4033
    94  0000                     _TMR2IF	set	31985
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  000D18                     __pcinit:
   100                           	opt stack 0
   101  000D18                     start_initialization:
   102                           	opt stack 0
   103  000D18                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Initialize objects allocated to BANK1 (2 bytes)
   107                           ; load TBLPTR registers with __pidataBANK1
   108  000D18  0EA8               	movlw	low __pidataBANK1
   109  000D1A  6EF6               	movwf	tblptrl,c
   110  000D1C  0E0D               	movlw	high __pidataBANK1
   111  000D1E  6EF7               	movwf	tblptrh,c
   112  000D20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   113  000D22  6EF8               	movwf	tblptru,c
   114  000D24  0009               	tblrd		*+	;fetch initializer
   115  000D26  CFF5 F1B0          	movff	tablat,__pdataBANK1
   116  000D2A  0009               	tblrd		*+	;fetch initializer
   117  000D2C  CFF5 F1B1          	movff	tablat,__pdataBANK1+1
   118                           
   119                           ; Clear objects allocated to BANK1 (6 bytes)
   120  000D30  0101               	movlb	1
   121  000D32  6BAF               	clrf	(__pbssBANK1+5)& (0+255),b
   122  000D34  6BAE               	clrf	(__pbssBANK1+4)& (0+255),b
   123  000D36  6BAD               	clrf	(__pbssBANK1+3)& (0+255),b
   124  000D38  6BAC               	clrf	(__pbssBANK1+2)& (0+255),b
   125  000D3A  6BAB               	clrf	(__pbssBANK1+1)& (0+255),b
   126  000D3C  6BAA               	clrf	__pbssBANK1& (0+255),b
   127                           
   128                           ; Clear objects allocated to COMRAM (4 bytes)
   129  000D3E  6A49               	clrf	(__pbssCOMRAM+3)& (0+255),c
   130  000D40  6A48               	clrf	(__pbssCOMRAM+2)& (0+255),c
   131  000D42  6A47               	clrf	(__pbssCOMRAM+1)& (0+255),c
   132  000D44  6A46               	clrf	__pbssCOMRAM& (0+255),c
   133  000D46                     end_of_initialization:
   134                           	opt stack 0
   135  000D46                     __end_of__initialization:
   136                           	opt stack 0
   137  000D46  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   138  000D48  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   139  000D4A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   140  000D4C  6EF8               	movwf	tblptru,c
   141  000D4E  0100               	movlb	0
   142  000D50  EFCF  F006         	goto	_main	;jump to C main() function
   143                           tblptru	equ	0xFF8
   144                           tblptrh	equ	0xFF7
   145                           tblptrl	equ	0xFF6
   146                           tablat	equ	0xFF5
   147                           
   148                           	psect	bssCOMRAM
   149  000046                     __pbssCOMRAM:
   150                           	opt stack 0
   151  000046                     _millisCounter:
   152                           	opt stack 0
   153  000046                     	ds	4
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           
   159                           	psect	bssBANK1
   160  0001AA                     __pbssBANK1:
   161                           	opt stack 0
   162  0001AA                     loop@m:
   163                           	opt stack 0
   164  0001AA                     	ds	4
   165  0001AE                     loop@estado:
   166                           	opt stack 0
   167  0001AE                     	ds	2
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           tblptrl	equ	0xFF6
   171                           tablat	equ	0xFF5
   172                           
   173                           	psect	dataBANK1
   174  0001B0                     __pdataBANK1:
   175                           	opt stack 0
   176  0001B0                     loop@direccion:
   177                           	opt stack 0
   178  0001B0                     	ds	2
   179                           tblptru	equ	0xFF8
   180                           tblptrh	equ	0xFF7
   181                           tblptrl	equ	0xFF6
   182                           tablat	equ	0xFF5
   183                           
   184                           	psect	cstackBANK1
   185  000100                     __pcstackBANK1:
   186                           	opt stack 0
   187  000100                     _loop$830:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x0
   191  000100                     	ds	2
   192  000102                     _loop$831:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196  000102                     	ds	2
   197  000104                     _loop$832:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x4
   201  000104                     	ds	2
   202  000106                     _loop$833:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x6
   206  000106                     	ds	2
   207  000108                     _loop$834:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x8
   211  000108                     	ds	2
   212  00010A                     _loop$835:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0xA
   216  00010A                     	ds	2
   217  00010C                     _loop$836:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0xC
   221  00010C                     	ds	2
   222  00010E                     _loop$837:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0xE
   226  00010E                     	ds	2
   227  000110                     _loop$838:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x10
   231  000110                     	ds	2
   232  000112                     _loop$839:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x12
   236  000112                     	ds	2
   237  000114                     _loop$840:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0x14
   241  000114                     	ds	2
   242  000116                     _loop$841:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x16
   246  000116                     	ds	2
   247  000118                     _loop$842:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x18
   251  000118                     	ds	2
   252  00011A                     _loop$843:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x1A
   256  00011A                     	ds	2
   257  00011C                     _loop$844:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x1C
   261  00011C                     	ds	2
   262  00011E                     _loop$862:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x1E
   266  00011E                     	ds	2
   267  000120                     _loop$863:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x20
   271  000120                     	ds	2
   272  000122                     _loop$864:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x22
   276  000122                     	ds	2
   277  000124                     _loop$865:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x24
   281  000124                     	ds	2
   282  000126                     _loop$866:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x26
   286  000126                     	ds	2
   287  000128                     _loop$868:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x28
   291  000128                     	ds	2
   292  00012A                     _loop$869:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x2A
   296  00012A                     	ds	2
   297  00012C                     _loop$870:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x2C
   301  00012C                     	ds	2
   302  00012E                     _loop$871:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x2E
   306  00012E                     	ds	2
   307  000130                     _loop$872:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x30
   311  000130                     	ds	2
   312  000132                     _loop$873:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x32
   316  000132                     	ds	2
   317  000134                     _loop$874:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x34
   321  000134                     	ds	2
   322  000136                     _loop$875:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x36
   326  000136                     	ds	2
   327  000138                     _loop$876:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x38
   331  000138                     	ds	2
   332  00013A                     _loop$877:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x3A
   336  00013A                     	ds	2
   337  00013C                     _loop$878:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x3C
   341  00013C                     	ds	2
   342  00013E                     _loop$879:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x3E
   346  00013E                     	ds	2
   347  000140                     _loop$880:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x40
   351  000140                     	ds	2
   352  000142                     _loop$881:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x42
   356  000142                     	ds	2
   357  000144                     _loop$882:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x44
   361  000144                     	ds	2
   362  000146                     _loop$883:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x46
   366  000146                     	ds	2
   367  000148                     _loop$884:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x48
   371  000148                     	ds	2
   372  00014A                     _loop$885:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x4A
   376  00014A                     	ds	2
   377  00014C                     _loop$886:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x4C
   381  00014C                     	ds	2
   382  00014E                     _loop$887:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x4E
   386  00014E                     	ds	2
   387  000150                     _loop$888:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x50
   391  000150                     	ds	2
   392  000152                     _loop$889:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x52
   396  000152                     	ds	2
   397  000154                     _loop$890:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x54
   401  000154                     	ds	2
   402  000156                     _loop$891:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x56
   406  000156                     	ds	2
   407  000158                     _loop$892:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x58
   411  000158                     	ds	2
   412  00015A                     _loop$893:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x5A
   416  00015A                     	ds	2
   417  00015C                     _loop$894:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x5C
   421  00015C                     	ds	2
   422  00015E                     _loop$895:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x5E
   426  00015E                     	ds	2
   427  000160                     _loop$896:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x60
   431  000160                     	ds	2
   432  000162                     _loop$897:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x62
   436  000162                     	ds	2
   437  000164                     _loop$898:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x64
   441  000164                     	ds	2
   442  000166                     _loop$899:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x66
   446  000166                     	ds	2
   447  000168                     _loop$900:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x68
   451  000168                     	ds	2
   452  00016A                     _loop$901:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x6A
   456  00016A                     	ds	2
   457  00016C                     _loop$902:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x6C
   461  00016C                     	ds	2
   462  00016E                     _loop$903:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x6E
   466  00016E                     	ds	2
   467  000170                     _loop$904:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x70
   471  000170                     	ds	2
   472  000172                     _loop$905:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x72
   476  000172                     	ds	2
   477  000174                     _loop$906:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x74
   481  000174                     	ds	2
   482  000176                     _loop$907:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x76
   486  000176                     	ds	2
   487  000178                     _loop$908:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x78
   491  000178                     	ds	2
   492  00017A                     _loop$909:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x7A
   496  00017A                     	ds	2
   497  00017C                     _loop$910:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x7C
   501  00017C                     	ds	2
   502  00017E                     _loop$911:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x7E
   506  00017E                     	ds	2
   507  000180                     _loop$912:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x80
   511  000180                     	ds	2
   512  000182                     _loop$913:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x82
   516  000182                     	ds	2
   517  000184                     _loop$914:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x84
   521  000184                     	ds	2
   522  000186                     _loop$915:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x86
   526  000186                     	ds	2
   527  000188                     _loop$916:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x88
   531  000188                     	ds	2
   532  00018A                     _loop$917:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x8A
   536  00018A                     	ds	2
   537  00018C                     _loop$918:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x8C
   541  00018C                     	ds	2
   542  00018E                     _loop$919:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x8E
   546  00018E                     	ds	2
   547  000190                     _loop$920:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x90
   551  000190                     	ds	2
   552  000192                     _loop$921:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x92
   556  000192                     	ds	2
   557  000194                     _loop$922:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x94
   561  000194                     	ds	2
   562  000196                     _loop$923:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x96
   566  000196                     	ds	2
   567  000198                     _loop$924:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x98
   571  000198                     	ds	2
   572  00019A                     _loop$925:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x9A
   576  00019A                     	ds	2
   577  00019C                     _loop$926:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x9C
   581  00019C                     	ds	2
   582  00019E                     _loop$927:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x9E
   586  00019E                     	ds	2
   587  0001A0                     _loop$928:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0xA0
   591  0001A0                     	ds	2
   592  0001A2                     _loop$929:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0xA2
   596  0001A2                     	ds	2
   597  0001A4                     _loop$930:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0xA4
   601  0001A4                     	ds	2
   602  0001A6                     _loop$931:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0xA6
   606  0001A6                     	ds	2
   607  0001A8                     _loop$861:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0xA8
   611  0001A8                     	ds	1
   612  0001A9                     _loop$867:
   613                           	opt stack 0
   614                           
   615                           ; 1 bytes @ 0xA9
   616  0001A9                     	ds	1
   617                           tblptru	equ	0xFF8
   618                           tblptrh	equ	0xFF7
   619                           tblptrl	equ	0xFF6
   620                           tablat	equ	0xFF5
   621                           
   622                           	psect	cstackBANK0
   623  000060                     __pcstackBANK0:
   624                           	opt stack 0
   625  000060                     ??_loop:
   626                           
   627                           ; 1 bytes @ 0x0
   628  000060                     	ds	5
   629                           tblptru	equ	0xFF8
   630                           tblptrh	equ	0xFF7
   631                           tblptrl	equ	0xFF6
   632                           tablat	equ	0xFF5
   633                           
   634                           	psect	cstackCOMRAM
   635  000001                     __pcstackCOMRAM:
   636                           	opt stack 0
   637  000001                     ??_ISR:
   638  000001                     
   639                           ; 1 bytes @ 0x0
   640  000001                     	ds	18
   641  000013                     ?___awdiv:
   642                           	opt stack 0
   643  000013                     ?___ftpack:
   644                           	opt stack 0
   645  000013                     ?_millis:
   646                           	opt stack 0
   647  000013                     ___awdiv@dividend:
   648                           	opt stack 0
   649  000013                     ___ftpack@arg:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x12
   653  000013                     	ds	2
   654  000015                     ___awdiv@divisor:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x14
   658  000015                     	ds	1
   659  000016                     ___ftpack@exp:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x15
   663  000016                     	ds	1
   664  000017                     ___awdiv@counter:
   665                           	opt stack 0
   666  000017                     ___ftpack@sign:
   667                           	opt stack 0
   668                           
   669                           ; 1 bytes @ 0x16
   670  000017                     	ds	1
   671  000018                     ??___ftpack:
   672  000018                     ___awdiv@sign:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x17
   676  000018                     	ds	1
   677  000019                     ___awdiv@quotient:
   678                           	opt stack 0
   679                           
   680                           ; 2 bytes @ 0x18
   681  000019                     	ds	2
   682  00001B                     ?___awtoft:
   683                           	opt stack 0
   684  00001B                     ___awtoft@c:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x1A
   688  00001B                     	ds	3
   689  00001E                     ___awtoft@sign:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x1D
   693  00001E                     	ds	1
   694  00001F                     ?___ftmul:
   695                           	opt stack 0
   696  00001F                     ___ftmul@f1:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x1E
   700  00001F                     	ds	3
   701  000022                     ___ftmul@f2:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x21
   705  000022                     	ds	3
   706  000025                     ??___ftmul:
   707                           
   708                           ; 1 bytes @ 0x24
   709  000025                     	ds	3
   710  000028                     ___ftmul@exp:
   711                           	opt stack 0
   712                           
   713                           ; 1 bytes @ 0x27
   714  000028                     	ds	1
   715  000029                     ___ftmul@f3_as_product:
   716                           	opt stack 0
   717                           
   718                           ; 3 bytes @ 0x28
   719  000029                     	ds	3
   720  00002C                     ___ftmul@cntr:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x2B
   724  00002C                     	ds	1
   725  00002D                     ___ftmul@sign:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x2C
   729  00002D                     	ds	1
   730  00002E                     ?___fttol:
   731                           	opt stack 0
   732  00002E                     ___fttol@f1:
   733                           	opt stack 0
   734                           
   735                           ; 3 bytes @ 0x2D
   736  00002E                     	ds	4
   737  000032                     ??___fttol:
   738                           
   739                           ; 1 bytes @ 0x31
   740  000032                     	ds	5
   741  000037                     ___fttol@sign1:
   742                           	opt stack 0
   743                           
   744                           ; 1 bytes @ 0x36
   745  000037                     	ds	1
   746  000038                     ___fttol@lval:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x37
   750  000038                     	ds	4
   751  00003C                     ___fttol@exp1:
   752                           	opt stack 0
   753                           
   754                           ; 1 bytes @ 0x3B
   755  00003C                     	ds	1
   756  00003D                     setMotores@dutyI:
   757                           	opt stack 0
   758                           
   759                           ; 2 bytes @ 0x3C
   760  00003D                     	ds	2
   761  00003F                     setMotores@dutyD:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x3E
   765  00003F                     	ds	2
   766  000041                     ??_setMotores:
   767                           
   768                           ; 1 bytes @ 0x40
   769  000041                     	ds	1
   770  000042                     _setMotores$935:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x41
   774  000042                     	ds	2
   775  000044                     _setMotores$936:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x43
   779  000044                     	ds	2
   780  000046                     tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           
   785                           ; 1 bytes @ 0x45
   786 ;;
   787 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   788 ;;
   789 ;; *************** function _main *****************
   790 ;; Defined at:
   791 ;;		line 275 in file "main.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   805 ;;      Params:         0       0       0       0       0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels required when called:    5
   811 ;; This function calls:
   812 ;;		_init
   813 ;;		_loop
   814 ;; This function is called by:
   815 ;;		Startup code after reset
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text0
   820  000D9E                     __ptext0:
   821                           	opt stack 0
   822  000D9E                     _main:
   823                           	opt stack 26
   824                           
   825                           ;main.c: 276: init();
   826                           
   827                           ;incstack = 0
   828  000D9E  ECFE  F005         	call	_init	;wreg free
   829  000DA2                     l496:
   830  000DA2  EC09  F000         	call	_loop	;wreg free
   831  000DA6  D7FD               	goto	l496
   832  000DA8                     __end_of_main:
   833                           	opt stack 0
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           
   839 ;; *************** function _loop *****************
   840 ;; Defined at:
   841 ;;		line 71 in file "main.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   855 ;;      Params:         0       0       0       0       0       0       0       0       0
   856 ;;      Locals:         0       0     170       0       0       0       0       0       0
   857 ;;      Temps:          0       5       0       0       0       0       0       0       0
   858 ;;      Totals:         0       5     170       0       0       0       0       0       0
   859 ;;Total ram usage:      175 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    4
   862 ;; This function calls:
   863 ;;		_millis
   864 ;;		_setMotores
   865 ;; This function is called by:
   866 ;;		_main
   867 ;; This function uses a non-reentrant model
   868 ;;
   869                           
   870                           	psect	text1
   871  000012                     __ptext1:
   872                           	opt stack 0
   873  000012                     _loop:
   874                           	opt stack 26
   875                           
   876                           ;main.c: 72: static unsigned long m = 0;
   877                           ;main.c: 73: static int estado = MENU;
   878                           ;main.c: 74: static int direccion = DER;
   879                           ;main.c: 75: switch(estado){
   880                           
   881                           ;incstack = 0
   882  000012  D34C               	goto	l69
   883  000014                     
   884                           ; BSR set to: 1
   885  000014  0E00               	movlw	0
   886  000016  0101               	movlb	1	; () banked
   887  000018  6F05               	movwf	(_loop$832+1)& (0+255),b
   888  00001A  0E00               	movlw	0
   889  00001C  6F04               	movwf	_loop$832& (0+255),b
   890                           
   891                           ; BSR set to: 1
   892                           
   893                           ; BSR set to: 1
   894  00001E  C104  F102         	movff	_loop$832,_loop$831
   895  000022  C105  F103         	movff	_loop$832+1,_loop$831+1
   896                           
   897                           ; BSR set to: 1
   898                           
   899                           ; BSR set to: 1
   900                           
   901                           ; BSR set to: 1
   902                           
   903                           ; BSR set to: 1
   904  000026  C102  F100         	movff	_loop$831,_loop$830
   905  00002A  C103  F101         	movff	_loop$831+1,_loop$830+1
   906                           
   907                           ; BSR set to: 1
   908                           
   909                           ; BSR set to: 1
   910                           
   911                           ; BSR set to: 1
   912                           
   913                           ; BSR set to: 1
   914  00002E  5100               	movf	_loop$830& (0+255),w,b
   915  000030  1101               	iorwf	(_loop$830+1)& (0+255),w,b
   916  000032  B4D8               	btfsc	status,2,c
   917  000034  D005               	goto	l87
   918                           
   919                           ; BSR set to: 1
   920                           ;main.c: 78: estado = LIMPIAR;
   921  000036  0E00               	movlw	0
   922  000038  6FAF               	movwf	(loop@estado+1)& (0+255),b
   923  00003A  0E01               	movlw	1
   924  00003C  6FAE               	movwf	loop@estado& (0+255),b
   925                           
   926                           ;main.c: 79: break;
   927  00003E  0012               	return	
   928  000040                     l87:
   929                           
   930                           ; BSR set to: 1
   931                           
   932                           ; BSR set to: 1
   933  000040  B280               	btfsc	3968,1,c	;volatile
   934  000042  D002               	goto	u4570
   935  000044  0E01               	movlw	1
   936  000046  D001               	goto	u4580
   937  000048                     u4570:
   938  000048  0E00               	movlw	0
   939  00004A                     u4580:
   940  00004A  6F06               	movwf	_loop$833& (0+255),b
   941  00004C  6B07               	clrf	(_loop$833+1)& (0+255),b
   942                           
   943                           ; BSR set to: 1
   944                           
   945                           ; BSR set to: 1
   946  00004E  5106               	movf	_loop$833& (0+255),w,b
   947  000050  1107               	iorwf	(_loop$833+1)& (0+255),w,b
   948  000052  B4D8               	btfsc	status,2,c
   949  000054  D023               	goto	l119
   950                           
   951                           ; BSR set to: 1
   952                           ;main.c: 83: LATAbits.LA2 = 1;
   953  000056  8489               	bsf	3977,2,c	;volatile
   954                           
   955                           ;main.c: 84: LATAbits.LA3 = 1;
   956  000058  8689               	bsf	3977,3,c	;volatile
   957                           
   958                           ;main.c: 85: LATAbits.LA4 = 1;
   959  00005A  8889               	bsf	3977,4,c	;volatile
   960                           
   961                           ;main.c: 86: while((1 == 1 ? !PORTAbits.RA1 : (1 == 2 ? !PORTAbits.RA5 : (1 == 0 ? 0 : 0
      +                          )))){
   962  00005C  D013               	goto	l101
   963  00005E                     
   964                           ; BSR set to: 1
   965                           ;main.c: 87: m = millis();
   966                           
   967                           ; BSR set to: 1
   968  00005E  ECC6  F006         	call	_millis	;wreg free
   969  000062  C013  F1AA         	movff	?_millis,loop@m
   970  000066  C014  F1AB         	movff	?_millis+1,loop@m+1
   971  00006A  C015  F1AC         	movff	?_millis+2,loop@m+2
   972  00006E  C016  F1AD         	movff	?_millis+3,loop@m+3
   973                           
   974                           ;main.c: 88: direccion = DER;
   975  000072  0E00               	movlw	0
   976  000074  0101               	movlb	1	; () banked
   977  000076  6FB1               	movwf	(loop@direccion+1)& (0+255),b
   978  000078  0E05               	movlw	5
   979  00007A  6FB0               	movwf	loop@direccion& (0+255),b
   980                           
   981                           ; BSR set to: 1
   982                           ;main.c: 89: estado = ESPERA;
   983  00007C  0E00               	movlw	0
   984  00007E  6FAF               	movwf	(loop@estado+1)& (0+255),b
   985  000080  0E02               	movlw	2
   986  000082  6FAE               	movwf	loop@estado& (0+255),b
   987  000084                     l101:
   988                           
   989                           ; BSR set to: 1
   990                           
   991                           ; BSR set to: 1
   992  000084  B280               	btfsc	3968,1,c	;volatile
   993  000086  D002               	goto	u4620
   994  000088  0E01               	movlw	1
   995  00008A  D001               	goto	u4630
   996  00008C                     u4620:
   997  00008C  0E00               	movlw	0
   998  00008E                     u4630:
   999  00008E  6F0C               	movwf	_loop$836& (0+255),b
  1000  000090  6B0D               	clrf	(_loop$836+1)& (0+255),b
  1001                           
  1002                           ; BSR set to: 1
  1003                           
  1004                           ; BSR set to: 1
  1005  000092  510C               	movf	_loop$836& (0+255),w,b
  1006  000094  110D               	iorwf	(_loop$836+1)& (0+255),w,b
  1007  000096  B4D8               	btfsc	status,2,c
  1008  000098  0012               	return	
  1009  00009A  D7E1               	goto	l99
  1010  00009C                     l119:
  1011                           
  1012                           ; BSR set to: 1
  1013                           
  1014                           ; BSR set to: 1
  1015  00009C  BA80               	btfsc	3968,5,c	;volatile
  1016  00009E  D002               	goto	u4650
  1017  0000A0  0E01               	movlw	1
  1018  0000A2  D001               	goto	u4660
  1019  0000A4                     u4650:
  1020  0000A4  0E00               	movlw	0
  1021  0000A6                     u4660:
  1022  0000A6  6F14               	movwf	_loop$840& (0+255),b
  1023  0000A8  6B15               	clrf	(_loop$840+1)& (0+255),b
  1024                           
  1025                           ; BSR set to: 1
  1026                           
  1027                           ; BSR set to: 1
  1028  0000AA  C114  F112         	movff	_loop$840,_loop$839
  1029  0000AE  C115  F113         	movff	_loop$840+1,_loop$839+1
  1030                           
  1031                           ; BSR set to: 1
  1032                           
  1033                           ; BSR set to: 1
  1034                           
  1035                           ; BSR set to: 1
  1036                           
  1037                           ; BSR set to: 1
  1038  0000B2  5112               	movf	_loop$839& (0+255),w,b
  1039  0000B4  1113               	iorwf	(_loop$839+1)& (0+255),w,b
  1040  0000B6  B4D8               	btfsc	status,2,c
  1041  0000B8  D027               	goto	l113
  1042                           
  1043                           ; BSR set to: 1
  1044                           ;main.c: 95: LATAbits.LA2 = 1;
  1045  0000BA  8489               	bsf	3977,2,c	;volatile
  1046                           
  1047                           ;main.c: 96: LATAbits.LA3 = 1;
  1048  0000BC  8689               	bsf	3977,3,c	;volatile
  1049                           
  1050                           ;main.c: 97: LATAbits.LA4 = 1;
  1051  0000BE  8889               	bsf	3977,4,c	;volatile
  1052                           
  1053                           ;main.c: 98: while((2 == 1 ? !PORTAbits.RA1 : (2 == 2 ? !PORTAbits.RA5 : (2 == 0 ? 0 : 0
      +                          )))){
  1054  0000C0  D013               	goto	l133
  1055  0000C2                     
  1056                           ; BSR set to: 1
  1057                           ;main.c: 99: m = millis();
  1058                           
  1059                           ; BSR set to: 1
  1060  0000C2  ECC6  F006         	call	_millis	;wreg free
  1061  0000C6  C013  F1AA         	movff	?_millis,loop@m
  1062  0000CA  C014  F1AB         	movff	?_millis+1,loop@m+1
  1063  0000CE  C015  F1AC         	movff	?_millis+2,loop@m+2
  1064  0000D2  C016  F1AD         	movff	?_millis+3,loop@m+3
  1065                           
  1066                           ;main.c: 100: direccion = IZQ;
  1067  0000D6  0E00               	movlw	0
  1068  0000D8  0101               	movlb	1	; () banked
  1069  0000DA  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  1070  0000DC  0E08               	movlw	8
  1071  0000DE  6FB0               	movwf	loop@direccion& (0+255),b
  1072                           
  1073                           ; BSR set to: 1
  1074                           ;main.c: 101: estado = ESPERA;
  1075  0000E0  0E00               	movlw	0
  1076  0000E2  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1077  0000E4  0E02               	movlw	2
  1078  0000E6  6FAE               	movwf	loop@estado& (0+255),b
  1079  0000E8                     l133:
  1080                           
  1081                           ; BSR set to: 1
  1082                           
  1083                           ; BSR set to: 1
  1084  0000E8  BA80               	btfsc	3968,5,c	;volatile
  1085  0000EA  D002               	goto	u4700
  1086  0000EC  0E01               	movlw	1
  1087  0000EE  D001               	goto	u4710
  1088  0000F0                     u4700:
  1089  0000F0  0E00               	movlw	0
  1090  0000F2                     u4710:
  1091  0000F2  6F1A               	movwf	_loop$843& (0+255),b
  1092  0000F4  6B1B               	clrf	(_loop$843+1)& (0+255),b
  1093                           
  1094                           ; BSR set to: 1
  1095                           
  1096                           ; BSR set to: 1
  1097  0000F6  C11A  F118         	movff	_loop$843,_loop$842
  1098  0000FA  C11B  F119         	movff	_loop$843+1,_loop$842+1
  1099                           
  1100                           ; BSR set to: 1
  1101                           
  1102                           ; BSR set to: 1
  1103                           
  1104                           ; BSR set to: 1
  1105                           
  1106                           ; BSR set to: 1
  1107  0000FE  5118               	movf	_loop$842& (0+255),w,b
  1108  000100  1119               	iorwf	(_loop$842+1)& (0+255),w,b
  1109  000102  B4D8               	btfsc	status,2,c
  1110  000104  0012               	return	
  1111  000106  D7DD               	goto	l127
  1112  000108                     l113:
  1113                           
  1114                           ; BSR set to: 1
  1115                           ;main.c: 104: }
  1116                           ;main.c: 106: setMotores(0, 0);
  1117                           
  1118                           ; BSR set to: 1
  1119  000108  0E00               	movlw	0
  1120  00010A  6E3E               	movwf	setMotores@dutyI+1,c
  1121  00010C  0E00               	movlw	0
  1122  00010E  6E3D               	movwf	setMotores@dutyI,c
  1123  000110  0E00               	movlw	0
  1124  000112  6E40               	movwf	setMotores@dutyD+1,c
  1125  000114  0E00               	movlw	0
  1126  000116  6E3F               	movwf	setMotores@dutyD,c
  1127  000118  EC88  F003         	call	_setMotores	;wreg free
  1128                           
  1129                           ;main.c: 107: LATAbits.LA2 = (1 == 1 ? !PORTBbits.RB5 : (1 == 2 ? !PORTBbits.RB4 : (1 ==
      +                           3 ? !PORTBbits.RB1 : (1 == 4 ? !PORTCbits.RC5 : (1 == 5 ? !PORTCbits.RC4 : 0))))) || (2
      +                           == 1 ? !PORTBbits.RB5 : (2 == 2 ? !PORTBbits.RB4 : (2 == 3 ? !PORTBbits.RB1 : (2 == 4 ?
  1130  00011C  0E01               	movlw	1
  1131  00011E  0101               	movlb	1	; () banked
  1132  000120  6FA8               	movwf	_loop$861& (0+255),b
  1133                           
  1134                           ; BSR set to: 1
  1135  000122  BA81               	btfsc	3969,5,c	;volatile
  1136                           
  1137                           ; BSR set to: 1
  1138  000124  A881               	btfss	3969,4,c	;volatile
  1139  000126  D004               	goto	l142
  1140                           
  1141                           ; BSR set to: 1
  1142  000128  A681               	btfss	3969,3,c	;volatile
  1143  00012A  D002               	goto	l142
  1144                           
  1145                           ; BSR set to: 1
  1146  00012C  0E00               	movlw	0
  1147  00012E  6FA8               	movwf	_loop$861& (0+255),b
  1148  000130                     l142:
  1149                           
  1150                           ; BSR set to: 1
  1151                           ;main.c: 108: LATAbits.LA3 = (3 == 1 ? !PORTBbits.RB5 : (3 == 2 ? !PORTBbits.RB4 : (3 ==
      +                           3 ? !PORTBbits.RB1 : (3 == 4 ? !PORTCbits.RC5 : (3 == 5 ? !PORTCbits.RC4 : 0)))));
  1152                           
  1153                           ; BSR set to: 1
  1154  000130  B1A8               	btfsc	_loop$861& (0+255),0,b
  1155  000132  D002               	bra	u4785
  1156  000134  9489               	bcf	3977,2,c	;volatile
  1157  000136  D001               	bra	u4786
  1158  000138                     u4785:
  1159  000138  8489               	bsf	3977,2,c	;volatile
  1160  00013A                     u4786:
  1161                           
  1162                           ; BSR set to: 1
  1163                           
  1164                           ; BSR set to: 1
  1165                           
  1166                           ; BSR set to: 1
  1167                           
  1168                           ; BSR set to: 1
  1169                           
  1170                           ; BSR set to: 1
  1171                           
  1172                           ; BSR set to: 1
  1173                           
  1174                           ; BSR set to: 1
  1175                           
  1176                           ; BSR set to: 1
  1177                           
  1178                           ; BSR set to: 1
  1179  00013A  B281               	btfsc	3969,1,c	;volatile
  1180  00013C  D002               	goto	u4830
  1181  00013E  0E01               	movlw	1
  1182  000140  D001               	goto	u4840
  1183  000142                     u4830:
  1184  000142  0E00               	movlw	0
  1185  000144                     u4840:
  1186  000144  0101               	movlb	1	; () banked
  1187  000146  6F22               	movwf	_loop$864& (0+255),b
  1188  000148  6B23               	clrf	(_loop$864+1)& (0+255),b
  1189                           
  1190                           ; BSR set to: 1
  1191                           
  1192                           ; BSR set to: 1
  1193  00014A  C122  F120         	movff	_loop$864,_loop$863
  1194  00014E  C123  F121         	movff	_loop$864+1,_loop$863+1
  1195                           
  1196                           ; BSR set to: 1
  1197                           
  1198                           ; BSR set to: 1
  1199                           
  1200                           ; BSR set to: 1
  1201                           
  1202                           ; BSR set to: 1
  1203  000152  C120  F11E         	movff	_loop$863,_loop$862
  1204  000156  C121  F11F         	movff	_loop$863+1,_loop$862+1
  1205                           
  1206                           ; BSR set to: 1
  1207                           
  1208                           ; BSR set to: 1
  1209                           
  1210                           ; BSR set to: 1
  1211                           
  1212                           ; BSR set to: 1
  1213  00015A  B11E               	btfsc	_loop$862& (0+255),0,b
  1214  00015C  D002               	bra	u4895
  1215  00015E  9689               	bcf	3977,3,c	;volatile
  1216  000160  D001               	bra	u4896
  1217  000162                     u4895:
  1218  000162  8689               	bsf	3977,3,c	;volatile
  1219  000164                     u4896:
  1220                           
  1221                           ;main.c: 109: LATAbits.LA4 = (4 == 1 ? !PORTBbits.RB5 : (4 == 2 ? !PORTBbits.RB4 : (4 ==
      +                           3 ? !PORTBbits.RB1 : (4 == 4 ? !PORTCbits.RC5 : (4 == 5 ? !PORTCbits.RC4 : 0))))) || (5
      +                           == 1 ? !PORTBbits.RB5 : (5 == 2 ? !PORTBbits.RB4 : (5 == 3 ? !PORTBbits.RB1 : (5 == 4 ?
  1222  000164  0E01               	movlw	1
  1223  000166  0101               	movlb	1	; () banked
  1224  000168  6FA9               	movwf	_loop$867& (0+255),b
  1225                           
  1226                           ; BSR set to: 1
  1227  00016A  BA82               	btfsc	3970,5,c	;volatile
  1228                           
  1229                           ; BSR set to: 1
  1230  00016C  A882               	btfss	3970,4,c	;volatile
  1231  00016E  D004               	goto	l164
  1232                           
  1233                           ; BSR set to: 1
  1234  000170  AC82               	btfss	3970,6,c	;volatile
  1235  000172  D002               	goto	l164
  1236                           
  1237                           ; BSR set to: 1
  1238  000174  0E00               	movlw	0
  1239  000176  6FA9               	movwf	_loop$867& (0+255),b
  1240  000178                     l164:
  1241                           
  1242                           ; BSR set to: 1
  1243                           
  1244                           ; BSR set to: 1
  1245  000178  B1A9               	btfsc	_loop$867& (0+255),0,b
  1246  00017A  D002               	bra	u4935
  1247  00017C  9889               	bcf	3977,4,c	;volatile
  1248  00017E  D001               	bra	u4936
  1249  000180                     u4935:
  1250  000180  8889               	bsf	3977,4,c	;volatile
  1251  000182                     u4936:
  1252                           
  1253                           ;main.c: 110: break;
  1254  000182  0012               	return	
  1255  000184                     
  1256                           ; BSR set to: 1
  1257  000184  0E00               	movlw	0
  1258  000186  0101               	movlb	1	; () banked
  1259  000188  6F2D               	movwf	(_loop$870+1)& (0+255),b
  1260  00018A  0E00               	movlw	0
  1261  00018C  6F2C               	movwf	_loop$870& (0+255),b
  1262                           
  1263                           ; BSR set to: 1
  1264                           
  1265                           ; BSR set to: 1
  1266  00018E  C12C  F12A         	movff	_loop$870,_loop$869
  1267  000192  C12D  F12B         	movff	_loop$870+1,_loop$869+1
  1268                           
  1269                           ; BSR set to: 1
  1270                           
  1271                           ; BSR set to: 1
  1272                           
  1273                           ; BSR set to: 1
  1274                           
  1275                           ; BSR set to: 1
  1276  000196  C12A  F128         	movff	_loop$869,_loop$868
  1277  00019A  C12B  F129         	movff	_loop$869+1,_loop$868+1
  1278                           
  1279                           ; BSR set to: 1
  1280                           
  1281                           ; BSR set to: 1
  1282                           
  1283                           ; BSR set to: 1
  1284                           
  1285                           ; BSR set to: 1
  1286  00019E  5128               	movf	_loop$868& (0+255),w,b
  1287  0001A0  1129               	iorwf	(_loop$868+1)& (0+255),w,b
  1288  0001A2  A4D8               	btfss	status,2,c
  1289  0001A4  D005               	goto	l166
  1290                           
  1291                           ; BSR set to: 1
  1292                           ;main.c: 114: estado = MENU;
  1293  0001A6  0E00               	movlw	0
  1294  0001A8  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1295  0001AA  0E00               	movlw	0
  1296  0001AC  6FAE               	movwf	loop@estado& (0+255),b
  1297                           
  1298                           ;main.c: 115: break;
  1299  0001AE  0012               	return	
  1300  0001B0                     l166:
  1301                           
  1302                           ; BSR set to: 1
  1303                           ;main.c: 116: }
  1304                           ;main.c: 118: LATAbits.LA2 = 1;
  1305  0001B0  8489               	bsf	3977,2,c	;volatile
  1306                           
  1307                           ;main.c: 119: LATAbits.LA3 = 0;
  1308  0001B2  9689               	bcf	3977,3,c	;volatile
  1309                           
  1310                           ;main.c: 120: LATAbits.LA4 = 1;
  1311  0001B4  8889               	bsf	3977,4,c	;volatile
  1312                           
  1313                           ; BSR set to: 1
  1314                           ;main.c: 121: setMotores(1000, 1000);
  1315  0001B6  0E03               	movlw	3
  1316  0001B8  6E3E               	movwf	setMotores@dutyI+1,c
  1317  0001BA  0EE8               	movlw	232
  1318  0001BC  6E3D               	movwf	setMotores@dutyI,c
  1319  0001BE  0E03               	movlw	3
  1320  0001C0  6E40               	movwf	setMotores@dutyD+1,c
  1321  0001C2  0EE8               	movlw	232
  1322  0001C4  6E3F               	movwf	setMotores@dutyD,c
  1323  0001C6  EC88  F003         	call	_setMotores	;wreg free
  1324                           
  1325                           ;main.c: 122: break;
  1326  0001CA  0012               	return	
  1327  0001CC                     
  1328                           ;main.c: 125: if(millis() > (m + 4970)){
  1329  0001CC  ECC6  F006         	call	_millis	;wreg free
  1330  0001D0  0E6A               	movlw	106
  1331  0001D2  0101               	movlb	1	; () banked
  1332  0001D4  25AA               	addwf	loop@m& (0+255),w,b
  1333  0001D6  0100               	movlb	0	; () banked
  1334  0001D8  6F60               	movwf	??_loop& (0+255),b
  1335  0001DA  0E13               	movlw	19
  1336  0001DC  0101               	movlb	1	; () banked
  1337  0001DE  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  1338  0001E0  0100               	movlb	0	; () banked
  1339  0001E2  6F61               	movwf	(??_loop+1)& (0+255),b
  1340  0001E4  0E00               	movlw	0
  1341  0001E6  0101               	movlb	1	; () banked
  1342  0001E8  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  1343  0001EA  0100               	movlb	0	; () banked
  1344  0001EC  6F62               	movwf	(??_loop+2)& (0+255),b
  1345  0001EE  0E00               	movlw	0
  1346  0001F0  0101               	movlb	1	; () banked
  1347  0001F2  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  1348  0001F4  0100               	movlb	0	; () banked
  1349  0001F6  6F63               	movwf	(??_loop+3)& (0+255),b
  1350  0001F8  5013               	movf	?_millis,w,c
  1351  0001FA  5D60               	subwf	??_loop& (0+255),w,b
  1352  0001FC  5014               	movf	?_millis+1,w,c
  1353  0001FE  5961               	subwfb	(??_loop+1)& (0+255),w,b
  1354  000200  5015               	movf	?_millis+2,w,c
  1355  000202  5962               	subwfb	(??_loop+2)& (0+255),w,b
  1356  000204  5016               	movf	?_millis+3,w,c
  1357  000206  5963               	subwfb	(??_loop+3)& (0+255),w,b
  1358  000208  B0D8               	btfsc	status,0,c
  1359  00020A  D009               	goto	l180
  1360                           
  1361                           ; BSR set to: 0
  1362                           ;main.c: 126: estado = 1;
  1363  00020C  0E00               	movlw	0
  1364  00020E  0101               	movlb	1	; () banked
  1365  000210  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1366  000212  0E01               	movlw	1
  1367  000214  6FAE               	movwf	loop@estado& (0+255),b
  1368                           
  1369                           ; BSR set to: 1
  1370                           ;main.c: 127: LATAbits.LA2 = 0;
  1371  000216  9489               	bcf	3977,2,c	;volatile
  1372                           
  1373                           ; BSR set to: 1
  1374                           ;main.c: 128: LATAbits.LA3 = 0;
  1375  000218  9689               	bcf	3977,3,c	;volatile
  1376                           
  1377                           ; BSR set to: 1
  1378                           ;main.c: 129: LATAbits.LA4 = 1;
  1379  00021A  8889               	bsf	3977,4,c	;volatile
  1380                           
  1381                           ;main.c: 130: break;
  1382  00021C  0012               	return	
  1383  00021E                     l180:
  1384                           
  1385                           ;main.c: 131: }
  1386                           ;main.c: 133: setMotores(0, 0);
  1387                           
  1388                           ; BSR set to: 1
  1389  00021E  0E00               	movlw	0
  1390  000220  6E3E               	movwf	setMotores@dutyI+1,c
  1391  000222  0E00               	movlw	0
  1392  000224  6E3D               	movwf	setMotores@dutyI,c
  1393  000226  0E00               	movlw	0
  1394  000228  6E40               	movwf	setMotores@dutyD+1,c
  1395  00022A  0E00               	movlw	0
  1396  00022C  6E3F               	movwf	setMotores@dutyD,c
  1397  00022E  EC88  F003         	call	_setMotores	;wreg free
  1398                           
  1399                           ;main.c: 134: LATAbits.LA2 = 1;
  1400  000232  8489               	bsf	3977,2,c	;volatile
  1401                           
  1402                           ;main.c: 135: LATAbits.LA3 = millis() > (m + (4970 / 2));
  1403  000234  ECC6  F006         	call	_millis	;wreg free
  1404  000238  0EB5               	movlw	181
  1405  00023A  0101               	movlb	1	; () banked
  1406  00023C  25AA               	addwf	loop@m& (0+255),w,b
  1407  00023E  0100               	movlb	0	; () banked
  1408  000240  6F60               	movwf	??_loop& (0+255),b
  1409  000242  0E09               	movlw	9
  1410  000244  0101               	movlb	1	; () banked
  1411  000246  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  1412  000248  0100               	movlb	0	; () banked
  1413  00024A  6F61               	movwf	(??_loop+1)& (0+255),b
  1414  00024C  0E00               	movlw	0
  1415  00024E  0101               	movlb	1	; () banked
  1416  000250  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  1417  000252  0100               	movlb	0	; () banked
  1418  000254  6F62               	movwf	(??_loop+2)& (0+255),b
  1419  000256  0E00               	movlw	0
  1420  000258  0101               	movlb	1	; () banked
  1421  00025A  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  1422  00025C  0100               	movlb	0	; () banked
  1423  00025E  6F63               	movwf	(??_loop+3)& (0+255),b
  1424  000260  5013               	movf	?_millis,w,c
  1425  000262  5D60               	subwf	??_loop& (0+255),w,b
  1426  000264  5014               	movf	?_millis+1,w,c
  1427  000266  5961               	subwfb	(??_loop+1)& (0+255),w,b
  1428  000268  5015               	movf	?_millis+2,w,c
  1429  00026A  5962               	subwfb	(??_loop+2)& (0+255),w,b
  1430  00026C  5016               	movf	?_millis+3,w,c
  1431  00026E  5963               	subwfb	(??_loop+3)& (0+255),w,b
  1432  000270  B0D8               	btfsc	status,0,c
  1433  000272  D003               	goto	u5000
  1434  000274  6B64               	clrf	(??_loop+4)& (0+255),b
  1435  000276  2B64               	incf	(??_loop+4)& (0+255),f,b
  1436  000278  D002               	goto	u5018
  1437  00027A                     u5000:
  1438  00027A  0100               	movlb	0	; () banked
  1439  00027C  6B64               	clrf	(??_loop+4)& (0+255),b
  1440  00027E                     u5018:
  1441  00027E  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1442  000280  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1443  000282  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1444  000284  5089               	movf	3977,w,c	;volatile
  1445  000286  1964               	xorwf	(??_loop+4)& (0+255),w,b
  1446  000288  0BF7               	andlw	-9
  1447  00028A  1964               	xorwf	(??_loop+4)& (0+255),w,b
  1448  00028C  6E89               	movwf	3977,c	;volatile
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 136: LATAbits.LA4 = 0;
  1452  00028E  9889               	bcf	3977,4,c	;volatile
  1453                           
  1454                           ;main.c: 137: break;
  1455  000290  0012               	return	
  1456  000292                     
  1457                           ; BSR set to: 1
  1458  000292  B681               	btfsc	3969,3,c	;volatile
  1459  000294  D002               	goto	u5040
  1460  000296  0E01               	movlw	1
  1461  000298  D001               	goto	u5050
  1462  00029A                     u5040:
  1463  00029A  0E00               	movlw	0
  1464  00029C                     u5050:
  1465  00029C  0101               	movlb	1	; () banked
  1466  00029E  6F2E               	movwf	_loop$871& (0+255),b
  1467  0002A0  6B2F               	clrf	(_loop$871+1)& (0+255),b
  1468                           
  1469                           ; BSR set to: 1
  1470                           
  1471                           ; BSR set to: 1
  1472  0002A2  512E               	movf	_loop$871& (0+255),w,b
  1473  0002A4  112F               	iorwf	(_loop$871+1)& (0+255),w,b
  1474  0002A6  A4D8               	btfss	status,2,c
  1475  0002A8  D00F               	goto	u5110
  1476                           
  1477                           ; BSR set to: 1
  1478                           
  1479                           ; BSR set to: 1
  1480                           
  1481                           ; BSR set to: 1
  1482                           
  1483                           ; BSR set to: 1
  1484  0002AA  BC82               	btfsc	3970,6,c	;volatile
  1485  0002AC  D002               	goto	u5070
  1486  0002AE  0E01               	movlw	1
  1487  0002B0  D001               	goto	u5080
  1488  0002B2                     u5070:
  1489  0002B2  0E00               	movlw	0
  1490  0002B4                     u5080:
  1491  0002B4  6F34               	movwf	_loop$874& (0+255),b
  1492  0002B6  6B35               	clrf	(_loop$874+1)& (0+255),b
  1493                           
  1494                           ; BSR set to: 1
  1495                           
  1496                           ; BSR set to: 1
  1497  0002B8  C134  F132         	movff	_loop$874,_loop$873
  1498  0002BC  C135  F133         	movff	_loop$874+1,_loop$873+1
  1499                           
  1500                           ; BSR set to: 1
  1501                           
  1502                           ; BSR set to: 1
  1503                           
  1504                           ; BSR set to: 1
  1505                           
  1506                           ; BSR set to: 1
  1507  0002C0  5132               	movf	_loop$873& (0+255),w,b
  1508  0002C2  1133               	iorwf	(_loop$873+1)& (0+255),w,b
  1509  0002C4  B4D8               	btfsc	status,2,c
  1510  0002C6  D00F               	goto	l211
  1511  0002C8                     u5110:
  1512                           
  1513                           ; BSR set to: 1
  1514                           ;main.c: 141: estado = ATRAS;
  1515                           
  1516                           ; BSR set to: 1
  1517  0002C8  0E00               	movlw	0
  1518  0002CA  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1519  0002CC  0E0B               	movlw	11
  1520  0002CE  6FAE               	movwf	loop@estado& (0+255),b
  1521                           
  1522                           ; BSR set to: 1
  1523                           ;main.c: 142: m = millis();
  1524  0002D0  ECC6  F006         	call	_millis	;wreg free
  1525  0002D4  C013  F1AA         	movff	?_millis,loop@m
  1526  0002D8  C014  F1AB         	movff	?_millis+1,loop@m+1
  1527  0002DC  C015  F1AC         	movff	?_millis+2,loop@m+2
  1528  0002E0  C016  F1AD         	movff	?_millis+3,loop@m+3
  1529                           
  1530                           ;main.c: 143: break;
  1531  0002E4  0012               	return	
  1532  0002E6                     l211:
  1533                           
  1534                           ; BSR set to: 1
  1535  0002E6  B281               	btfsc	3969,1,c	;volatile
  1536  0002E8  D002               	goto	u5160
  1537  0002EA  0E01               	movlw	1
  1538  0002EC  D001               	goto	u5170
  1539  0002EE                     u5160:
  1540  0002EE  0E00               	movlw	0
  1541  0002F0                     u5170:
  1542  0002F0  0101               	movlb	1	; () banked
  1543  0002F2  6F3A               	movwf	_loop$877& (0+255),b
  1544  0002F4  6B3B               	clrf	(_loop$877+1)& (0+255),b
  1545                           
  1546                           ; BSR set to: 1
  1547                           
  1548                           ; BSR set to: 1
  1549  0002F6  C13A  F138         	movff	_loop$877,_loop$876
  1550  0002FA  C13B  F139         	movff	_loop$877+1,_loop$876+1
  1551                           
  1552                           ; BSR set to: 1
  1553                           
  1554                           ; BSR set to: 1
  1555                           
  1556                           ; BSR set to: 1
  1557                           
  1558                           ; BSR set to: 1
  1559  0002FE  C138  F136         	movff	_loop$876,_loop$875
  1560  000302  C139  F137         	movff	_loop$876+1,_loop$875+1
  1561                           
  1562                           ; BSR set to: 1
  1563                           ;main.c: 147: if((2 == 1 ? !PORTBbits.RB5 : (2 == 2 ? !PORTBbits.RB4 : (2 == 3 ? !PORTBb
      +                          its.RB1 : (2 == 4 ? !PORTCbits.RC5 : (2 == 5 ? !PORTCbits.RC4 : 0))))) == (4 == 1 ? !POR
      +                          TBbits.RB5 : (4 == 2 ? !PORTBbits.RB4 : (4 == 3 ? !PORTBbits.RB1 : (4 == 4 ? !PORTCbits.
  1564                           
  1565                           ; BSR set to: 1
  1566                           
  1567                           ; BSR set to: 1
  1568                           
  1569                           ; BSR set to: 1
  1570  000306  5136               	movf	_loop$875& (0+255),w,b
  1571  000308  1137               	iorwf	(_loop$875+1)& (0+255),w,b
  1572  00030A  B4D8               	btfsc	status,2,c
  1573  00030C  D05A               	goto	l311
  1574                           
  1575                           ; BSR set to: 1
  1576                           
  1577                           ; BSR set to: 1
  1578                           
  1579                           ; BSR set to: 1
  1580                           
  1581                           ; BSR set to: 1
  1582                           
  1583                           ; BSR set to: 1
  1584                           
  1585                           ; BSR set to: 1
  1586                           
  1587                           ; BSR set to: 1
  1588                           
  1589                           ; BSR set to: 1
  1590  00030E  BA82               	btfsc	3970,5,c	;volatile
  1591  000310  D002               	goto	u5250
  1592  000312  0E01               	movlw	1
  1593  000314  D001               	goto	u5260
  1594  000316                     u5250:
  1595  000316  0E00               	movlw	0
  1596  000318                     u5260:
  1597  000318  6F46               	movwf	_loop$883& (0+255),b
  1598  00031A  6B47               	clrf	(_loop$883+1)& (0+255),b
  1599                           
  1600                           ; BSR set to: 1
  1601                           
  1602                           ; BSR set to: 1
  1603  00031C  C146  F144         	movff	_loop$883,_loop$882
  1604  000320  C147  F145         	movff	_loop$883+1,_loop$882+1
  1605                           
  1606                           ; BSR set to: 1
  1607                           
  1608                           ; BSR set to: 1
  1609                           
  1610                           ; BSR set to: 1
  1611                           
  1612                           ; BSR set to: 1
  1613  000324  C144  F142         	movff	_loop$882,_loop$881
  1614  000328  C145  F143         	movff	_loop$882+1,_loop$881+1
  1615                           
  1616                           ; BSR set to: 1
  1617                           
  1618                           ; BSR set to: 1
  1619                           
  1620                           ; BSR set to: 1
  1621                           
  1622                           ; BSR set to: 1
  1623  00032C  C142  F140         	movff	_loop$881,_loop$880
  1624  000330  C143  F141         	movff	_loop$881+1,_loop$880+1
  1625                           
  1626                           ; BSR set to: 1
  1627                           
  1628                           ; BSR set to: 1
  1629                           
  1630                           ; BSR set to: 1
  1631                           
  1632                           ; BSR set to: 1
  1633                           
  1634                           ; BSR set to: 1
  1635                           
  1636                           ; BSR set to: 1
  1637                           
  1638                           ; BSR set to: 1
  1639                           
  1640                           ; BSR set to: 1
  1641                           
  1642                           ; BSR set to: 1
  1643                           
  1644                           ; BSR set to: 1
  1645                           
  1646                           ; BSR set to: 1
  1647                           
  1648                           ; BSR set to: 1
  1649                           
  1650                           ; BSR set to: 1
  1651                           
  1652                           ; BSR set to: 1
  1653                           
  1654                           ; BSR set to: 1
  1655                           
  1656                           ; BSR set to: 1
  1657                           
  1658                           ; BSR set to: 1
  1659                           
  1660                           ; BSR set to: 1
  1661  000334  B881               	btfsc	3969,4,c	;volatile
  1662  000336  D002               	goto	u5390
  1663  000338  0E01               	movlw	1
  1664  00033A  D001               	goto	u5400
  1665  00033C                     u5390:
  1666  00033C  0E00               	movlw	0
  1667  00033E                     u5400:
  1668  00033E  6F4C               	movwf	_loop$886& (0+255),b
  1669  000340  6B4D               	clrf	(_loop$886+1)& (0+255),b
  1670                           
  1671                           ; BSR set to: 1
  1672                           
  1673                           ; BSR set to: 1
  1674  000342  C14C  F14A         	movff	_loop$886,_loop$885
  1675  000346  C14D  F14B         	movff	_loop$886+1,_loop$885+1
  1676                           
  1677                           ; BSR set to: 1
  1678                           
  1679                           ; BSR set to: 1
  1680                           
  1681                           ; BSR set to: 1
  1682                           
  1683                           ; BSR set to: 1
  1684  00034A  5140               	movf	_loop$880& (0+255),w,b
  1685  00034C  194A               	xorwf	_loop$885& (0+255),w,b
  1686  00034E  E109               	bnz	l3029
  1687  000350  5141               	movf	(_loop$880+1)& (0+255),w,b
  1688  000352  194B               	xorwf	(_loop$885+1)& (0+255),w,b
  1689  000354  A4D8               	btfss	status,2,c
  1690  000356  D005               	goto	l269
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;main.c: 148: estado = ATAQUE;
  1694  000358  0E00               	movlw	0
  1695  00035A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1696  00035C  0E04               	movlw	4
  1697  00035E  6FAE               	movwf	loop@estado& (0+255),b
  1698                           
  1699                           ;main.c: 149: break;
  1700  000360  0012               	return	
  1701  000362                     l269:
  1702  000362                     l3029:
  1703                           
  1704                           ; BSR set to: 1
  1705  000362  B881               	btfsc	3969,4,c	;volatile
  1706  000364  D002               	goto	u5500
  1707  000366  0E01               	movlw	1
  1708  000368  D001               	goto	u5510
  1709  00036A                     u5500:
  1710  00036A  0E00               	movlw	0
  1711  00036C                     u5510:
  1712  00036C  6F56               	movwf	_loop$891& (0+255),b
  1713  00036E  6B57               	clrf	(_loop$891+1)& (0+255),b
  1714                           
  1715                           ; BSR set to: 1
  1716                           
  1717                           ; BSR set to: 1
  1718  000370  C156  F154         	movff	_loop$891,_loop$890
  1719  000374  C157  F155         	movff	_loop$891+1,_loop$890+1
  1720                           
  1721                           ; BSR set to: 1
  1722                           
  1723                           ; BSR set to: 1
  1724                           
  1725                           ; BSR set to: 1
  1726                           
  1727                           ; BSR set to: 1
  1728  000378  5154               	movf	_loop$890& (0+255),w,b
  1729  00037A  1155               	iorwf	(_loop$890+1)& (0+255),w,b
  1730  00037C  B4D8               	btfsc	status,2,c
  1731  00037E  D005               	goto	l298
  1732                           
  1733                           ; BSR set to: 1
  1734                           ;main.c: 153: estado = IZQAV;
  1735  000380  0E00               	movlw	0
  1736  000382  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1737  000384  0E0A               	movlw	10
  1738  000386  6FAE               	movwf	loop@estado& (0+255),b
  1739                           
  1740                           ;main.c: 154: break;
  1741  000388  0012               	return	
  1742  00038A                     l298:
  1743                           
  1744                           ; BSR set to: 1
  1745                           
  1746                           ; BSR set to: 1
  1747  00038A  BA82               	btfsc	3970,5,c	;volatile
  1748  00038C  D002               	goto	u5570
  1749  00038E  0E01               	movlw	1
  1750  000390  D001               	goto	u5580
  1751  000392                     u5570:
  1752  000392  0E00               	movlw	0
  1753  000394                     u5580:
  1754  000394  6F64               	movwf	_loop$898& (0+255),b
  1755  000396  6B65               	clrf	(_loop$898+1)& (0+255),b
  1756                           
  1757                           ; BSR set to: 1
  1758                           
  1759                           ; BSR set to: 1
  1760  000398  C164  F162         	movff	_loop$898,_loop$897
  1761  00039C  C165  F163         	movff	_loop$898+1,_loop$897+1
  1762                           
  1763                           ; BSR set to: 1
  1764                           
  1765                           ; BSR set to: 1
  1766                           
  1767                           ; BSR set to: 1
  1768                           
  1769                           ; BSR set to: 1
  1770  0003A0  C162  F160         	movff	_loop$897,_loop$896
  1771  0003A4  C163  F161         	movff	_loop$897+1,_loop$896+1
  1772                           
  1773                           ; BSR set to: 1
  1774                           
  1775                           ; BSR set to: 1
  1776                           
  1777                           ; BSR set to: 1
  1778                           
  1779                           ; BSR set to: 1
  1780  0003A8  C160  F15E         	movff	_loop$896,_loop$895
  1781  0003AC  C161  F15F         	movff	_loop$896+1,_loop$895+1
  1782                           
  1783                           ; BSR set to: 1
  1784                           
  1785                           ; BSR set to: 1
  1786                           
  1787                           ; BSR set to: 1
  1788                           
  1789                           ; BSR set to: 1
  1790  0003B0  515E               	movf	_loop$895& (0+255),w,b
  1791  0003B2  115F               	iorwf	(_loop$895+1)& (0+255),w,b
  1792  0003B4  B4D8               	btfsc	status,2,c
  1793  0003B6  D005               	goto	l311
  1794                           
  1795                           ; BSR set to: 1
  1796                           ;main.c: 158: estado = DERAV;
  1797  0003B8  0E00               	movlw	0
  1798  0003BA  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1799  0003BC  0E07               	movlw	7
  1800  0003BE  6FAE               	movwf	loop@estado& (0+255),b
  1801                           
  1802                           ;main.c: 159: break;
  1803  0003C0  0012               	return	
  1804  0003C2                     l311:
  1805                           
  1806                           ; BSR set to: 1
  1807                           
  1808                           ; BSR set to: 1
  1809  0003C2  B881               	btfsc	3969,4,c	;volatile
  1810  0003C4  D002               	goto	u5720
  1811  0003C6  0E01               	movlw	1
  1812  0003C8  D001               	goto	u5730
  1813  0003CA                     u5720:
  1814  0003CA  0E00               	movlw	0
  1815  0003CC                     u5730:
  1816  0003CC  6F6A               	movwf	_loop$901& (0+255),b
  1817  0003CE  6B6B               	clrf	(_loop$901+1)& (0+255),b
  1818                           
  1819                           ; BSR set to: 1
  1820                           
  1821                           ; BSR set to: 1
  1822  0003D0  C16A  F168         	movff	_loop$901,_loop$900
  1823  0003D4  C16B  F169         	movff	_loop$901+1,_loop$900+1
  1824                           
  1825                           ; BSR set to: 1
  1826                           
  1827                           ; BSR set to: 1
  1828                           
  1829                           ; BSR set to: 1
  1830                           
  1831                           ; BSR set to: 1
  1832  0003D8  5168               	movf	_loop$900& (0+255),w,b
  1833  0003DA  1169               	iorwf	(_loop$900+1)& (0+255),w,b
  1834  0003DC  B4D8               	btfsc	status,2,c
  1835  0003DE  D005               	goto	l340
  1836                           
  1837                           ; BSR set to: 1
  1838                           ;main.c: 164: estado = IZQA;
  1839  0003E0  0E00               	movlw	0
  1840  0003E2  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1841  0003E4  0E09               	movlw	9
  1842  0003E6  6FAE               	movwf	loop@estado& (0+255),b
  1843                           
  1844                           ;main.c: 165: break;
  1845  0003E8  0012               	return	
  1846  0003EA                     l340:
  1847                           
  1848                           ; BSR set to: 1
  1849                           
  1850                           ; BSR set to: 1
  1851  0003EA  BA82               	btfsc	3970,5,c	;volatile
  1852  0003EC  D002               	goto	u5790
  1853  0003EE  0E01               	movlw	1
  1854  0003F0  D001               	goto	u5800
  1855  0003F2                     u5790:
  1856  0003F2  0E00               	movlw	0
  1857  0003F4                     u5800:
  1858  0003F4  6F78               	movwf	_loop$908& (0+255),b
  1859  0003F6  6B79               	clrf	(_loop$908+1)& (0+255),b
  1860                           
  1861                           ; BSR set to: 1
  1862                           
  1863                           ; BSR set to: 1
  1864  0003F8  C178  F176         	movff	_loop$908,_loop$907
  1865  0003FC  C179  F177         	movff	_loop$908+1,_loop$907+1
  1866                           
  1867                           ; BSR set to: 1
  1868                           
  1869                           ; BSR set to: 1
  1870                           
  1871                           ; BSR set to: 1
  1872                           
  1873                           ; BSR set to: 1
  1874  000400  C176  F174         	movff	_loop$907,_loop$906
  1875  000404  C177  F175         	movff	_loop$907+1,_loop$906+1
  1876                           
  1877                           ; BSR set to: 1
  1878                           
  1879                           ; BSR set to: 1
  1880                           
  1881                           ; BSR set to: 1
  1882                           
  1883                           ; BSR set to: 1
  1884  000408  C174  F172         	movff	_loop$906,_loop$905
  1885  00040C  C175  F173         	movff	_loop$906+1,_loop$905+1
  1886                           
  1887                           ; BSR set to: 1
  1888                           
  1889                           ; BSR set to: 1
  1890                           
  1891                           ; BSR set to: 1
  1892                           
  1893                           ; BSR set to: 1
  1894  000410  5172               	movf	_loop$905& (0+255),w,b
  1895  000412  1173               	iorwf	(_loop$905+1)& (0+255),w,b
  1896  000414  B4D8               	btfsc	status,2,c
  1897  000416  D005               	goto	l349
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;main.c: 169: estado = DERA;
  1901  000418  0E00               	movlw	0
  1902  00041A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1903  00041C  0E06               	movlw	6
  1904  00041E  6FAE               	movwf	loop@estado& (0+255),b
  1905                           
  1906                           ;main.c: 170: break;
  1907  000420  0012               	return	
  1908  000422                     l349:
  1909                           
  1910                           ; BSR set to: 1
  1911                           
  1912                           ; BSR set to: 1
  1913  000422  BA81               	btfsc	3969,5,c	;volatile
  1914  000424  D002               	goto	u5960
  1915  000426  0E01               	movlw	1
  1916  000428  D001               	goto	u5970
  1917  00042A                     u5960:
  1918  00042A  0E00               	movlw	0
  1919  00042C                     u5970:
  1920  00042C  6F7C               	movwf	_loop$910& (0+255),b
  1921  00042E  6B7D               	clrf	(_loop$910+1)& (0+255),b
  1922                           
  1923                           ; BSR set to: 1
  1924                           
  1925                           ; BSR set to: 1
  1926  000430  517C               	movf	_loop$910& (0+255),w,b
  1927  000432  117D               	iorwf	(_loop$910+1)& (0+255),w,b
  1928  000434  B4D8               	btfsc	status,2,c
  1929  000436  D005               	goto	l386
  1930                           
  1931                           ; BSR set to: 1
  1932                           ;main.c: 174: estado = IZQ;
  1933  000438  0E00               	movlw	0
  1934  00043A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  1935  00043C  0E08               	movlw	8
  1936  00043E  6FAE               	movwf	loop@estado& (0+255),b
  1937                           
  1938                           ;main.c: 175: break;
  1939  000440  0012               	return	
  1940  000442                     l386:
  1941                           
  1942                           ; BSR set to: 1
  1943                           
  1944                           ; BSR set to: 1
  1945  000442  B882               	btfsc	3970,4,c	;volatile
  1946  000444  D002               	goto	u5990
  1947  000446  0E01               	movlw	1
  1948  000448  D001               	goto	u6000
  1949  00044A                     u5990:
  1950  00044A  0E00               	movlw	0
  1951  00044C                     u6000:
  1952  00044C  6F8E               	movwf	_loop$919& (0+255),b
  1953  00044E  6B8F               	clrf	(_loop$919+1)& (0+255),b
  1954                           
  1955                           ; BSR set to: 1
  1956                           
  1957                           ; BSR set to: 1
  1958  000450  C18E  F18C         	movff	_loop$919,_loop$918
  1959  000454  C18F  F18D         	movff	_loop$919+1,_loop$918+1
  1960                           
  1961                           ; BSR set to: 1
  1962                           
  1963                           ; BSR set to: 1
  1964                           
  1965                           ; BSR set to: 1
  1966                           
  1967                           ; BSR set to: 1
  1968  000458  C18C  F18A         	movff	_loop$918,_loop$917
  1969  00045C  C18D  F18B         	movff	_loop$918+1,_loop$917+1
  1970                           
  1971                           ; BSR set to: 1
  1972                           
  1973                           ; BSR set to: 1
  1974                           
  1975                           ; BSR set to: 1
  1976                           
  1977                           ; BSR set to: 1
  1978  000460  C18A  F188         	movff	_loop$917,_loop$916
  1979  000464  C18B  F189         	movff	_loop$917+1,_loop$916+1
  1980                           
  1981                           ; BSR set to: 1
  1982                           
  1983                           ; BSR set to: 1
  1984                           
  1985                           ; BSR set to: 1
  1986                           
  1987                           ; BSR set to: 1
  1988  000468  C188  F186         	movff	_loop$916,_loop$915
  1989  00046C  C189  F187         	movff	_loop$916+1,_loop$915+1
  1990                           
  1991                           ; BSR set to: 1
  1992                           
  1993                           ; BSR set to: 1
  1994                           
  1995                           ; BSR set to: 1
  1996                           
  1997                           ; BSR set to: 1
  1998  000470  5186               	movf	_loop$915& (0+255),w,b
  1999  000472  1187               	iorwf	(_loop$915+1)& (0+255),w,b
  2000  000474  B4D8               	btfsc	status,2,c
  2001  000476  D005               	goto	l368
  2002                           
  2003                           ; BSR set to: 1
  2004                           ;main.c: 179: estado = DER;
  2005  000478  0E00               	movlw	0
  2006  00047A  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2007  00047C  0E05               	movlw	5
  2008  00047E  6FAE               	movwf	loop@estado& (0+255),b
  2009                           
  2010                           ;main.c: 180: break;
  2011  000480  0012               	return	
  2012  000482                     l368:
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;main.c: 181: }
  2016                           ;main.c: 183: estado = direccion;
  2017  000482  C1B0  F1AE         	movff	loop@direccion,loop@estado
  2018  000486  C1B1  F1AF         	movff	loop@direccion+1,loop@estado+1
  2019                           
  2020                           ;main.c: 184: break;
  2021  00048A  0012               	return	
  2022  00048C                     
  2023                           ;main.c: 187: setMotores(1000, 1000);
  2024                           
  2025                           ; BSR set to: 1
  2026  00048C  0E03               	movlw	3
  2027  00048E  6E3E               	movwf	setMotores@dutyI+1,c
  2028  000490  0EE8               	movlw	232
  2029  000492  6E3D               	movwf	setMotores@dutyI,c
  2030  000494  0E03               	movlw	3
  2031  000496  6E40               	movwf	setMotores@dutyD+1,c
  2032  000498  0EE8               	movlw	232
  2033  00049A  6E3F               	movwf	setMotores@dutyD,c
  2034  00049C  EC88  F003         	call	_setMotores	;wreg free
  2035                           
  2036                           ;main.c: 188: estado = ANALISIS;
  2037  0004A0  0E00               	movlw	0
  2038  0004A2  0101               	movlb	1	; () banked
  2039  0004A4  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2040  0004A6  0E03               	movlw	3
  2041  0004A8  6FAE               	movwf	loop@estado& (0+255),b
  2042                           
  2043                           ;main.c: 189: break;
  2044  0004AA  0012               	return	
  2045  0004AC                     
  2046                           ;main.c: 192: setMotores(1000, 1000 / 2);
  2047                           
  2048                           ; BSR set to: 1
  2049  0004AC  0E03               	movlw	3
  2050  0004AE  6E3E               	movwf	setMotores@dutyI+1,c
  2051  0004B0  0EE8               	movlw	232
  2052  0004B2  6E3D               	movwf	setMotores@dutyI,c
  2053  0004B4  0E01               	movlw	1
  2054  0004B6  6E40               	movwf	setMotores@dutyD+1,c
  2055  0004B8  0EF4               	movlw	244
  2056  0004BA  6E3F               	movwf	setMotores@dutyD,c
  2057  0004BC  EC88  F003         	call	_setMotores	;wreg free
  2058                           
  2059                           ;main.c: 193: direccion = DER;
  2060  0004C0  0E00               	movlw	0
  2061  0004C2  0101               	movlb	1	; () banked
  2062  0004C4  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2063  0004C6  0E05               	movlw	5
  2064  0004C8  6FB0               	movwf	loop@direccion& (0+255),b
  2065                           
  2066                           ; BSR set to: 1
  2067                           ;main.c: 194: estado = ANALISIS;
  2068  0004CA  0E00               	movlw	0
  2069  0004CC  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2070  0004CE  0E03               	movlw	3
  2071  0004D0  6FAE               	movwf	loop@estado& (0+255),b
  2072                           
  2073                           ;main.c: 195: break;
  2074  0004D2  0012               	return	
  2075  0004D4                     
  2076                           ;main.c: 198: setMotores(1000 / 2, 1000);
  2077                           
  2078                           ; BSR set to: 1
  2079  0004D4  0E01               	movlw	1
  2080  0004D6  6E3E               	movwf	setMotores@dutyI+1,c
  2081  0004D8  0EF4               	movlw	244
  2082  0004DA  6E3D               	movwf	setMotores@dutyI,c
  2083  0004DC  0E03               	movlw	3
  2084  0004DE  6E40               	movwf	setMotores@dutyD+1,c
  2085  0004E0  0EE8               	movlw	232
  2086  0004E2  6E3F               	movwf	setMotores@dutyD,c
  2087  0004E4  EC88  F003         	call	_setMotores	;wreg free
  2088                           
  2089                           ;main.c: 199: direccion = IZQ;
  2090  0004E8  0E00               	movlw	0
  2091  0004EA  0101               	movlb	1	; () banked
  2092  0004EC  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2093  0004EE  0E08               	movlw	8
  2094  0004F0  6FB0               	movwf	loop@direccion& (0+255),b
  2095                           
  2096                           ; BSR set to: 1
  2097                           ;main.c: 200: estado = ANALISIS;
  2098  0004F2  0E00               	movlw	0
  2099  0004F4  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2100  0004F6  0E03               	movlw	3
  2101  0004F8  6FAE               	movwf	loop@estado& (0+255),b
  2102                           
  2103                           ;main.c: 201: break;
  2104  0004FA  0012               	return	
  2105  0004FC                     
  2106                           ;main.c: 204: if(millis() > (m + 200)){
  2107                           
  2108                           ; BSR set to: 1
  2109  0004FC  ECC6  F006         	call	_millis	;wreg free
  2110  000500  0EC8               	movlw	200
  2111  000502  0101               	movlb	1	; () banked
  2112  000504  25AA               	addwf	loop@m& (0+255),w,b
  2113  000506  0100               	movlb	0	; () banked
  2114  000508  6F60               	movwf	??_loop& (0+255),b
  2115  00050A  0E00               	movlw	0
  2116  00050C  0101               	movlb	1	; () banked
  2117  00050E  21AB               	addwfc	(loop@m+1)& (0+255),w,b
  2118  000510  0100               	movlb	0	; () banked
  2119  000512  6F61               	movwf	(??_loop+1)& (0+255),b
  2120  000514  0E00               	movlw	0
  2121  000516  0101               	movlb	1	; () banked
  2122  000518  21AC               	addwfc	(loop@m+2)& (0+255),w,b
  2123  00051A  0100               	movlb	0	; () banked
  2124  00051C  6F62               	movwf	(??_loop+2)& (0+255),b
  2125  00051E  0E00               	movlw	0
  2126  000520  0101               	movlb	1	; () banked
  2127  000522  21AD               	addwfc	(loop@m+3)& (0+255),w,b
  2128  000524  0100               	movlb	0	; () banked
  2129  000526  6F63               	movwf	(??_loop+3)& (0+255),b
  2130  000528  5013               	movf	?_millis,w,c
  2131  00052A  5D60               	subwf	??_loop& (0+255),w,b
  2132  00052C  5014               	movf	?_millis+1,w,c
  2133  00052E  5961               	subwfb	(??_loop+1)& (0+255),w,b
  2134  000530  5015               	movf	?_millis+2,w,c
  2135  000532  5962               	subwfb	(??_loop+2)& (0+255),w,b
  2136  000534  5016               	movf	?_millis+3,w,c
  2137  000536  5963               	subwfb	(??_loop+3)& (0+255),w,b
  2138  000538  B0D8               	btfsc	status,0,c
  2139  00053A  D006               	goto	l393
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;main.c: 205: estado = ANALISIS;
  2143  00053C  0E00               	movlw	0
  2144  00053E  0101               	movlb	1	; () banked
  2145  000540  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2146  000542  0E03               	movlw	3
  2147  000544  6FAE               	movwf	loop@estado& (0+255),b
  2148                           
  2149                           ;main.c: 206: break;
  2150  000546  0012               	return	
  2151  000548                     l393:
  2152                           
  2153                           ;main.c: 207: }
  2154                           ;main.c: 209: setMotores(-1000, -1000);
  2155                           
  2156                           ; BSR set to: 1
  2157  000548  0EFC               	movlw	252
  2158  00054A  6E3E               	movwf	setMotores@dutyI+1,c
  2159  00054C  0E18               	movlw	24
  2160  00054E  6E3D               	movwf	setMotores@dutyI,c
  2161  000550  0EFC               	movlw	252
  2162  000552  6E40               	movwf	setMotores@dutyD+1,c
  2163  000554  0E18               	movlw	24
  2164  000556  6E3F               	movwf	setMotores@dutyD,c
  2165  000558  EC88  F003         	call	_setMotores	;wreg free
  2166                           
  2167                           ;main.c: 210: break;
  2168  00055C  0012               	return	
  2169  00055E                     
  2170                           ;main.c: 213: setMotores(0, 1000);
  2171  00055E  0E00               	movlw	0
  2172  000560  6E3E               	movwf	setMotores@dutyI+1,c
  2173  000562  0E00               	movlw	0
  2174  000564  6E3D               	movwf	setMotores@dutyI,c
  2175  000566  0E03               	movlw	3
  2176  000568  6E40               	movwf	setMotores@dutyD+1,c
  2177  00056A  0EE8               	movlw	232
  2178  00056C  6E3F               	movwf	setMotores@dutyD,c
  2179  00056E  EC88  F003         	call	_setMotores	;wreg free
  2180                           
  2181                           ;main.c: 214: direccion = IZQ;
  2182  000572  0E00               	movlw	0
  2183  000574  0101               	movlb	1	; () banked
  2184  000576  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2185  000578  0E08               	movlw	8
  2186  00057A  6FB0               	movwf	loop@direccion& (0+255),b
  2187                           
  2188                           ; BSR set to: 1
  2189                           ;main.c: 215: estado = ANALISIS;
  2190  00057C  0E00               	movlw	0
  2191  00057E  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2192  000580  0E03               	movlw	3
  2193  000582  6FAE               	movwf	loop@estado& (0+255),b
  2194                           
  2195                           ;main.c: 216: break;
  2196  000584  0012               	return	
  2197  000586                     
  2198                           ;main.c: 219: setMotores(1000, 0);
  2199                           
  2200                           ; BSR set to: 1
  2201  000586  0E03               	movlw	3
  2202  000588  6E3E               	movwf	setMotores@dutyI+1,c
  2203  00058A  0EE8               	movlw	232
  2204  00058C  6E3D               	movwf	setMotores@dutyI,c
  2205  00058E  0E00               	movlw	0
  2206  000590  6E40               	movwf	setMotores@dutyD+1,c
  2207  000592  0E00               	movlw	0
  2208  000594  6E3F               	movwf	setMotores@dutyD,c
  2209  000596  EC88  F003         	call	_setMotores	;wreg free
  2210                           
  2211                           ;main.c: 220: direccion = DER;
  2212  00059A  0E00               	movlw	0
  2213  00059C  0101               	movlb	1	; () banked
  2214  00059E  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2215  0005A0  0E05               	movlw	5
  2216  0005A2  6FB0               	movwf	loop@direccion& (0+255),b
  2217                           
  2218                           ; BSR set to: 1
  2219                           ;main.c: 221: estado = ANALISIS;
  2220  0005A4  0E00               	movlw	0
  2221  0005A6  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2222  0005A8  0E03               	movlw	3
  2223  0005AA  6FAE               	movwf	loop@estado& (0+255),b
  2224                           
  2225                           ;main.c: 222: break;
  2226  0005AC  0012               	return	
  2227  0005AE                     
  2228                           ;main.c: 225: setMotores(-700, 700);
  2229                           
  2230                           ; BSR set to: 1
  2231  0005AE  0EFD               	movlw	253
  2232  0005B0  6E3E               	movwf	setMotores@dutyI+1,c
  2233  0005B2  0E44               	movlw	68
  2234  0005B4  6E3D               	movwf	setMotores@dutyI,c
  2235  0005B6  0E02               	movlw	2
  2236  0005B8  6E40               	movwf	setMotores@dutyD+1,c
  2237  0005BA  0EBC               	movlw	188
  2238  0005BC  6E3F               	movwf	setMotores@dutyD,c
  2239  0005BE  EC88  F003         	call	_setMotores	;wreg free
  2240                           
  2241                           ;main.c: 226: direccion = IZQ;
  2242  0005C2  0E00               	movlw	0
  2243  0005C4  0101               	movlb	1	; () banked
  2244  0005C6  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2245  0005C8  0E08               	movlw	8
  2246  0005CA  6FB0               	movwf	loop@direccion& (0+255),b
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;main.c: 227: estado = ANALISIS;
  2250  0005CC  0E00               	movlw	0
  2251  0005CE  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2252  0005D0  0E03               	movlw	3
  2253  0005D2  6FAE               	movwf	loop@estado& (0+255),b
  2254                           
  2255                           ;main.c: 228: break;
  2256  0005D4  0012               	return	
  2257  0005D6                     
  2258                           ;main.c: 231: setMotores(700, -700);
  2259                           
  2260                           ; BSR set to: 1
  2261  0005D6  0E02               	movlw	2
  2262  0005D8  6E3E               	movwf	setMotores@dutyI+1,c
  2263  0005DA  0EBC               	movlw	188
  2264  0005DC  6E3D               	movwf	setMotores@dutyI,c
  2265  0005DE  0EFD               	movlw	253
  2266  0005E0  6E40               	movwf	setMotores@dutyD+1,c
  2267  0005E2  0E44               	movlw	68
  2268  0005E4  6E3F               	movwf	setMotores@dutyD,c
  2269  0005E6  EC88  F003         	call	_setMotores	;wreg free
  2270                           
  2271                           ;main.c: 232: direccion = DER;
  2272  0005EA  0E00               	movlw	0
  2273  0005EC  0101               	movlb	1	; () banked
  2274  0005EE  6FB1               	movwf	(loop@direccion+1)& (0+255),b
  2275  0005F0  0E05               	movlw	5
  2276  0005F2  6FB0               	movwf	loop@direccion& (0+255),b
  2277                           
  2278                           ; BSR set to: 1
  2279                           ;main.c: 233: estado = ANALISIS;
  2280  0005F4  0E00               	movlw	0
  2281  0005F6  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2282  0005F8  0E03               	movlw	3
  2283  0005FA  6FAE               	movwf	loop@estado& (0+255),b
  2284                           
  2285                           ;main.c: 234: break;
  2286  0005FC  0012               	return	
  2287  0005FE                     
  2288                           ;main.c: 237: LATAbits.LA2 = !PORTBbits.RB3;
  2289                           
  2290                           ; BSR set to: 1
  2291  0005FE  B681               	btfsc	3969,3,c	;volatile
  2292  000600  D004               	goto	u6110
  2293  000602  0100               	movlb	0	; () banked
  2294  000604  6B60               	clrf	??_loop& (0+255),b
  2295  000606  2B60               	incf	??_loop& (0+255),f,b
  2296  000608  D002               	goto	u6128
  2297  00060A                     u6110:
  2298  00060A  0100               	movlb	0	; () banked
  2299  00060C  6B60               	clrf	??_loop& (0+255),b
  2300  00060E                     u6128:
  2301  00060E  4760               	rlncf	??_loop& (0+255),f,b
  2302  000610  4760               	rlncf	??_loop& (0+255),f,b
  2303  000612  5089               	movf	3977,w,c	;volatile
  2304  000614  1960               	xorwf	??_loop& (0+255),w,b
  2305  000616  0BFB               	andlw	-5
  2306  000618  1960               	xorwf	??_loop& (0+255),w,b
  2307  00061A  6E89               	movwf	3977,c	;volatile
  2308                           
  2309                           ;main.c: 238: LATAbits.LA4 = !PORTCbits.RC6;
  2310  00061C  BC82               	btfsc	3970,6,c	;volatile
  2311  00061E  D003               	goto	u6130
  2312  000620  6B60               	clrf	??_loop& (0+255),b
  2313  000622  2B60               	incf	??_loop& (0+255),f,b
  2314  000624  D002               	goto	u6148
  2315  000626                     u6130:
  2316  000626  0100               	movlb	0	; () banked
  2317  000628  6B60               	clrf	??_loop& (0+255),b
  2318  00062A                     u6148:
  2319  00062A  3B60               	swapf	??_loop& (0+255),f,b
  2320  00062C  5089               	movf	3977,w,c	;volatile
  2321  00062E  1960               	xorwf	??_loop& (0+255),w,b
  2322  000630  0BEF               	andlw	-17
  2323  000632  1960               	xorwf	??_loop& (0+255),w,b
  2324  000634  6E89               	movwf	3977,c	;volatile
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;main.c: 239: LATAbits.LA3 = 1;
  2328  000636  8689               	bsf	3977,3,c	;volatile
  2329                           
  2330                           ; BSR set to: 1
  2331                           
  2332                           ; BSR set to: 1
  2333                           
  2334                           ; BSR set to: 1
  2335                           
  2336                           ; BSR set to: 1
  2337                           
  2338                           ; BSR set to: 1
  2339                           
  2340                           ; BSR set to: 1
  2341                           
  2342                           ; BSR set to: 1
  2343                           
  2344                           ; BSR set to: 1
  2345                           
  2346                           ; BSR set to: 1
  2347                           
  2348                           ; BSR set to: 0
  2349                           
  2350                           ;main.c: 240: if((1 == 1 ? !PORTAbits.RA1 : (1 == 2 ? !PORTAbits.RA5 : (1 == 0 ? 0 : 0))
      +                          ) || (2 == 1 ? !PORTAbits.RA1 : (2 == 2 ? !PORTAbits.RA5 : (2 == 0 ? 0 : 0)))){
  2351  000638  B280               	btfsc	3968,1,c	;volatile
  2352  00063A  D002               	goto	u6170
  2353  00063C  0E01               	movlw	1
  2354  00063E  D001               	goto	u6180
  2355  000640                     u6170:
  2356  000640  0E00               	movlw	0
  2357  000642                     u6180:
  2358  000642  0101               	movlb	1	; () banked
  2359  000644  6F90               	movwf	_loop$920& (0+255),b
  2360  000646  6B91               	clrf	(_loop$920+1)& (0+255),b
  2361                           
  2362                           ; BSR set to: 1
  2363                           
  2364                           ; BSR set to: 1
  2365  000648  5190               	movf	_loop$920& (0+255),w,b
  2366  00064A  1191               	iorwf	(_loop$920+1)& (0+255),w,b
  2367  00064C  A4D8               	btfss	status,2,c
  2368  00064E  D00F               	goto	l429
  2369                           
  2370                           ; BSR set to: 1
  2371                           
  2372                           ; BSR set to: 1
  2373                           
  2374                           ; BSR set to: 1
  2375                           
  2376                           ; BSR set to: 1
  2377                           
  2378                           ; BSR set to: 1
  2379                           
  2380                           ; BSR set to: 1
  2381                           
  2382                           ; BSR set to: 1
  2383                           
  2384                           ; BSR set to: 1
  2385  000650  BA80               	btfsc	3968,5,c	;volatile
  2386  000652  D002               	goto	u6200
  2387  000654  0E01               	movlw	1
  2388  000656  D001               	goto	u6210
  2389  000658                     u6200:
  2390  000658  0E00               	movlw	0
  2391  00065A                     u6210:
  2392  00065A  6F98               	movwf	_loop$924& (0+255),b
  2393  00065C  6B99               	clrf	(_loop$924+1)& (0+255),b
  2394                           
  2395                           ; BSR set to: 1
  2396                           
  2397                           ; BSR set to: 1
  2398  00065E  C198  F196         	movff	_loop$924,_loop$923
  2399  000662  C199  F197         	movff	_loop$924+1,_loop$923+1
  2400                           
  2401                           ; BSR set to: 1
  2402                           
  2403                           ; BSR set to: 1
  2404                           
  2405                           ; BSR set to: 1
  2406                           
  2407                           ; BSR set to: 1
  2408  000666  5196               	movf	_loop$923& (0+255),w,b
  2409  000668  1197               	iorwf	(_loop$923+1)& (0+255),w,b
  2410  00066A  B4D8               	btfsc	status,2,c
  2411  00066C  0012               	return	
  2412  00066E                     l429:
  2413                           
  2414                           ; BSR set to: 1
  2415                           
  2416                           ; BSR set to: 1
  2417  00066E  B280               	btfsc	3968,1,c	;volatile
  2418  000670  D002               	goto	u6270
  2419  000672  0E01               	movlw	1
  2420  000674  D001               	goto	u6280
  2421  000676                     u6270:
  2422  000676  0E00               	movlw	0
  2423  000678                     u6280:
  2424  000678  6F9C               	movwf	_loop$926& (0+255),b
  2425  00067A  6B9D               	clrf	(_loop$926+1)& (0+255),b
  2426                           
  2427                           ; BSR set to: 1
  2428                           
  2429                           ; BSR set to: 1
  2430  00067C  519C               	movf	_loop$926& (0+255),w,b
  2431  00067E  119D               	iorwf	(_loop$926+1)& (0+255),w,b
  2432  000680  A4D8               	btfss	status,2,c
  2433  000682  D7F5               	goto	l429
  2434                           
  2435                           ; BSR set to: 1
  2436                           
  2437                           ; BSR set to: 1
  2438                           
  2439                           ; BSR set to: 1
  2440                           
  2441                           ; BSR set to: 1
  2442                           
  2443                           ; BSR set to: 1
  2444                           
  2445                           ; BSR set to: 1
  2446                           
  2447                           ; BSR set to: 1
  2448                           
  2449                           ; BSR set to: 1
  2450  000684  BA80               	btfsc	3968,5,c	;volatile
  2451  000686  D002               	goto	u6300
  2452  000688  0E01               	movlw	1
  2453  00068A  D001               	goto	u6310
  2454  00068C                     u6300:
  2455  00068C  0E00               	movlw	0
  2456  00068E                     u6310:
  2457  00068E  6FA4               	movwf	_loop$930& (0+255),b
  2458  000690  6BA5               	clrf	(_loop$930+1)& (0+255),b
  2459                           
  2460                           ; BSR set to: 1
  2461                           
  2462                           ; BSR set to: 1
  2463  000692  C1A4  F1A2         	movff	_loop$930,_loop$929
  2464  000696  C1A5  F1A3         	movff	_loop$930+1,_loop$929+1
  2465                           
  2466                           ; BSR set to: 1
  2467                           
  2468                           ; BSR set to: 1
  2469                           
  2470                           ; BSR set to: 1
  2471                           
  2472                           ; BSR set to: 1
  2473  00069A  51A2               	movf	_loop$929& (0+255),w,b
  2474  00069C  11A3               	iorwf	(_loop$929+1)& (0+255),w,b
  2475  00069E  A4D8               	btfss	status,2,c
  2476  0006A0  D7E6               	goto	l429
  2477                           
  2478                           ; BSR set to: 1
  2479                           ;main.c: 242: estado = 0;
  2480                           
  2481                           ; BSR set to: 1
  2482  0006A2  0E00               	movlw	0
  2483  0006A4  6FAF               	movwf	(loop@estado+1)& (0+255),b
  2484  0006A6  0E00               	movlw	0
  2485  0006A8  6FAE               	movwf	loop@estado& (0+255),b
  2486                           
  2487                           ; BSR set to: 1
  2488                           ;main.c: 245: }
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;main.c: 243: }
  2492                           ;main.c: 244: break;
  2493  0006AA  0012               	return	
  2494  0006AC                     l69:
  2495                           
  2496                           ; BSR set to: 1
  2497  0006AC  C1AE  F060         	movff	loop@estado,??_loop
  2498  0006B0  C1AF  F061         	movff	loop@estado+1,??_loop+1
  2499                           
  2500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2501                           ; Switch size 1, requested type "space"
  2502                           ; Number of cases is 1, Range of values is 0 to 0
  2503                           ; switch strategies available:
  2504                           ; Name         Instructions Cycles
  2505                           ; simple_byte            4     3 (average)
  2506                           ;	Chosen strategy is simple_byte
  2507  0006B4  0100               	movlb	0	; () banked
  2508  0006B6  5161               	movf	(??_loop+1)& (0+255),w,b
  2509  0006B8  0A00               	xorlw	0	; case 0
  2510  0006BA  A4D8               	btfss	status,2,c
  2511  0006BC  0012               	return	
  2512                           
  2513                           ; BSR set to: 0
  2514                           ; Switch size 1, requested type "space"
  2515                           ; Number of cases is 13, Range of values is 0 to 12
  2516                           ; switch strategies available:
  2517                           ; Name         Instructions Cycles
  2518                           ; simple_byte           40    21 (average)
  2519                           ;	Chosen strategy is simple_byte
  2520  0006BE  5160               	movf	??_loop& (0+255),w,b
  2521  0006C0  0A00               	xorlw	0	; case 0
  2522  0006C2  B4D8               	btfsc	status,2,c
  2523  0006C4  D4A7               	goto	l70
  2524  0006C6  0A01               	xorlw	1	; case 1
  2525  0006C8  B4D8               	btfsc	status,2,c
  2526  0006CA  D55C               	goto	l165
  2527  0006CC  0A03               	xorlw	3	; case 2
  2528  0006CE  B4D8               	btfsc	status,2,c
  2529  0006D0  D57D               	goto	l179
  2530  0006D2  0A01               	xorlw	1	; case 3
  2531  0006D4  B4D8               	btfsc	status,2,c
  2532  0006D6  D5DD               	goto	l186
  2533  0006D8  0A07               	xorlw	7	; case 4
  2534  0006DA  B4D8               	btfsc	status,2,c
  2535  0006DC  D6D7               	goto	l389
  2536  0006DE  0A01               	xorlw	1	; case 5
  2537  0006E0  B4D8               	btfsc	status,2,c
  2538  0006E2  D779               	goto	l397
  2539  0006E4  0A03               	xorlw	3	; case 6
  2540  0006E6  B4D8               	btfsc	status,2,c
  2541  0006E8  D74E               	goto	l395
  2542  0006EA  0A01               	xorlw	1	; case 7
  2543  0006EC  B4D8               	btfsc	status,2,c
  2544  0006EE  D6DE               	goto	l390
  2545  0006F0  0A0F               	xorlw	15	; case 8
  2546  0006F2  B4D8               	btfsc	status,2,c
  2547  0006F4  D75C               	goto	l396
  2548  0006F6  0A01               	xorlw	1	; case 9
  2549  0006F8  B4D8               	btfsc	status,2,c
  2550  0006FA  D731               	goto	l394
  2551  0006FC  0A03               	xorlw	3	; case 10
  2552  0006FE  B4D8               	btfsc	status,2,c
  2553  000700  D6E9               	goto	l391
  2554  000702  0A01               	xorlw	1	; case 11
  2555  000704  B4D8               	btfsc	status,2,c
  2556  000706  D6FA               	goto	l392
  2557  000708  0A07               	xorlw	7	; case 12
  2558  00070A  A4D8               	btfss	status,2,c
  2559  00070C  0012               	return	
  2560  00070E  D777               	goto	l398
  2561  000710                     __end_of_loop:
  2562                           	opt stack 0
  2563                           tblptru	equ	0xFF8
  2564                           tblptrh	equ	0xFF7
  2565                           tblptrl	equ	0xFF6
  2566                           tablat	equ	0xFF5
  2567                           status	equ	0xFD8
  2568                           
  2569 ;; *************** function _millis *****************
  2570 ;; Defined at:
  2571 ;;		line 268 in file "main.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;		None
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;		None
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  4   18[COMRAM] unsigned long 
  2578 ;; Registers used:
  2579 ;;		None
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2585 ;;      Params:         4       0       0       0       0       0       0       0       0
  2586 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2588 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2589 ;;Total ram usage:        4 bytes
  2590 ;; Hardware stack levels used:    1
  2591 ;; Hardware stack levels required when called:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_loop
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           	psect	text2
  2600  000D8C                     __ptext2:
  2601                           	opt stack 0
  2602  000D8C                     _millis:
  2603                           	opt stack 28
  2604                           
  2605                           ;incstack = 0
  2606  000D8C  C046  F013         	movff	_millisCounter,?_millis
  2607  000D90  C047  F014         	movff	_millisCounter+1,?_millis+1
  2608  000D94  C048  F015         	movff	_millisCounter+2,?_millis+2
  2609  000D98  C049  F016         	movff	_millisCounter+3,?_millis+3
  2610  000D9C  0012               	return		;funcret
  2611  000D9E                     __end_of_millis:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           status	equ	0xFD8
  2618                           
  2619 ;; *************** function _init *****************
  2620 ;; Defined at:
  2621 ;;		line 10 in file "main.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2635 ;;      Params:         0       0       0       0       0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2638 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2639 ;;Total ram usage:        0 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    4
  2642 ;; This function calls:
  2643 ;;		_setMotores
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text3
  2650  000BFC                     __ptext3:
  2651                           	opt stack 0
  2652  000BFC                     _init:
  2653                           	opt stack 26
  2654                           
  2655                           ;main.c: 12: ADCON1bits.PCFG = 0b1111;
  2656                           
  2657                           ;incstack = 0
  2658  000BFC  80C1               	bsf	4033,0,c	;volatile
  2659  000BFE  82C1               	bsf	4033,1,c	;volatile
  2660  000C00  84C1               	bsf	4033,2,c	;volatile
  2661  000C02  86C1               	bsf	4033,3,c	;volatile
  2662                           
  2663                           ;main.c: 15: UCONbits.USBEN = 0;
  2664  000C04  966D               	bcf	3949,3,c	;volatile
  2665                           
  2666                           ;main.c: 16: UCFGbits.UTRDIS = 1;
  2667  000C06  866F               	bsf	3951,3,c	;volatile
  2668                           
  2669                           ;main.c: 19: TRISAbits.RA1 = INPUT;
  2670  000C08  8292               	bsf	3986,1,c	;volatile
  2671                           
  2672                           ;main.c: 20: TRISAbits.RA5 = INPUT;
  2673  000C0A  8A92               	bsf	3986,5,c	;volatile
  2674                           
  2675                           ;main.c: 21: TRISAbits.RA2 = OUTPUT;
  2676  000C0C  9492               	bcf	3986,2,c	;volatile
  2677                           
  2678                           ;main.c: 22: TRISAbits.RA3 = OUTPUT;
  2679  000C0E  9692               	bcf	3986,3,c	;volatile
  2680                           
  2681                           ;main.c: 23: TRISAbits.RA4 = OUTPUT;
  2682  000C10  9892               	bcf	3986,4,c	;volatile
  2683                           
  2684                           ;main.c: 24: TRISBbits.RB5 = INPUT;
  2685  000C12  8A93               	bsf	3987,5,c	;volatile
  2686                           
  2687                           ;main.c: 25: TRISBbits.RB4 = INPUT;
  2688  000C14  8893               	bsf	3987,4,c	;volatile
  2689                           
  2690                           ;main.c: 26: TRISBbits.RB1 = INPUT;
  2691  000C16  8293               	bsf	3987,1,c	;volatile
  2692                           
  2693                           ;main.c: 29: TRISBbits.RB3 = INPUT;
  2694  000C18  8693               	bsf	3987,3,c	;volatile
  2695                           
  2696                           ;main.c: 30: TRISCbits.RC6 = INPUT;
  2697  000C1A  8C94               	bsf	3988,6,c	;volatile
  2698                           
  2699                           ;main.c: 31: TRISCbits.RC1 = OUTPUT;
  2700  000C1C  9294               	bcf	3988,1,c	;volatile
  2701                           
  2702                           ;main.c: 32: TRISCbits.RC2 = OUTPUT;
  2703  000C1E  9494               	bcf	3988,2,c	;volatile
  2704                           
  2705                           ;main.c: 33: TRISCbits.RC0 = OUTPUT;
  2706  000C20  9094               	bcf	3988,0,c	;volatile
  2707                           
  2708                           ;main.c: 34: TRISAbits.RA0 = OUTPUT;
  2709  000C22  9092               	bcf	3986,0,c	;volatile
  2710                           
  2711                           ;main.c: 37: T2CON = 0;
  2712  000C24  0E00               	movlw	0
  2713  000C26  6ECA               	movwf	4042,c	;volatile
  2714                           
  2715                           ;main.c: 38: T2CONbits.TOUTPS=11;
  2716  000C28  50CA               	movf	4042,w,c	;volatile
  2717  000C2A  0B87               	andlw	-121
  2718  000C2C  0958               	iorlw	88
  2719  000C2E  6ECA               	movwf	4042,c	;volatile
  2720                           
  2721                           ;main.c: 39: T2CONbits.T2CKPS=1;
  2722  000C30  50CA               	movf	4042,w,c	;volatile
  2723  000C32  0BFC               	andlw	-4
  2724  000C34  0901               	iorlw	1
  2725  000C36  6ECA               	movwf	4042,c	;volatile
  2726                           
  2727                           ;main.c: 40: PR2=249;
  2728  000C38  0EF9               	movlw	249
  2729  000C3A  6ECB               	movwf	4043,c	;volatile
  2730                           
  2731                           ;main.c: 41: T2CONbits.TMR2ON=1;
  2732  000C3C  84CA               	bsf	4042,2,c	;volatile
  2733                           
  2734                           ;main.c: 44: CCPR1L=0;
  2735  000C3E  0E00               	movlw	0
  2736  000C40  6EBE               	movwf	4030,c	;volatile
  2737                           
  2738                           ;main.c: 45: CCP1CONbits.DC1B=0;
  2739  000C42  0ECF               	movlw	-49
  2740  000C44  16BD               	andwf	4029,f,c	;volatile
  2741                           
  2742                           ;main.c: 46: CCP1CONbits.CCP1M=12;
  2743  000C46  50BD               	movf	4029,w,c	;volatile
  2744  000C48  0BF0               	andlw	-16
  2745  000C4A  090C               	iorlw	12
  2746  000C4C  6EBD               	movwf	4029,c	;volatile
  2747                           
  2748                           ;main.c: 47: CCPR2L=0;
  2749  000C4E  0E00               	movlw	0
  2750  000C50  6EBB               	movwf	4027,c	;volatile
  2751                           
  2752                           ;main.c: 48: CCP2CONbits.DC2B=0;
  2753  000C52  0ECF               	movlw	-49
  2754  000C54  16BA               	andwf	4026,f,c	;volatile
  2755                           
  2756                           ;main.c: 49: CCP2CONbits.CCP2M=12;
  2757  000C56  50BA               	movf	4026,w,c	;volatile
  2758  000C58  0BF0               	andlw	-16
  2759  000C5A  090C               	iorlw	12
  2760  000C5C  6EBA               	movwf	4026,c	;volatile
  2761                           
  2762                           ;main.c: 52: INTCON3=0;
  2763  000C5E  0E00               	movlw	0
  2764  000C60  6EF0               	movwf	intcon3,c	;volatile
  2765                           
  2766                           ;main.c: 53: PIE1=0;
  2767  000C62  0E00               	movlw	0
  2768  000C64  6E9D               	movwf	3997,c	;volatile
  2769                           
  2770                           ;main.c: 54: PIE2=0;
  2771  000C66  0E00               	movlw	0
  2772  000C68  6EA0               	movwf	4000,c	;volatile
  2773                           
  2774                           ;main.c: 55: RCONbits.IPEN=0;
  2775  000C6A  9ED0               	bcf	4048,7,c	;volatile
  2776                           
  2777                           ;main.c: 56: PIE1bits.TMR2IE=1;
  2778  000C6C  829D               	bsf	3997,1,c	;volatile
  2779                           
  2780                           ;main.c: 57: INTCONbits.PEIE_GIEL=1;
  2781  000C6E  8CF2               	bsf	intcon,6,c	;volatile
  2782                           
  2783                           ;main.c: 58: INTCONbits.GIE_GIEH=1;
  2784  000C70  8EF2               	bsf	intcon,7,c	;volatile
  2785                           
  2786                           ;main.c: 59: RCONbits.IPEN = 0;
  2787  000C72  9ED0               	bcf	4048,7,c	;volatile
  2788                           
  2789                           ;main.c: 60: INTCONbits.PEIE = 1;
  2790  000C74  8CF2               	bsf	intcon,6,c	;volatile
  2791                           
  2792                           ;main.c: 61: INTCONbits.GIE = 1;
  2793  000C76  8EF2               	bsf	intcon,7,c	;volatile
  2794                           
  2795                           ;main.c: 64: setMotores(1000, 0);
  2796  000C78  0E03               	movlw	3
  2797  000C7A  6E3E               	movwf	setMotores@dutyI+1,c
  2798  000C7C  0EE8               	movlw	232
  2799  000C7E  6E3D               	movwf	setMotores@dutyI,c
  2800  000C80  0E00               	movlw	0
  2801  000C82  6E40               	movwf	setMotores@dutyD+1,c
  2802  000C84  0E00               	movlw	0
  2803  000C86  6E3F               	movwf	setMotores@dutyD,c
  2804  000C88  EC88  F003         	call	_setMotores	;wreg free
  2805                           
  2806                           ;main.c: 65: LATAbits.LA2 = 0;
  2807  000C8C  9489               	bcf	3977,2,c	;volatile
  2808                           
  2809                           ;main.c: 66: LATAbits.LA3 = 0;
  2810  000C8E  9689               	bcf	3977,3,c	;volatile
  2811                           
  2812                           ;main.c: 67: LATAbits.LA4 = 0;
  2813  000C90  9889               	bcf	3977,4,c	;volatile
  2814  000C92                     l57:
  2815  000C92  D7FF               	goto	l57
  2816  000C94                     __end_of_init:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           intcon	equ	0xFF2
  2823                           intcon3	equ	0xFF0
  2824                           status	equ	0xFD8
  2825                           
  2826 ;; *************** function _setMotores *****************
  2827 ;; Defined at:
  2828 ;;		line 248 in file "main.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  dutyI           2   60[COMRAM] int 
  2831 ;;  dutyD           2   62[COMRAM] int 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         4       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2846 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        9 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    3
  2850 ;; This function calls:
  2851 ;;		___awdiv
  2852 ;;		___awtoft
  2853 ;;		___ftmul
  2854 ;;		___fttol
  2855 ;; This function is called by:
  2856 ;;		_init
  2857 ;;		_loop
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text4
  2862  000710                     __ptext4:
  2863                           	opt stack 0
  2864  000710                     _setMotores:
  2865                           	opt stack 26
  2866                           
  2867                           ;main.c: 249: dutyI = (dutyI > 1000 ? 1000 : (dutyI < -1000 ? -1000 : dutyI));
  2868                           
  2869                           ;incstack = 0
  2870  000710  BE3E               	btfsc	setMotores@dutyI+1,7,c
  2871  000712  D006               	goto	u2550
  2872  000714  0EE9               	movlw	233
  2873  000716  5C3D               	subwf	setMotores@dutyI,w,c
  2874  000718  0E03               	movlw	3
  2875  00071A  583E               	subwfb	setMotores@dutyI+1,w,c
  2876  00071C  B0D8               	btfsc	status,0,c
  2877  00071E  D016               	goto	l457
  2878  000720                     u2550:
  2879  000720  AE3E               	btfss	setMotores@dutyI+1,7,c
  2880  000722  D006               	goto	u2560
  2881  000724  0E18               	movlw	24
  2882  000726  5C3D               	subwf	setMotores@dutyI,w,c
  2883  000728  0EFC               	movlw	252
  2884  00072A  583E               	subwfb	setMotores@dutyI+1,w,c
  2885  00072C  A0D8               	btfss	status,0,c
  2886  00072E  D005               	goto	l461
  2887  000730                     u2560:
  2888  000730  C03D  F042         	movff	setMotores@dutyI,_setMotores$935
  2889  000734  C03E  F043         	movff	setMotores@dutyI+1,_setMotores$935+1
  2890  000738  D004               	goto	l463
  2891  00073A                     l461:
  2892  00073A  0EFC               	movlw	252
  2893  00073C  6E43               	movwf	_setMotores$935+1,c
  2894  00073E  0E18               	movlw	24
  2895  000740  6E42               	movwf	_setMotores$935,c
  2896  000742                     l463:
  2897  000742  C042  F03D         	movff	_setMotores$935,setMotores@dutyI
  2898  000746  C043  F03E         	movff	_setMotores$935+1,setMotores@dutyI+1
  2899  00074A  D004               	goto	l459
  2900  00074C                     l457:
  2901  00074C  0E03               	movlw	3
  2902  00074E  6E3E               	movwf	setMotores@dutyI+1,c
  2903  000750  0EE8               	movlw	232
  2904  000752  6E3D               	movwf	setMotores@dutyI,c
  2905  000754                     l459:
  2906                           
  2907                           ;main.c: 250: dutyD = (dutyD > 1000 ? 1000 : (dutyD < -1000 ? -1000 : dutyD));
  2908  000754  BE40               	btfsc	setMotores@dutyD+1,7,c
  2909  000756  D006               	goto	u2570
  2910  000758  0EE9               	movlw	233
  2911  00075A  5C3F               	subwf	setMotores@dutyD,w,c
  2912  00075C  0E03               	movlw	3
  2913  00075E  5840               	subwfb	setMotores@dutyD+1,w,c
  2914  000760  B0D8               	btfsc	status,0,c
  2915  000762  D016               	goto	l465
  2916  000764                     u2570:
  2917  000764  AE40               	btfss	setMotores@dutyD+1,7,c
  2918  000766  D006               	goto	u2580
  2919  000768  0E18               	movlw	24
  2920  00076A  5C3F               	subwf	setMotores@dutyD,w,c
  2921  00076C  0EFC               	movlw	252
  2922  00076E  5840               	subwfb	setMotores@dutyD+1,w,c
  2923  000770  A0D8               	btfss	status,0,c
  2924  000772  D005               	goto	l469
  2925  000774                     u2580:
  2926  000774  C03F  F044         	movff	setMotores@dutyD,_setMotores$936
  2927  000778  C040  F045         	movff	setMotores@dutyD+1,_setMotores$936+1
  2928  00077C  D004               	goto	l471
  2929  00077E                     l469:
  2930  00077E  0EFC               	movlw	252
  2931  000780  6E45               	movwf	_setMotores$936+1,c
  2932  000782  0E18               	movlw	24
  2933  000784  6E44               	movwf	_setMotores$936,c
  2934  000786                     l471:
  2935  000786  C044  F03F         	movff	_setMotores$936,setMotores@dutyD
  2936  00078A  C045  F040         	movff	_setMotores$936+1,setMotores@dutyD+1
  2937  00078E  D004               	goto	l467
  2938  000790                     l465:
  2939  000790  0E03               	movlw	3
  2940  000792  6E40               	movwf	setMotores@dutyD+1,c
  2941  000794  0EE8               	movlw	232
  2942  000796  6E3F               	movwf	setMotores@dutyD,c
  2943  000798                     l467:
  2944                           
  2945                           ;main.c: 252: LATAbits.LA0 = dutyI < 0;
  2946  000798  AE3E               	btfss	setMotores@dutyI+1,7,c
  2947  00079A  D003               	goto	u2590
  2948  00079C  6A41               	clrf	??_setMotores& (0+255),c
  2949  00079E  2A41               	incf	??_setMotores& (0+255),f,c
  2950  0007A0  D001               	goto	u2608
  2951  0007A2                     u2590:
  2952  0007A2  6A41               	clrf	??_setMotores& (0+255),c
  2953  0007A4                     u2608:
  2954  0007A4  5089               	movf	3977,w,c	;volatile
  2955  0007A6  1841               	xorwf	??_setMotores,w,c
  2956  0007A8  0BFE               	andlw	-2
  2957  0007AA  1841               	xorwf	??_setMotores,w,c
  2958  0007AC  6E89               	movwf	3977,c	;volatile
  2959                           
  2960                           ;main.c: 253: LATCbits.LC0 = dutyD < 0;
  2961  0007AE  AE40               	btfss	setMotores@dutyD+1,7,c
  2962  0007B0  D003               	goto	u2610
  2963  0007B2  6A41               	clrf	??_setMotores& (0+255),c
  2964  0007B4  2A41               	incf	??_setMotores& (0+255),f,c
  2965  0007B6  D001               	goto	u2628
  2966  0007B8                     u2610:
  2967  0007B8  6A41               	clrf	??_setMotores& (0+255),c
  2968  0007BA                     u2628:
  2969  0007BA  508B               	movf	3979,w,c	;volatile
  2970  0007BC  1841               	xorwf	??_setMotores,w,c
  2971  0007BE  0BFE               	andlw	-2
  2972  0007C0  1841               	xorwf	??_setMotores,w,c
  2973  0007C2  6E8B               	movwf	3979,c	;volatile
  2974                           
  2975                           ;main.c: 255: dutyI = (dutyI < 0 ? 1000+dutyI : dutyI);
  2976  0007C4  AE3E               	btfss	setMotores@dutyI+1,7,c
  2977  0007C6  D006               	goto	l475
  2978  0007C8  0EE8               	movlw	232
  2979  0007CA  243D               	addwf	setMotores@dutyI,w,c
  2980  0007CC  6E3D               	movwf	setMotores@dutyI,c
  2981  0007CE  0E03               	movlw	3
  2982  0007D0  203E               	addwfc	setMotores@dutyI+1,w,c
  2983  0007D2  6E3E               	movwf	setMotores@dutyI+1,c
  2984  0007D4                     l475:
  2985                           
  2986                           ;main.c: 256: dutyD = (dutyD < 0 ? 1000+dutyD : dutyD);
  2987  0007D4  AE40               	btfss	setMotores@dutyD+1,7,c
  2988  0007D6  D006               	goto	l479
  2989  0007D8  0EE8               	movlw	232
  2990  0007DA  243F               	addwf	setMotores@dutyD,w,c
  2991  0007DC  6E3F               	movwf	setMotores@dutyD,c
  2992  0007DE  0E03               	movlw	3
  2993  0007E0  2040               	addwfc	setMotores@dutyD+1,w,c
  2994  0007E2  6E40               	movwf	setMotores@dutyD+1,c
  2995  0007E4                     l479:
  2996                           
  2997                           ;main.c: 258: dutyI *= 1.023;
  2998  0007E4  0EF2               	movlw	242
  2999  0007E6  6E22               	movwf	___ftmul@f2,c
  3000  0007E8  0E82               	movlw	130
  3001  0007EA  6E23               	movwf	___ftmul@f2+1,c
  3002  0007EC  0E3F               	movlw	63
  3003  0007EE  6E24               	movwf	___ftmul@f2+2,c
  3004  0007F0  C03D  F01B         	movff	setMotores@dutyI,___awtoft@c
  3005  0007F4  C03E  F01C         	movff	setMotores@dutyI+1,___awtoft@c+1
  3006  0007F8  ECAA  F006         	call	___awtoft	;wreg free
  3007  0007FC  C01B  F01F         	movff	?___awtoft,___ftmul@f1
  3008  000800  C01C  F020         	movff	?___awtoft+1,___ftmul@f1+1
  3009  000804  C01D  F021         	movff	?___awtoft+2,___ftmul@f1+2
  3010  000808  ECD9  F004         	call	___ftmul	;wreg free
  3011  00080C  C01F  F02E         	movff	?___ftmul,___fttol@f1
  3012  000810  C020  F02F         	movff	?___ftmul+1,___fttol@f1+1
  3013  000814  C021  F030         	movff	?___ftmul+2,___fttol@f1+2
  3014  000818  EC5F  F004         	call	___fttol	;wreg free
  3015  00081C  C02E  F03D         	movff	?___fttol,setMotores@dutyI
  3016  000820  C02F  F03E         	movff	?___fttol+1,setMotores@dutyI+1
  3017                           
  3018                           ;main.c: 259: dutyD *= 1.023;
  3019  000824  0EF2               	movlw	242
  3020  000826  6E22               	movwf	___ftmul@f2,c
  3021  000828  0E82               	movlw	130
  3022  00082A  6E23               	movwf	___ftmul@f2+1,c
  3023  00082C  0E3F               	movlw	63
  3024  00082E  6E24               	movwf	___ftmul@f2+2,c
  3025  000830  C03F  F01B         	movff	setMotores@dutyD,___awtoft@c
  3026  000834  C040  F01C         	movff	setMotores@dutyD+1,___awtoft@c+1
  3027  000838  ECAA  F006         	call	___awtoft	;wreg free
  3028  00083C  C01B  F01F         	movff	?___awtoft,___ftmul@f1
  3029  000840  C01C  F020         	movff	?___awtoft+1,___ftmul@f1+1
  3030  000844  C01D  F021         	movff	?___awtoft+2,___ftmul@f1+2
  3031  000848  ECD9  F004         	call	___ftmul	;wreg free
  3032  00084C  C01F  F02E         	movff	?___ftmul,___fttol@f1
  3033  000850  C020  F02F         	movff	?___ftmul+1,___fttol@f1+1
  3034  000854  C021  F030         	movff	?___ftmul+2,___fttol@f1+2
  3035  000858  EC5F  F004         	call	___fttol	;wreg free
  3036  00085C  C02E  F03F         	movff	?___fttol,setMotores@dutyD
  3037  000860  C02F  F040         	movff	?___fttol+1,setMotores@dutyD+1
  3038                           
  3039                           ;main.c: 261: CCPR1L = dutyI / 4;
  3040  000864  C03D  F013         	movff	setMotores@dutyI,___awdiv@dividend
  3041  000868  C03E  F014         	movff	setMotores@dutyI+1,___awdiv@dividend+1
  3042  00086C  0E00               	movlw	0
  3043  00086E  6E16               	movwf	___awdiv@divisor+1,c
  3044  000870  0E04               	movlw	4
  3045  000872  6E15               	movwf	___awdiv@divisor,c
  3046  000874  EC4A  F006         	call	___awdiv	;wreg free
  3047  000878  5013               	movf	?___awdiv,w,c
  3048  00087A  6EBE               	movwf	4030,c	;volatile
  3049                           
  3050                           ;main.c: 262: CCPR2L = dutyD / 4;
  3051  00087C  C03F  F013         	movff	setMotores@dutyD,___awdiv@dividend
  3052  000880  C040  F014         	movff	setMotores@dutyD+1,___awdiv@dividend+1
  3053  000884  0E00               	movlw	0
  3054  000886  6E16               	movwf	___awdiv@divisor+1,c
  3055  000888  0E04               	movlw	4
  3056  00088A  6E15               	movwf	___awdiv@divisor,c
  3057  00088C  EC4A  F006         	call	___awdiv	;wreg free
  3058  000890  5013               	movf	?___awdiv,w,c
  3059  000892  6EBB               	movwf	4027,c	;volatile
  3060                           
  3061                           ;main.c: 263: CCP1CONbits.DC1B = dutyI % 4;
  3062  000894  C03D  F041         	movff	setMotores@dutyI,??_setMotores
  3063  000898  0E03               	movlw	3
  3064  00089A  1641               	andwf	??_setMotores,f,c
  3065  00089C  3A41               	swapf	??_setMotores,f,c
  3066  00089E  50BD               	movf	4029,w,c	;volatile
  3067  0008A0  1841               	xorwf	??_setMotores,w,c
  3068  0008A2  0BCF               	andlw	-49
  3069  0008A4  1841               	xorwf	??_setMotores,w,c
  3070  0008A6  6EBD               	movwf	4029,c	;volatile
  3071                           
  3072                           ;main.c: 264: CCP2CONbits.DC2B = dutyD % 4;
  3073  0008A8  C03F  F041         	movff	setMotores@dutyD,??_setMotores
  3074  0008AC  0E03               	movlw	3
  3075  0008AE  1641               	andwf	??_setMotores,f,c
  3076  0008B0  3A41               	swapf	??_setMotores,f,c
  3077  0008B2  50BA               	movf	4026,w,c	;volatile
  3078  0008B4  1841               	xorwf	??_setMotores,w,c
  3079  0008B6  0BCF               	andlw	-49
  3080  0008B8  1841               	xorwf	??_setMotores,w,c
  3081  0008BA  6EBA               	movwf	4026,c	;volatile
  3082  0008BC  0012               	return		;funcret
  3083  0008BE                     __end_of_setMotores:
  3084                           	opt stack 0
  3085                           tblptru	equ	0xFF8
  3086                           tblptrh	equ	0xFF7
  3087                           tblptrl	equ	0xFF6
  3088                           tablat	equ	0xFF5
  3089                           intcon	equ	0xFF2
  3090                           intcon3	equ	0xFF0
  3091                           status	equ	0xFD8
  3092                           
  3093 ;; *************** function ___fttol *****************
  3094 ;; Defined at:
  3095 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3096 ;; Parameters:    Size  Location     Type
  3097 ;;  f1              3   45[COMRAM] float 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  lval            4   55[COMRAM] unsigned long 
  3100 ;;  exp1            1   59[COMRAM] unsigned char 
  3101 ;;  sign1           1   54[COMRAM] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  4   45[COMRAM] long 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3111 ;;      Params:         4       0       0       0       0       0       0       0       0
  3112 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3113 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3114 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3115 ;;Total ram usage:       15 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    1
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_setMotores
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text5
  3126  0008BE                     __ptext5:
  3127                           	opt stack 0
  3128  0008BE                     ___fttol:
  3129                           	opt stack 27
  3130                           
  3131                           ;incstack = 0
  3132  0008BE  C030  F032         	movff	___fttol@f1+2,??___fttol
  3133  0008C2  6A33               	clrf	(??___fttol+1)& (0+255),c
  3134  0008C4  6A34               	clrf	(??___fttol+2)& (0+255),c
  3135  0008C6  342F               	rlcf	___fttol@f1+1,w,c
  3136  0008C8  3632               	rlcf	??___fttol& (0+255),f,c
  3137  0008CA  E301               	bnc	u2471
  3138  0008CC  8033               	bsf	(??___fttol+1)& (0+255),0,c
  3139  0008CE                     u2471:
  3140  0008CE  5032               	movf	??___fttol,w,c
  3141  0008D0  6E3C               	movwf	___fttol@exp1,c
  3142  0008D2  503C               	movf	___fttol@exp1,w,c
  3143  0008D4  A4D8               	btfss	status,2,c
  3144  0008D6  D009               	goto	l814
  3145  0008D8  0E00               	movlw	0
  3146  0008DA  6E2E               	movwf	?___fttol,c
  3147  0008DC  0E00               	movlw	0
  3148  0008DE  6E2F               	movwf	?___fttol+1,c
  3149  0008E0  0E00               	movlw	0
  3150  0008E2  6E30               	movwf	?___fttol+2,c
  3151  0008E4  0E00               	movlw	0
  3152  0008E6  6E31               	movwf	?___fttol+3,c
  3153  0008E8  0012               	return	
  3154  0008EA                     l814:
  3155  0008EA  0E17               	movlw	23
  3156  0008EC  6E32               	movwf	??___fttol& (0+255),c
  3157  0008EE  C02E  F033         	movff	___fttol@f1,??___fttol+1
  3158  0008F2  C02F  F034         	movff	___fttol@f1+1,??___fttol+2
  3159  0008F6  C030  F035         	movff	___fttol@f1+2,??___fttol+3
  3160  0008FA  2832               	incf	??___fttol,w,c
  3161  0008FC  6E36               	movwf	(??___fttol+4)& (0+255),c
  3162  0008FE  D004               	goto	u2490
  3163  000900                     u2495:
  3164  000900  90D8               	bcf	status,0,c
  3165  000902  3235               	rrcf	??___fttol+3,f,c
  3166  000904  3234               	rrcf	??___fttol+2,f,c
  3167  000906  3233               	rrcf	??___fttol+1,f,c
  3168  000908                     u2490:
  3169  000908  2E36               	decfsz	(??___fttol+4)& (0+255),f,c
  3170  00090A  D7FA               	goto	u2495
  3171  00090C  5033               	movf	??___fttol+1,w,c
  3172  00090E  6E37               	movwf	___fttol@sign1,c
  3173  000910  8E2F               	bsf	___fttol@f1+1,7,c
  3174  000912  0EFF               	movlw	255
  3175  000914  162E               	andwf	___fttol@f1,f,c
  3176  000916  0EFF               	movlw	255
  3177  000918  162F               	andwf	___fttol@f1+1,f,c
  3178  00091A  0E00               	movlw	0
  3179  00091C  1630               	andwf	___fttol@f1+2,f,c
  3180  00091E  502E               	movf	___fttol@f1,w,c
  3181  000920  6E38               	movwf	___fttol@lval,c
  3182  000922  502F               	movf	___fttol@f1+1,w,c
  3183  000924  6E39               	movwf	___fttol@lval+1,c
  3184  000926  5030               	movf	___fttol@f1+2,w,c
  3185  000928  6E3A               	movwf	___fttol@lval+2,c
  3186  00092A  6A3B               	clrf	___fttol@lval+3,c
  3187  00092C  0E8E               	movlw	142
  3188  00092E  5E3C               	subwf	___fttol@exp1,f,c
  3189  000930  AE3C               	btfss	___fttol@exp1,7,c
  3190  000932  D016               	goto	l816
  3191  000934  503C               	movf	___fttol@exp1,w,c
  3192  000936  0A80               	xorlw	128
  3193  000938  0F8F               	addlw	143
  3194  00093A  B0D8               	btfsc	status,0,c
  3195  00093C  D009               	goto	l817
  3196  00093E  0E00               	movlw	0
  3197  000940  6E2E               	movwf	?___fttol,c
  3198  000942  0E00               	movlw	0
  3199  000944  6E2F               	movwf	?___fttol+1,c
  3200  000946  0E00               	movlw	0
  3201  000948  6E30               	movwf	?___fttol+2,c
  3202  00094A  0E00               	movlw	0
  3203  00094C  6E31               	movwf	?___fttol+3,c
  3204  00094E  0012               	return	
  3205  000950                     l817:
  3206  000950  90D8               	bcf	status,0,c
  3207  000952  323B               	rrcf	___fttol@lval+3,f,c
  3208  000954  323A               	rrcf	___fttol@lval+2,f,c
  3209  000956  3239               	rrcf	___fttol@lval+1,f,c
  3210  000958  3238               	rrcf	___fttol@lval,f,c
  3211  00095A  3E3C               	incfsz	___fttol@exp1,f,c
  3212  00095C  D7F9               	goto	l817
  3213  00095E  D015               	goto	u2530
  3214  000960                     l816:
  3215  000960  0E17               	movlw	23
  3216  000962  643C               	cpfsgt	___fttol@exp1,c
  3217  000964  D00F               	goto	l822
  3218  000966  0E00               	movlw	0
  3219  000968  6E2E               	movwf	?___fttol,c
  3220  00096A  0E00               	movlw	0
  3221  00096C  6E2F               	movwf	?___fttol+1,c
  3222  00096E  0E00               	movlw	0
  3223  000970  6E30               	movwf	?___fttol+2,c
  3224  000972  0E00               	movlw	0
  3225  000974  6E31               	movwf	?___fttol+3,c
  3226  000976  0012               	return	
  3227  000978  90D8               	bcf	status,0,c
  3228  00097A  3638               	rlcf	___fttol@lval,f,c
  3229  00097C  3639               	rlcf	___fttol@lval+1,f,c
  3230  00097E  363A               	rlcf	___fttol@lval+2,f,c
  3231  000980  363B               	rlcf	___fttol@lval+3,f,c
  3232  000982  063C               	decf	___fttol@exp1,f,c
  3233  000984                     l822:
  3234  000984  503C               	movf	___fttol@exp1,w,c
  3235  000986  A4D8               	btfss	status,2,c
  3236  000988  D7F7               	goto	l823
  3237  00098A                     u2530:
  3238  00098A  5037               	movf	___fttol@sign1,w,c
  3239  00098C  B4D8               	btfsc	status,2,c
  3240  00098E  D008               	goto	l825
  3241  000990  1E3B               	comf	___fttol@lval+3,f,c
  3242  000992  1E3A               	comf	___fttol@lval+2,f,c
  3243  000994  1E39               	comf	___fttol@lval+1,f,c
  3244  000996  6C38               	negf	___fttol@lval,c
  3245  000998  0E00               	movlw	0
  3246  00099A  2239               	addwfc	___fttol@lval+1,f,c
  3247  00099C  223A               	addwfc	___fttol@lval+2,f,c
  3248  00099E  223B               	addwfc	___fttol@lval+3,f,c
  3249  0009A0                     l825:
  3250  0009A0  C038  F02E         	movff	___fttol@lval,?___fttol
  3251  0009A4  C039  F02F         	movff	___fttol@lval+1,?___fttol+1
  3252  0009A8  C03A  F030         	movff	___fttol@lval+2,?___fttol+2
  3253  0009AC  C03B  F031         	movff	___fttol@lval+3,?___fttol+3
  3254  0009B0  0012               	return	
  3255  0009B2                     __end_of___fttol:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           intcon	equ	0xFF2
  3262                           intcon3	equ	0xFF0
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function ___ftmul *****************
  3266 ;; Defined at:
  3267 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  f1              3   30[COMRAM] float 
  3270 ;;  f2              3   33[COMRAM] float 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  f3_as_produc    3   40[COMRAM] unsigned um
  3273 ;;  sign            1   44[COMRAM] unsigned char 
  3274 ;;  cntr            1   43[COMRAM] unsigned char 
  3275 ;;  exp             1   39[COMRAM] unsigned char 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  3   30[COMRAM] float 
  3278 ;; Registers used:
  3279 ;;		wreg, status,2, status,0, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3285 ;;      Params:         6       0       0       0       0       0       0       0       0
  3286 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3287 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3288 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3289 ;;Total ram usage:       15 bytes
  3290 ;; Hardware stack levels used:    1
  3291 ;; Hardware stack levels required when called:    2
  3292 ;; This function calls:
  3293 ;;		___ftpack
  3294 ;; This function is called by:
  3295 ;;		_setMotores
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299                           	psect	text6
  3300  0009B2                     __ptext6:
  3301                           	opt stack 0
  3302  0009B2                     ___ftmul:
  3303                           	opt stack 26
  3304                           
  3305                           ;incstack = 0
  3306  0009B2  C021  F025         	movff	___ftmul@f1+2,??___ftmul
  3307  0009B6  6A26               	clrf	(??___ftmul+1)& (0+255),c
  3308  0009B8  6A27               	clrf	(??___ftmul+2)& (0+255),c
  3309  0009BA  3420               	rlcf	___ftmul@f1+1,w,c
  3310  0009BC  3625               	rlcf	??___ftmul& (0+255),f,c
  3311  0009BE  E301               	bnc	u2341
  3312  0009C0  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  3313  0009C2                     u2341:
  3314  0009C2  5025               	movf	??___ftmul,w,c
  3315  0009C4  6E28               	movwf	___ftmul@exp,c
  3316  0009C6  5028               	movf	___ftmul@exp,w,c
  3317  0009C8  A4D8               	btfss	status,2,c
  3318  0009CA  D007               	goto	l793
  3319  0009CC  0E00               	movlw	0
  3320  0009CE  6E1F               	movwf	?___ftmul,c
  3321  0009D0  0E00               	movlw	0
  3322  0009D2  6E20               	movwf	?___ftmul+1,c
  3323  0009D4  0E00               	movlw	0
  3324  0009D6  6E21               	movwf	?___ftmul+2,c
  3325  0009D8  0012               	return	
  3326  0009DA                     l793:
  3327  0009DA  C024  F025         	movff	___ftmul@f2+2,??___ftmul
  3328  0009DE  6A26               	clrf	(??___ftmul+1)& (0+255),c
  3329  0009E0  6A27               	clrf	(??___ftmul+2)& (0+255),c
  3330  0009E2  3423               	rlcf	___ftmul@f2+1,w,c
  3331  0009E4  3625               	rlcf	??___ftmul& (0+255),f,c
  3332  0009E6  E301               	bnc	u2361
  3333  0009E8  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  3334  0009EA                     u2361:
  3335  0009EA  5025               	movf	??___ftmul,w,c
  3336  0009EC  6E2D               	movwf	___ftmul@sign,c
  3337  0009EE  502D               	movf	___ftmul@sign,w,c
  3338  0009F0  A4D8               	btfss	status,2,c
  3339  0009F2  D007               	goto	l795
  3340  0009F4  0E00               	movlw	0
  3341  0009F6  6E1F               	movwf	?___ftmul,c
  3342  0009F8  0E00               	movlw	0
  3343  0009FA  6E20               	movwf	?___ftmul+1,c
  3344  0009FC  0E00               	movlw	0
  3345  0009FE  6E21               	movwf	?___ftmul+2,c
  3346  000A00  0012               	return	
  3347  000A02                     l795:
  3348  000A02  502D               	movf	___ftmul@sign,w,c
  3349  000A04  0F7B               	addlw	123
  3350  000A06  2628               	addwf	___ftmul@exp,f,c
  3351  000A08  C021  F02D         	movff	___ftmul@f1+2,___ftmul@sign
  3352  000A0C  5024               	movf	___ftmul@f2+2,w,c
  3353  000A0E  1A2D               	xorwf	___ftmul@sign,f,c
  3354  000A10  0E80               	movlw	128
  3355  000A12  162D               	andwf	___ftmul@sign,f,c
  3356  000A14  8E20               	bsf	___ftmul@f1+1,7,c
  3357  000A16  8E23               	bsf	___ftmul@f2+1,7,c
  3358  000A18  0EFF               	movlw	255
  3359  000A1A  1622               	andwf	___ftmul@f2,f,c
  3360  000A1C  0EFF               	movlw	255
  3361  000A1E  1623               	andwf	___ftmul@f2+1,f,c
  3362  000A20  0E00               	movlw	0
  3363  000A22  1624               	andwf	___ftmul@f2+2,f,c
  3364  000A24  0E00               	movlw	0
  3365  000A26  6E29               	movwf	___ftmul@f3_as_product,c
  3366  000A28  0E00               	movlw	0
  3367  000A2A  6E2A               	movwf	___ftmul@f3_as_product+1,c
  3368  000A2C  0E00               	movlw	0
  3369  000A2E  6E2B               	movwf	___ftmul@f3_as_product+2,c
  3370  000A30  0E07               	movlw	7
  3371  000A32  6E2C               	movwf	___ftmul@cntr,c
  3372  000A34  A01F               	btfss	___ftmul@f1,0,c
  3373  000A36  D006               	goto	l797
  3374  000A38  5022               	movf	___ftmul@f2,w,c
  3375  000A3A  2629               	addwf	___ftmul@f3_as_product,f,c
  3376  000A3C  5023               	movf	___ftmul@f2+1,w,c
  3377  000A3E  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3378  000A40  5024               	movf	___ftmul@f2+2,w,c
  3379  000A42  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3380  000A44                     l797:
  3381  000A44  90D8               	bcf	status,0,c
  3382  000A46  3221               	rrcf	___ftmul@f1+2,f,c
  3383  000A48  3220               	rrcf	___ftmul@f1+1,f,c
  3384  000A4A  321F               	rrcf	___ftmul@f1,f,c
  3385  000A4C  90D8               	bcf	status,0,c
  3386  000A4E  3622               	rlcf	___ftmul@f2,f,c
  3387  000A50  3623               	rlcf	___ftmul@f2+1,f,c
  3388  000A52  3624               	rlcf	___ftmul@f2+2,f,c
  3389  000A54  2E2C               	decfsz	___ftmul@cntr,f,c
  3390  000A56  D7EE               	goto	l796
  3391  000A58  0E09               	movlw	9
  3392  000A5A  6E2C               	movwf	___ftmul@cntr,c
  3393  000A5C  A01F               	btfss	___ftmul@f1,0,c
  3394  000A5E  D006               	goto	l800
  3395  000A60  5022               	movf	___ftmul@f2,w,c
  3396  000A62  2629               	addwf	___ftmul@f3_as_product,f,c
  3397  000A64  5023               	movf	___ftmul@f2+1,w,c
  3398  000A66  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3399  000A68  5024               	movf	___ftmul@f2+2,w,c
  3400  000A6A  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3401  000A6C                     l800:
  3402  000A6C  90D8               	bcf	status,0,c
  3403  000A6E  3221               	rrcf	___ftmul@f1+2,f,c
  3404  000A70  3220               	rrcf	___ftmul@f1+1,f,c
  3405  000A72  321F               	rrcf	___ftmul@f1,f,c
  3406  000A74  90D8               	bcf	status,0,c
  3407  000A76  322B               	rrcf	___ftmul@f3_as_product+2,f,c
  3408  000A78  322A               	rrcf	___ftmul@f3_as_product+1,f,c
  3409  000A7A  3229               	rrcf	___ftmul@f3_as_product,f,c
  3410  000A7C  2E2C               	decfsz	___ftmul@cntr,f,c
  3411  000A7E  D7EE               	goto	l799
  3412  000A80  C029  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3413  000A84  C02A  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3414  000A88  C02B  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3415  000A8C  C028  F016         	movff	___ftmul@exp,___ftpack@exp
  3416  000A90  C02D  F017         	movff	___ftmul@sign,___ftpack@sign
  3417  000A94  EC53  F005         	call	___ftpack	;wreg free
  3418  000A98  C013  F01F         	movff	?___ftpack,?___ftmul
  3419  000A9C  C014  F020         	movff	?___ftpack+1,?___ftmul+1
  3420  000AA0  C015  F021         	movff	?___ftpack+2,?___ftmul+2
  3421  000AA4  0012               	return	
  3422  000AA6                     __end_of___ftmul:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           intcon	equ	0xFF2
  3429                           intcon3	equ	0xFF0
  3430                           status	equ	0xFD8
  3431                           
  3432 ;; *************** function ___awtoft *****************
  3433 ;; Defined at:
  3434 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  c               2   26[COMRAM] int 
  3437 ;; Auto vars:     Size  Location     Type
  3438 ;;  sign            1   29[COMRAM] unsigned char 
  3439 ;; Return value:  Size  Location     Type
  3440 ;;                  3   26[COMRAM] float 
  3441 ;; Registers used:
  3442 ;;		wreg, status,2, status,0, cstack
  3443 ;; Tracked objects:
  3444 ;;		On entry : 0/0
  3445 ;;		On exit  : 0/0
  3446 ;;		Unchanged: 0/0
  3447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3448 ;;      Params:         3       0       0       0       0       0       0       0       0
  3449 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3451 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3452 ;;Total ram usage:        4 bytes
  3453 ;; Hardware stack levels used:    1
  3454 ;; Hardware stack levels required when called:    2
  3455 ;; This function calls:
  3456 ;;		___ftpack
  3457 ;; This function is called by:
  3458 ;;		_setMotores
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text7
  3463  000D54                     __ptext7:
  3464                           	opt stack 0
  3465  000D54                     ___awtoft:
  3466                           	opt stack 26
  3467                           
  3468                           ;incstack = 0
  3469  000D54  0E00               	movlw	0
  3470  000D56  6E1E               	movwf	___awtoft@sign,c
  3471  000D58  AE1C               	btfss	___awtoft@c+1,7,c
  3472  000D5A  D006               	goto	l695
  3473  000D5C  6C1B               	negf	___awtoft@c,c
  3474  000D5E  1E1C               	comf	___awtoft@c+1,f,c
  3475  000D60  B0D8               	btfsc	status,0,c
  3476  000D62  2A1C               	incf	___awtoft@c+1,f,c
  3477  000D64  0E01               	movlw	1
  3478  000D66  6E1E               	movwf	___awtoft@sign,c
  3479  000D68                     l695:
  3480  000D68  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  3481  000D6C  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  3482  000D70  6A15               	clrf	___ftpack@arg+2,c
  3483  000D72  0E8E               	movlw	142
  3484  000D74  6E16               	movwf	___ftpack@exp,c
  3485  000D76  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  3486  000D7A  EC53  F005         	call	___ftpack	;wreg free
  3487  000D7E  C013  F01B         	movff	?___ftpack,?___awtoft
  3488  000D82  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  3489  000D86  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  3490  000D8A  0012               	return	
  3491  000D8C                     __end_of___awtoft:
  3492                           	opt stack 0
  3493                           tblptru	equ	0xFF8
  3494                           tblptrh	equ	0xFF7
  3495                           tblptrl	equ	0xFF6
  3496                           tablat	equ	0xFF5
  3497                           intcon	equ	0xFF2
  3498                           intcon3	equ	0xFF0
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function ___ftpack *****************
  3502 ;; Defined at:
  3503 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;  arg             3   18[COMRAM] unsigned um
  3506 ;;  exp             1   21[COMRAM] unsigned char 
  3507 ;;  sign            1   22[COMRAM] unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  3   18[COMRAM] float 
  3512 ;; Registers used:
  3513 ;;		wreg, status,2, status,0
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/0
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3519 ;;      Params:         5       0       0       0       0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3521 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3522 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3523 ;;Total ram usage:        8 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    1
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		___awtoft
  3530 ;;		___ftmul
  3531 ;; This function uses a non-reentrant model
  3532 ;;
  3533                           
  3534                           	psect	text8
  3535  000AA6                     __ptext8:
  3536                           	opt stack 0
  3537  000AA6                     ___ftpack:
  3538                           	opt stack 26
  3539                           
  3540                           ;incstack = 0
  3541  000AA6  5016               	movf	___ftpack@exp,w,c
  3542  000AA8  B4D8               	btfsc	status,2,c
  3543  000AAA  D005               	goto	u2270
  3544  000AAC  5013               	movf	___ftpack@arg,w,c
  3545  000AAE  1014               	iorwf	___ftpack@arg+1,w,c
  3546  000AB0  1015               	iorwf	___ftpack@arg+2,w,c
  3547  000AB2  A4D8               	btfss	status,2,c
  3548  000AB4  D00C               	goto	l714
  3549  000AB6                     u2270:
  3550  000AB6  0E00               	movlw	0
  3551  000AB8  6E13               	movwf	?___ftpack,c
  3552  000ABA  0E00               	movlw	0
  3553  000ABC  6E14               	movwf	?___ftpack+1,c
  3554  000ABE  0E00               	movlw	0
  3555  000AC0  6E15               	movwf	?___ftpack+2,c
  3556  000AC2  0012               	return	
  3557  000AC4  2A16               	incf	___ftpack@exp,f,c
  3558  000AC6  90D8               	bcf	status,0,c
  3559  000AC8  3215               	rrcf	___ftpack@arg+2,f,c
  3560  000ACA  3214               	rrcf	___ftpack@arg+1,f,c
  3561  000ACC  3213               	rrcf	___ftpack@arg,f,c
  3562  000ACE                     l714:
  3563  000ACE  0E00               	movlw	0
  3564  000AD0  1413               	andwf	___ftpack@arg,w,c
  3565  000AD2  6E18               	movwf	??___ftpack& (0+255),c
  3566  000AD4  0E00               	movlw	0
  3567  000AD6  1414               	andwf	___ftpack@arg+1,w,c
  3568  000AD8  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3569  000ADA  0EFE               	movlw	254
  3570  000ADC  1415               	andwf	___ftpack@arg+2,w,c
  3571  000ADE  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3572  000AE0  5018               	movf	??___ftpack,w,c
  3573  000AE2  1019               	iorwf	??___ftpack+1,w,c
  3574  000AE4  101A               	iorwf	??___ftpack+2,w,c
  3575  000AE6  B4D8               	btfsc	status,2,c
  3576  000AE8  D00C               	goto	l717
  3577  000AEA  D7EC               	goto	l715
  3578  000AEC  2A16               	incf	___ftpack@exp,f,c
  3579  000AEE  0E01               	movlw	1
  3580  000AF0  2613               	addwf	___ftpack@arg,f,c
  3581  000AF2  0E00               	movlw	0
  3582  000AF4  2214               	addwfc	___ftpack@arg+1,f,c
  3583  000AF6  0E00               	movlw	0
  3584  000AF8  2215               	addwfc	___ftpack@arg+2,f,c
  3585  000AFA  90D8               	bcf	status,0,c
  3586  000AFC  3215               	rrcf	___ftpack@arg+2,f,c
  3587  000AFE  3214               	rrcf	___ftpack@arg+1,f,c
  3588  000B00  3213               	rrcf	___ftpack@arg,f,c
  3589  000B02                     l717:
  3590  000B02  0E00               	movlw	0
  3591  000B04  1413               	andwf	___ftpack@arg,w,c
  3592  000B06  6E18               	movwf	??___ftpack& (0+255),c
  3593  000B08  0E00               	movlw	0
  3594  000B0A  1414               	andwf	___ftpack@arg+1,w,c
  3595  000B0C  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3596  000B0E  0EFF               	movlw	255
  3597  000B10  1415               	andwf	___ftpack@arg+2,w,c
  3598  000B12  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3599  000B14  5018               	movf	??___ftpack,w,c
  3600  000B16  1019               	iorwf	??___ftpack+1,w,c
  3601  000B18  101A               	iorwf	??___ftpack+2,w,c
  3602  000B1A  B4D8               	btfsc	status,2,c
  3603  000B1C  D006               	goto	l720
  3604  000B1E  D7E6               	goto	l718
  3605  000B20  0616               	decf	___ftpack@exp,f,c
  3606  000B22  90D8               	bcf	status,0,c
  3607  000B24  3613               	rlcf	___ftpack@arg,f,c
  3608  000B26  3614               	rlcf	___ftpack@arg+1,f,c
  3609  000B28  3615               	rlcf	___ftpack@arg+2,f,c
  3610  000B2A                     l720:
  3611  000B2A  BE14               	btfsc	___ftpack@arg+1,7,c
  3612  000B2C  D003               	goto	u2310
  3613  000B2E  0E02               	movlw	2
  3614  000B30  6016               	cpfslt	___ftpack@exp,c
  3615  000B32  D7F6               	goto	l721
  3616  000B34                     u2310:
  3617  000B34  A016               	btfss	___ftpack@exp,0,c
  3618  000B36  9E14               	bcf	___ftpack@arg+1,7,c
  3619  000B38  90D8               	bcf	status,0,c
  3620  000B3A  3216               	rrcf	___ftpack@exp,f,c
  3621  000B3C  5016               	movf	___ftpack@exp,w,c
  3622  000B3E  1215               	iorwf	___ftpack@arg+2,f,c
  3623  000B40  5017               	movf	___ftpack@sign,w,c
  3624  000B42  A4D8               	btfss	status,2,c
  3625  000B44  8E15               	bsf	___ftpack@arg+2,7,c
  3626  000B46  C013  F013         	movff	___ftpack@arg,?___ftpack
  3627  000B4A  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3628  000B4E  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3629  000B52  0012               	return	
  3630  000B54                     __end_of___ftpack:
  3631                           	opt stack 0
  3632                           tblptru	equ	0xFF8
  3633                           tblptrh	equ	0xFF7
  3634                           tblptrl	equ	0xFF6
  3635                           tablat	equ	0xFF5
  3636                           intcon	equ	0xFF2
  3637                           intcon3	equ	0xFF0
  3638                           status	equ	0xFD8
  3639                           
  3640 ;; *************** function ___awdiv *****************
  3641 ;; Defined at:
  3642 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  dividend        2   18[COMRAM] int 
  3645 ;;  divisor         2   20[COMRAM] int 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  quotient        2   24[COMRAM] int 
  3648 ;;  sign            1   23[COMRAM] unsigned char 
  3649 ;;  counter         1   22[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  2   18[COMRAM] int 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3659 ;;      Params:         4       0       0       0       0       0       0       0       0
  3660 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3662 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3663 ;;Total ram usage:        8 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		_setMotores
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text9
  3674  000C94                     __ptext9:
  3675                           	opt stack 0
  3676  000C94                     ___awdiv:
  3677                           	opt stack 27
  3678                           
  3679                           ;incstack = 0
  3680  000C94  0E00               	movlw	0
  3681  000C96  6E18               	movwf	___awdiv@sign,c
  3682  000C98  AE16               	btfss	___awdiv@divisor+1,7,c
  3683  000C9A  D006               	goto	l667
  3684  000C9C  6C15               	negf	___awdiv@divisor,c
  3685  000C9E  1E16               	comf	___awdiv@divisor+1,f,c
  3686  000CA0  B0D8               	btfsc	status,0,c
  3687  000CA2  2A16               	incf	___awdiv@divisor+1,f,c
  3688  000CA4  0E01               	movlw	1
  3689  000CA6  6E18               	movwf	___awdiv@sign,c
  3690  000CA8                     l667:
  3691  000CA8  AE14               	btfss	___awdiv@dividend+1,7,c
  3692  000CAA  D006               	goto	l668
  3693  000CAC  6C13               	negf	___awdiv@dividend,c
  3694  000CAE  1E14               	comf	___awdiv@dividend+1,f,c
  3695  000CB0  B0D8               	btfsc	status,0,c
  3696  000CB2  2A14               	incf	___awdiv@dividend+1,f,c
  3697  000CB4  0E01               	movlw	1
  3698  000CB6  1A18               	xorwf	___awdiv@sign,f,c
  3699  000CB8                     l668:
  3700  000CB8  0E00               	movlw	0
  3701  000CBA  6E1A               	movwf	___awdiv@quotient+1,c
  3702  000CBC  0E00               	movlw	0
  3703  000CBE  6E19               	movwf	___awdiv@quotient,c
  3704  000CC0  5015               	movf	___awdiv@divisor,w,c
  3705  000CC2  1016               	iorwf	___awdiv@divisor+1,w,c
  3706  000CC4  B4D8               	btfsc	status,2,c
  3707  000CC6  D01C               	goto	l675
  3708  000CC8  0E01               	movlw	1
  3709  000CCA  6E17               	movwf	___awdiv@counter,c
  3710  000CCC  D004               	goto	l670
  3711  000CCE  90D8               	bcf	status,0,c
  3712  000CD0  3615               	rlcf	___awdiv@divisor,f,c
  3713  000CD2  3616               	rlcf	___awdiv@divisor+1,f,c
  3714  000CD4  2A17               	incf	___awdiv@counter,f,c
  3715  000CD6                     l670:
  3716  000CD6  AE16               	btfss	___awdiv@divisor+1,7,c
  3717  000CD8  D7FA               	goto	l671
  3718  000CDA                     u2430:
  3719  000CDA  90D8               	bcf	status,0,c
  3720  000CDC  3619               	rlcf	___awdiv@quotient,f,c
  3721  000CDE  361A               	rlcf	___awdiv@quotient+1,f,c
  3722  000CE0  5015               	movf	___awdiv@divisor,w,c
  3723  000CE2  5C13               	subwf	___awdiv@dividend,w,c
  3724  000CE4  5016               	movf	___awdiv@divisor+1,w,c
  3725  000CE6  5814               	subwfb	___awdiv@dividend+1,w,c
  3726  000CE8  A0D8               	btfss	status,0,c
  3727  000CEA  D005               	goto	l674
  3728  000CEC  5015               	movf	___awdiv@divisor,w,c
  3729  000CEE  5E13               	subwf	___awdiv@dividend,f,c
  3730  000CF0  5016               	movf	___awdiv@divisor+1,w,c
  3731  000CF2  5A14               	subwfb	___awdiv@dividend+1,f,c
  3732  000CF4  8019               	bsf	___awdiv@quotient,0,c
  3733  000CF6                     l674:
  3734  000CF6  90D8               	bcf	status,0,c
  3735  000CF8  3216               	rrcf	___awdiv@divisor+1,f,c
  3736  000CFA  3215               	rrcf	___awdiv@divisor,f,c
  3737  000CFC  2E17               	decfsz	___awdiv@counter,f,c
  3738  000CFE  D7ED               	goto	u2430
  3739  000D00                     l675:
  3740  000D00  5018               	movf	___awdiv@sign,w,c
  3741  000D02  B4D8               	btfsc	status,2,c
  3742  000D04  D004               	goto	l676
  3743  000D06  6C19               	negf	___awdiv@quotient,c
  3744  000D08  1E1A               	comf	___awdiv@quotient+1,f,c
  3745  000D0A  B0D8               	btfsc	status,0,c
  3746  000D0C  2A1A               	incf	___awdiv@quotient+1,f,c
  3747  000D0E                     l676:
  3748  000D0E  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3749  000D12  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3750  000D16  0012               	return	
  3751  000D18                     __end_of___awdiv:
  3752                           	opt stack 0
  3753                           tblptru	equ	0xFF8
  3754                           tblptrh	equ	0xFF7
  3755                           tblptrl	equ	0xFF6
  3756                           tablat	equ	0xFF5
  3757                           intcon	equ	0xFF2
  3758                           intcon3	equ	0xFF0
  3759                           status	equ	0xFD8
  3760                           
  3761 ;; *************** function _ISR *****************
  3762 ;; Defined at:
  3763 ;;		line 269 in file "main.c"
  3764 ;; Parameters:    Size  Location     Type
  3765 ;;		None
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;		None
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  1    wreg      void 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3777 ;;      Params:         0       0       0       0       0       0       0       0       0
  3778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3779 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3780 ;;      Totals:        18       0       0       0       0       0       0       0       0
  3781 ;;Total ram usage:       18 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		Interrupt level 2
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	intcode
  3791  000008                     __pintcode:
  3792                           	opt stack 0
  3793  000008                     _ISR:
  3794                           	opt stack 26
  3795                           
  3796                           ;incstack = 0
  3797  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3798  00000A  EDAA  F005         	call	int_func,f	;refresh shadow registers
  3799                           tblptru	equ	0xFF8
  3800                           tblptrh	equ	0xFF7
  3801                           tblptrl	equ	0xFF6
  3802                           tablat	equ	0xFF5
  3803                           intcon	equ	0xFF2
  3804                           intcon3	equ	0xFF0
  3805                           status	equ	0xFD8
  3806                           
  3807                           	psect	intcode_body
  3808  000B54                     __pintcode_body:
  3809                           	opt stack 26
  3810  000B54                     int_func:
  3811                           	opt stack 26
  3812  000B54  0006               	pop		; remove dummy address from shadow register refresh
  3813  000B56  CFFA F001          	movff	pclath,??_ISR
  3814  000B5A  CFFB F002          	movff	pclatu,??_ISR+1
  3815  000B5E  CFE9 F003          	movff	fsr0l,??_ISR+2
  3816  000B62  CFEA F004          	movff	fsr0h,??_ISR+3
  3817  000B66  CFE1 F005          	movff	fsr1l,??_ISR+4
  3818  000B6A  CFE2 F006          	movff	fsr1h,??_ISR+5
  3819  000B6E  CFD9 F007          	movff	fsr2l,??_ISR+6
  3820  000B72  CFDA F008          	movff	fsr2h,??_ISR+7
  3821  000B76  CFF3 F009          	movff	prodl,??_ISR+8
  3822  000B7A  CFF4 F00A          	movff	prodh,??_ISR+9
  3823  000B7E  CFF6 F00B          	movff	tblptrl,??_ISR+10
  3824  000B82  CFF7 F00C          	movff	tblptrh,??_ISR+11
  3825  000B86  CFF8 F00D          	movff	tblptru,??_ISR+12
  3826  000B8A  CFF5 F00E          	movff	tablat,??_ISR+13
  3827  000B8E  C04A  F00F         	movff	btemp,??_ISR+14
  3828  000B92  C04B  F010         	movff	btemp+1,??_ISR+15
  3829  000B96  C04C  F011         	movff	btemp+2,??_ISR+16
  3830  000B9A  C04D  F012         	movff	btemp+3,??_ISR+17
  3831                           
  3832                           ;main.c: 270: if(!TMR2IF) return;
  3833  000B9E  A29E               	btfss	3998,1,c	;volatile
  3834  000BA0  D007               	goto	i2l491
  3835                           
  3836                           ;main.c: 271: TMR2IF = 0;
  3837  000BA2  929E               	bcf	3998,1,c	;volatile
  3838                           
  3839                           ;main.c: 272: millisCounter++;
  3840  000BA4  0E01               	movlw	1
  3841  000BA6  2646               	addwf	_millisCounter,f,c
  3842  000BA8  0E00               	movlw	0
  3843  000BAA  2247               	addwfc	_millisCounter+1,f,c
  3844  000BAC  2248               	addwfc	_millisCounter+2,f,c
  3845  000BAE  2249               	addwfc	_millisCounter+3,f,c
  3846  000BB0                     i2l491:
  3847  000BB0  C012  F04D         	movff	??_ISR+17,btemp+3
  3848  000BB4  C011  F04C         	movff	??_ISR+16,btemp+2
  3849  000BB8  C010  F04B         	movff	??_ISR+15,btemp+1
  3850  000BBC  C00F  F04A         	movff	??_ISR+14,btemp
  3851  000BC0  C00E  FFF5         	movff	??_ISR+13,tablat
  3852  000BC4  C00D  FFF8         	movff	??_ISR+12,tblptru
  3853  000BC8  C00C  FFF7         	movff	??_ISR+11,tblptrh
  3854  000BCC  C00B  FFF6         	movff	??_ISR+10,tblptrl
  3855  000BD0  C00A  FFF4         	movff	??_ISR+9,prodh
  3856  000BD4  C009  FFF3         	movff	??_ISR+8,prodl
  3857  000BD8  C008  FFDA         	movff	??_ISR+7,fsr2h
  3858  000BDC  C007  FFD9         	movff	??_ISR+6,fsr2l
  3859  000BE0  C006  FFE2         	movff	??_ISR+5,fsr1h
  3860  000BE4  C005  FFE1         	movff	??_ISR+4,fsr1l
  3861  000BE8  C004  FFEA         	movff	??_ISR+3,fsr0h
  3862  000BEC  C003  FFE9         	movff	??_ISR+2,fsr0l
  3863  000BF0  C002  FFFB         	movff	??_ISR+1,pclatu
  3864  000BF4  C001  FFFA         	movff	??_ISR,pclath
  3865  000BF8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3866  000BFA  0011               	retfie		f
  3867  000BFC                     __end_of_ISR:
  3868                           	opt stack 0
  3869  0000                     pclatu	equ	0xFFB
  3870                           pclath	equ	0xFFA
  3871                           tblptru	equ	0xFF8
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           prodh	equ	0xFF4
  3876                           prodl	equ	0xFF3
  3877                           intcon	equ	0xFF2
  3878                           intcon3	equ	0xFF0
  3879                           fsr0h	equ	0xFEA
  3880                           fsr0l	equ	0xFE9
  3881                           fsr1h	equ	0xFE2
  3882                           fsr1l	equ	0xFE1
  3883                           fsr2h	equ	0xFDA
  3884                           fsr2l	equ	0xFD9
  3885                           status	equ	0xFD8
  3886                           pclatu	equ	0xFFB
  3887                           pclath	equ	0xFFA
  3888                           tblptru	equ	0xFF8
  3889                           tblptrh	equ	0xFF7
  3890                           tblptrl	equ	0xFF6
  3891                           tablat	equ	0xFF5
  3892                           prodh	equ	0xFF4
  3893                           prodl	equ	0xFF3
  3894                           intcon	equ	0xFF2
  3895                           intcon3	equ	0xFF0
  3896                           fsr0h	equ	0xFEA
  3897                           fsr0l	equ	0xFE9
  3898                           fsr1h	equ	0xFE2
  3899                           fsr1l	equ	0xFE1
  3900                           fsr2h	equ	0xFDA
  3901                           fsr2l	equ	0xFD9
  3902                           status	equ	0xFD8
  3903                           
  3904                           	psect	rparam
  3905  0000                     pclatu	equ	0xFFB
  3906                           pclath	equ	0xFFA
  3907                           tblptru	equ	0xFF8
  3908                           tblptrh	equ	0xFF7
  3909                           tblptrl	equ	0xFF6
  3910                           tablat	equ	0xFF5
  3911                           prodh	equ	0xFF4
  3912                           prodl	equ	0xFF3
  3913                           intcon	equ	0xFF2
  3914                           intcon3	equ	0xFF0
  3915                           fsr0h	equ	0xFEA
  3916                           fsr0l	equ	0xFE9
  3917                           fsr1h	equ	0xFE2
  3918                           fsr1l	equ	0xFE1
  3919                           fsr2h	equ	0xFDA
  3920                           fsr2l	equ	0xFD9
  3921                           status	equ	0xFD8
  3922                           
  3923                           	psect	temp
  3924  00004A                     btemp:
  3925                           	opt stack 0
  3926  00004A                     	ds	1
  3927  0000                     int$flags	set	btemp
  3928  0000                     wtemp6	set	btemp+1
  3929                           pclatu	equ	0xFFB
  3930                           pclath	equ	0xFFA
  3931                           tblptru	equ	0xFF8
  3932                           tblptrh	equ	0xFF7
  3933                           tblptrl	equ	0xFF6
  3934                           tablat	equ	0xFF5
  3935                           prodh	equ	0xFF4
  3936                           prodl	equ	0xFF3
  3937                           intcon	equ	0xFF2
  3938                           intcon3	equ	0xFF0
  3939                           fsr0h	equ	0xFEA
  3940                           fsr0l	equ	0xFE9
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           fsr2h	equ	0xFDA
  3944                           fsr2l	equ	0xFD9
  3945                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      73
    BANK0           160      5       5
    BANK1           256    170     178
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_setMotores
    _init->_setMotores
    _setMotores->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21300
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               175   175      0   12241
                                              0 BANK0      5     5      0
                                              0 BANK1    170   170      0
                             _millis
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    9059
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _setMotores                                           9     5      4    9059
                                             60 COMRAM     9     5      4
                            ___awdiv
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     404
                                             45 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3144
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2631
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2388
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _loop
     _millis
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     AA      B2       7       69.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     45      49       1       77.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     100      20        0.0%
DATA                 0      0     100       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 10 20:50:59 2019

                     l70 0014                       l57 0C92                       l69 06AC  
                     l87 0040                       l99 005E             ___awdiv@sign 0018  
            __CFG_BORV$0 000000             __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000  
           __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000                      l101 0084  
                    l113 0108                      l211 02E6                      l133 00E8  
                    l142 0130                      l311 03C2                      l127 00C2  
                    l119 009C                      l340 03EA                      l180 021E  
                    l164 0178                      l165 0184                      l166 01B0  
                    l186 0292                      l179 01CC                      l461 073A  
                    l429 066E                      l349 0422                      l269 0362  
                    l390 04AC                      l471 0786                      l463 0742  
                    l391 04D4                      l720 0B2A                      l800 0A6C  
                    l392 04FC                      l368 0482                      l721 0B20  
                    l465 0790                      l457 074C                      l393 0548  
                    l714 0ACE                      l394 055E                      l386 0442  
                    l298 038A                      l715 0AC4                      l475 07D4  
                    l467 0798                      l459 0754                      l395 0586  
                    l396 05AE                      l717 0B02                      l469 077E  
                    l397 05D6                      l389 048C                      l670 0CD6  
                    l718 0AEC                      l822 0984                      l814 08EA  
                    l398 05FE                      l671 0CCE                      l823 0978  
                    l479 07E4                      l816 0960                      l496 0DA2  
                    l825 09A0                      l817 0950                      l674 0CF6  
                    l675 0D00                      l667 0CA8                      l676 0D0E  
                    l668 0CB8                      l695 0D68                      l793 09DA  
                    l795 0A02                      l796 0A34                      l797 0A44  
                    l799 0A5C             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      _ISR 0008             __CFG_BOR$OFF 000000  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
                   l3029 0362                     u2310 0B34                     u2341 09C2  
                   u2430 0CDA                     u2270 0AB6                     u5000 027A  
                   u2361 09EA                     u2530 098A                     u2610 07B8  
                   u2550 0720                     u5110 02C8                     u2471 08CE  
                   _PIE1 000F9D                     u2608 07A4                     u2560 0730  
                   u6000 044C                     u5040 029A                     _PIE2 000FA0  
                   u2490 0908                     u2570 0764                     u5050 029C  
                   u5018 027E                     u2628 07BA                     u2580 0774  
                   u2590 07A2                     u6110 060A                     u5070 02B2  
                   u2495 0900                     u6200 0658                     u5400 033E  
                   u5160 02EE                     u5080 02B4                     u6210 065A  
                   u6130 0626                     u5250 0316                     u5170 02F0  
                   u6300 068C                     u5500 036A                     u5260 0318  
                   u4700 00F0                     u4620 008C                     u6310 068E  
                   u5510 036C                     u4710 00F2                     u4630 008E  
                   u6128 060E                     u6170 0640                     u4650 00A4  
                   u4570 0048                     u6180 0642                     u6148 062A  
                   u4660 00A6                     u4580 004A                     u6270 0676  
                   u5390 033C                     u4830 0142                     u6280 0678  
                   u5800 03F4                     u5720 03CA                     u4840 0144  
                   u5730 03CC                     u5570 0392                     u5580 0394  
                   u4935 0180                     u4936 0182                     u4785 0138  
                   u4786 013A                     u5790 03F2                     u4895 0162  
                   u5960 042A                     u4896 0164                     u5970 042C  
                   u5990 044A                     _main 0D9E             ___ftpack@arg 0013  
                   _init 0BFC                     _loop 0012             ___ftpack@exp 0016  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 004A                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_IESO$OFF 000000             ___ftmul@cntr 002C  
           ___param_bank 000000             ___ftmul@sign 002D                    ??_ISR 0001  
           ___fttol@exp1 003C             ___fttol@lval 0038            __CFG_PLLDIV$5 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 0001                    ?_init 0001  
        __end_of___awdiv 0D18                    ?_loop 0001          __end_of___ftmul 0AA6  
        ___awdiv@divisor 0015          __end_of___fttol 09B2                    _T2CON 000FCA  
                  i2l491 0BB0          ___awdiv@counter 0017            __CFG_USBDIV$2 000000  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 001E  
          ___ftpack@sign 0017                    pclath 000FFA                    tablat 000FF5  
                  loop@m 01AA                    status 000FD8                    wtemp6 004B  
         __CFG_MCLRE$OFF 000000          __initialization 0D18             __end_of_main 0DA8  
           __end_of_init 0C94             __end_of_loop 0710          setMotores@dutyD 003F  
        setMotores@dutyI 003D                   ??_main 0046            ___fttol@sign1 0037  
                 ??_init 0046                   ??_loop 0060            __activetblptr 000002  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB         ___awdiv@dividend 0013  
       __end_of___awtoft 0D8C         __end_of___ftpack 0B54                   _TMR2IF 007CF1  
         __CFG_XINST$OFF 000000                ??___awdiv 0017                ??___ftmul 0025  
              ??___fttol 0032            loop@direccion 01B0                   _millis 0D8C  
       ___awdiv@quotient 0019    ___ftmul@f3_as_product 0029                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0D46          __CFG_PBADEN$OFF 000000           _setMotores$935 0042  
         _setMotores$936 0044            ___rparam_used 000001               ___awtoft@c 001B  
             ___ftmul@f1 001F               ___ftmul@f2 0022               ___fttol@f1 002E  
         __pcstackCOMRAM 0001             __pidataBANK1 0DA8               __pbssBANK1 01AA  
                ?_millis 0013                ?___awtoft 001B                ?___ftpack 0013  
                _INTCON3 000FF0          __CFG_VREGEN$OFF 000000                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0C94                  ___ftmul 09B2  
                ___fttol 08BE          __CFG_STVREN$OFF 000000                  __pcinit 0D18  
             ??___awtoft 001E               ??___ftpack 0018          __size_of_millis 0012  
                __ramtop 0800                  __ptext0 0D9E                  __ptext1 0012  
                __ptext2 0D8C                  __ptext3 0BFC                  __ptext4 0710  
                __ptext5 08BE                  __ptext6 09B2                  __ptext7 0D54  
                __ptext8 0AA6                  __ptext9 0C94            _millisCounter 0046  
           __size_of_ISR 0BF4                _T2CONbits 000FCA           __pintcode_body 0B54  
   end_of_initialization 0D46            __Lmediumconst 0000                  int_func 0B54  
             _setMotores 0710                _PORTAbits 000F80                _PORTBbits 000F81  
              _PORTCbits 000F82                _TRISAbits 000F92                _TRISBbits 000F93  
              _TRISCbits 000F94              _CCP1CONbits 000FBD              _CCP2CONbits 000FBA  
            ___ftmul@exp 0028           __end_of_millis 0D9E      start_initialization 0D18  
            __end_of_ISR 0BFC              ?_setMotores 003D              __pdataBANK1 01B0  
       __CFG_LPT1OSC$OFF 000000                 ??_millis 0017        __size_of___awtoft 0038  
      __size_of___ftpack 00AE              __pbssCOMRAM 0046            __pcstackBANK0 0060  
          __pcstackBANK1 0100               loop@estado 01AE                __pintcode 0008  
               ?___awdiv 0013                 ?___ftmul 001F                 ?___fttol 002E  
    __size_of_setMotores 01AE                 _LATAbits 000F89                 _LATCbits 000F8B  
               _PIE1bits 000F9D                 _UCFGbits 000F6F                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000                 _UCONbits 000F6D               _ADCON1bits 000FC1  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awdiv 0084  
       __size_of___ftmul 00F4         __size_of___fttol 00F4                 ___awtoft 0D54  
               ___ftpack 0AA6                 _loop$900 0168                 _loop$901 016A  
               _loop$910 017C                 _loop$902 016C                 _loop$830 0100  
               _loop$911 017E                 _loop$903 016E                 _loop$831 0102  
               _loop$920 0190                 _loop$912 0180                 _loop$904 0170  
               _loop$840 0114                 _loop$832 0104                 _loop$921 0192  
               _loop$913 0182                 _loop$905 0172                 _loop$841 0116  
               _loop$833 0106                 _loop$930 01A4                 _loop$922 0194  
               _loop$914 0184                 _loop$906 0174                 _loop$842 0118  
               _loop$834 0108                 _loop$931 01A6                 _loop$923 0196  
               _loop$915 0186                 _loop$907 0176                 _loop$843 011A  
               _loop$835 010A                 _loop$924 0198                 _loop$916 0188  
               _loop$908 0178                 _loop$844 011C                 _loop$836 010C  
               _loop$861 01A8                 _loop$925 019A                 _loop$917 018A  
               _loop$909 017A                 _loop$837 010E                 _loop$926 019C  
               _loop$918 018C                 _loop$870 012C                 _loop$862 011E  
               _loop$838 0110                 _loop$927 019E                 _loop$919 018E  
               _loop$871 012E                 _loop$863 0120                 _loop$839 0112  
               _loop$928 01A0                 _loop$880 0140                 _loop$872 0130  
               _loop$864 0122                 _loop$929 01A2                 _loop$881 0142  
               _loop$873 0132                 _loop$865 0124                 _loop$890 0154  
               _loop$882 0144                 _loop$874 0134                 _loop$866 0126  
               _loop$867 01A9                 _loop$891 0156                 _loop$883 0146  
               _loop$875 0136                 _loop$892 0158                 _loop$884 0148  
               _loop$876 0138                 _loop$868 0128                 _loop$893 015A  
               _loop$885 014A                 _loop$877 013A                 _loop$869 012A  
               _loop$894 015C                 _loop$886 014C                 _loop$878 013C  
               _loop$895 015E                 _loop$887 014E                 _loop$879 013E  
               _loop$896 0160                 _loop$888 0150                 _loop$897 0162  
               _loop$889 0152                 _loop$898 0164                 _loop$899 0166  
           ??_setMotores 0041            __size_of_main 000A            __size_of_init 0098  
          __size_of_loop 06FE                 int$flags 004A    __CFG_CPUDIV$OSC1_PLL2 000000  
             _INTCONbits 000FF2       __end_of_setMotores 08BE                 intlevel2 0000  
     __CFG_FOSC$HSPLL_HS 000000  
