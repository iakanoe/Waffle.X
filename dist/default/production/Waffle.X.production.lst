

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 11 19:16:30 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    29  0000                     
    30                           ; Version 1.45
    31                           ; Generated 16/11/2017 GMT
    32                           ; 
    33                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F2550 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     
    65                           	psect	idataBANK1
    66  000E60                     __pidataBANK1:
    67                           	opt stack 0
    68                           
    69                           ;initializer for loop@direccion
    70  000E60  0005               	dw	5
    71  0000                     _LATCbits	set	3979
    72  0000                     _PORTCbits	set	3970
    73  0000                     _PORTBbits	set	3969
    74  0000                     _PORTAbits	set	3968
    75  0000                     _LATAbits	set	3977
    76  0000                     _INTCONbits	set	4082
    77  0000                     _PIE1bits	set	3997
    78  0000                     _RCONbits	set	4048
    79  0000                     _PIE2	set	4000
    80  0000                     _PIE1	set	3997
    81  0000                     _INTCON3	set	4080
    82  0000                     _CCP2CONbits	set	4026
    83  0000                     _CCPR2L	set	4027
    84  0000                     _CCP1CONbits	set	4029
    85  0000                     _CCPR1L	set	4030
    86  0000                     _PR2	set	4043
    87  0000                     _T2CONbits	set	4042
    88  0000                     _T2CON	set	4042
    89  0000                     _TRISCbits	set	3988
    90  0000                     _TRISBbits	set	3987
    91  0000                     _TRISAbits	set	3986
    92  0000                     _UCFGbits	set	3951
    93  0000                     _UCONbits	set	3949
    94  0000                     _ADCON1bits	set	4033
    95  0000                     _TMR2IF	set	31985
    96                           
    97                           ; #config settings
    98  0000                     
    99                           	psect	cinit
   100  000DCE                     __pcinit:
   101                           	opt stack 0
   102  000DCE                     start_initialization:
   103                           	opt stack 0
   104  000DCE                     __initialization:
   105                           	opt stack 0
   106                           
   107                           ; Initialize objects allocated to BANK1 (2 bytes)
   108                           ; load TBLPTR registers with __pidataBANK1
   109  000DCE  0E60               	movlw	low __pidataBANK1
   110  000DD0  6EF6               	movwf	tblptrl,c
   111  000DD2  0E0E               	movlw	high __pidataBANK1
   112  000DD4  6EF7               	movwf	tblptrh,c
   113  000DD6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   114  000DD8  6EF8               	movwf	tblptru,c
   115  000DDA  0009               	tblrd		*+	;fetch initializer
   116  000DDC  CFF5 F1C2          	movff	tablat,__pdataBANK1
   117  000DE0  0009               	tblrd		*+	;fetch initializer
   118  000DE2  CFF5 F1C3          	movff	tablat,__pdataBANK1+1
   119                           
   120                           ; Clear objects allocated to BANK1 (6 bytes)
   121  000DE6  0101               	movlb	1
   122  000DE8  6BC1               	clrf	(__pbssBANK1+5)& (0+255),b
   123  000DEA  6BC0               	clrf	(__pbssBANK1+4)& (0+255),b
   124  000DEC  6BBF               	clrf	(__pbssBANK1+3)& (0+255),b
   125  000DEE  6BBE               	clrf	(__pbssBANK1+2)& (0+255),b
   126  000DF0  6BBD               	clrf	(__pbssBANK1+1)& (0+255),b
   127  000DF2  6BBC               	clrf	__pbssBANK1& (0+255),b
   128                           
   129                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   130  000DF4  6A4A               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   131                           
   132                           ; Clear objects allocated to COMRAM (4 bytes)
   133  000DF6  6A49               	clrf	(__pbssCOMRAM+3)& (0+255),c
   134  000DF8  6A48               	clrf	(__pbssCOMRAM+2)& (0+255),c
   135  000DFA  6A47               	clrf	(__pbssCOMRAM+1)& (0+255),c
   136  000DFC  6A46               	clrf	__pbssCOMRAM& (0+255),c
   137  000DFE                     end_of_initialization:
   138                           	opt stack 0
   139  000DFE                     __end_of__initialization:
   140                           	opt stack 0
   141  000DFE  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   142  000E00  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   143  000E02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   144  000E04  6EF8               	movwf	tblptru,c
   145  000E06  0100               	movlb	0
   146  000E08  EF2B  F007         	goto	_main	;jump to C main() function
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           
   152                           	psect	bitbssCOMRAM
   153  000250                     __pbitbssCOMRAM:
   154                           	opt stack 0
   155  000250                     loop@ciego:
   156                           	opt stack 0
   157  000250                     	ds	1
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           
   163                           	psect	bssCOMRAM
   164  000046                     __pbssCOMRAM:
   165                           	opt stack 0
   166  000046                     _millisCounter:
   167                           	opt stack 0
   168  000046                     	ds	4
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           
   174                           	psect	bssBANK1
   175  0001BC                     __pbssBANK1:
   176                           	opt stack 0
   177  0001BC                     loop@m:
   178                           	opt stack 0
   179  0001BC                     	ds	4
   180  0001C0                     loop@estado:
   181                           	opt stack 0
   182  0001C0                     	ds	2
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           tblptrl	equ	0xFF6
   186                           tablat	equ	0xFF5
   187                           
   188                           	psect	dataBANK1
   189  0001C2                     __pdataBANK1:
   190                           	opt stack 0
   191  0001C2                     loop@direccion:
   192                           	opt stack 0
   193  0001C2                     	ds	2
   194                           tblptru	equ	0xFF8
   195                           tblptrh	equ	0xFF7
   196                           tblptrl	equ	0xFF6
   197                           tablat	equ	0xFF5
   198                           
   199                           	psect	cstackBANK1
   200  000100                     __pcstackBANK1:
   201                           	opt stack 0
   202  000100                     _loop$832:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x0
   206  000100                     	ds	2
   207  000102                     _loop$833:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x2
   211  000102                     	ds	2
   212  000104                     _loop$834:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x4
   216  000104                     	ds	2
   217  000106                     _loop$835:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x6
   221  000106                     	ds	2
   222  000108                     _loop$836:
   223                           	opt stack 0
   224                           
   225                           ; 2 bytes @ 0x8
   226  000108                     	ds	2
   227  00010A                     _loop$837:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0xA
   231  00010A                     	ds	2
   232  00010C                     _loop$838:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0xC
   236  00010C                     	ds	2
   237  00010E                     _loop$839:
   238                           	opt stack 0
   239                           
   240                           ; 2 bytes @ 0xE
   241  00010E                     	ds	2
   242  000110                     _loop$840:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x10
   246  000110                     	ds	2
   247  000112                     _loop$841:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x12
   251  000112                     	ds	2
   252  000114                     _loop$842:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x14
   256  000114                     	ds	2
   257  000116                     _loop$843:
   258                           	opt stack 0
   259                           
   260                           ; 2 bytes @ 0x16
   261  000116                     	ds	2
   262  000118                     _loop$844:
   263                           	opt stack 0
   264                           
   265                           ; 2 bytes @ 0x18
   266  000118                     	ds	2
   267  00011A                     _loop$845:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x1A
   271  00011A                     	ds	2
   272  00011C                     _loop$846:
   273                           	opt stack 0
   274                           
   275                           ; 2 bytes @ 0x1C
   276  00011C                     	ds	2
   277  00011E                     _loop$863:
   278                           	opt stack 0
   279                           
   280                           ; 2 bytes @ 0x1E
   281  00011E                     	ds	2
   282  000120                     _loop$864:
   283                           	opt stack 0
   284                           
   285                           ; 2 bytes @ 0x20
   286  000120                     	ds	2
   287  000122                     _loop$865:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x22
   291  000122                     	ds	2
   292  000124                     _loop$866:
   293                           	opt stack 0
   294                           
   295                           ; 2 bytes @ 0x24
   296  000124                     	ds	2
   297  000126                     _loop$867:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x26
   301  000126                     	ds	2
   302  000128                     _loop$868:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x28
   306  000128                     	ds	2
   307  00012A                     _loop$869:
   308                           	opt stack 0
   309                           
   310                           ; 2 bytes @ 0x2A
   311  00012A                     	ds	2
   312  00012C                     _loop$870:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x2C
   316  00012C                     	ds	2
   317  00012E                     _loop$871:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x2E
   321  00012E                     	ds	2
   322  000130                     _loop$872:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x30
   326  000130                     	ds	2
   327  000132                     _loop$873:
   328                           	opt stack 0
   329                           
   330                           ; 2 bytes @ 0x32
   331  000132                     	ds	2
   332  000134                     _loop$874:
   333                           	opt stack 0
   334                           
   335                           ; 2 bytes @ 0x34
   336  000134                     	ds	2
   337  000136                     _loop$875:
   338                           	opt stack 0
   339                           
   340                           ; 2 bytes @ 0x36
   341  000136                     	ds	2
   342  000138                     _loop$876:
   343                           	opt stack 0
   344                           
   345                           ; 2 bytes @ 0x38
   346  000138                     	ds	2
   347  00013A                     _loop$877:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x3A
   351  00013A                     	ds	2
   352  00013C                     _loop$878:
   353                           	opt stack 0
   354                           
   355                           ; 2 bytes @ 0x3C
   356  00013C                     	ds	2
   357  00013E                     _loop$879:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x3E
   361  00013E                     	ds	2
   362  000140                     _loop$880:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x40
   366  000140                     	ds	2
   367  000142                     _loop$881:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x42
   371  000142                     	ds	2
   372  000144                     _loop$882:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x44
   376  000144                     	ds	2
   377  000146                     _loop$883:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x46
   381  000146                     	ds	2
   382  000148                     _loop$884:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x48
   386  000148                     	ds	2
   387  00014A                     _loop$885:
   388                           	opt stack 0
   389                           
   390                           ; 2 bytes @ 0x4A
   391  00014A                     	ds	2
   392  00014C                     _loop$886:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x4C
   396  00014C                     	ds	2
   397  00014E                     _loop$887:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x4E
   401  00014E                     	ds	2
   402  000150                     _loop$888:
   403                           	opt stack 0
   404                           
   405                           ; 2 bytes @ 0x50
   406  000150                     	ds	2
   407  000152                     _loop$889:
   408                           	opt stack 0
   409                           
   410                           ; 2 bytes @ 0x52
   411  000152                     	ds	2
   412  000154                     _loop$890:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x54
   416  000154                     	ds	2
   417  000156                     _loop$891:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x56
   421  000156                     	ds	2
   422  000158                     _loop$892:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x58
   426  000158                     	ds	2
   427  00015A                     _loop$893:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x5A
   431  00015A                     	ds	2
   432  00015C                     _loop$894:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x5C
   436  00015C                     	ds	2
   437  00015E                     _loop$895:
   438                           	opt stack 0
   439                           
   440                           ; 2 bytes @ 0x5E
   441  00015E                     	ds	2
   442  000160                     _loop$896:
   443                           	opt stack 0
   444                           
   445                           ; 2 bytes @ 0x60
   446  000160                     	ds	2
   447  000162                     _loop$897:
   448                           	opt stack 0
   449                           
   450                           ; 2 bytes @ 0x62
   451  000162                     	ds	2
   452  000164                     _loop$898:
   453                           	opt stack 0
   454                           
   455                           ; 2 bytes @ 0x64
   456  000164                     	ds	2
   457  000166                     _loop$899:
   458                           	opt stack 0
   459                           
   460                           ; 2 bytes @ 0x66
   461  000166                     	ds	2
   462  000168                     _loop$900:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x68
   466  000168                     	ds	2
   467  00016A                     _loop$901:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x6A
   471  00016A                     	ds	2
   472  00016C                     _loop$902:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x6C
   476  00016C                     	ds	2
   477  00016E                     _loop$903:
   478                           	opt stack 0
   479                           
   480                           ; 2 bytes @ 0x6E
   481  00016E                     	ds	2
   482  000170                     _loop$904:
   483                           	opt stack 0
   484                           
   485                           ; 2 bytes @ 0x70
   486  000170                     	ds	2
   487  000172                     _loop$905:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x72
   491  000172                     	ds	2
   492  000174                     _loop$906:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x74
   496  000174                     	ds	2
   497  000176                     _loop$907:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x76
   501  000176                     	ds	2
   502  000178                     _loop$908:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x78
   506  000178                     	ds	2
   507  00017A                     _loop$909:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x7A
   511  00017A                     	ds	2
   512  00017C                     _loop$910:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x7C
   516  00017C                     	ds	2
   517  00017E                     _loop$911:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x7E
   521  00017E                     	ds	2
   522  000180                     _loop$912:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x80
   526  000180                     	ds	2
   527  000182                     _loop$913:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x82
   531  000182                     	ds	2
   532  000184                     _loop$914:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x84
   536  000184                     	ds	2
   537  000186                     _loop$915:
   538                           	opt stack 0
   539                           
   540                           ; 2 bytes @ 0x86
   541  000186                     	ds	2
   542  000188                     _loop$916:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0x88
   546  000188                     	ds	2
   547  00018A                     _loop$917:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x8A
   551  00018A                     	ds	2
   552  00018C                     _loop$918:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x8C
   556  00018C                     	ds	2
   557  00018E                     _loop$919:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x8E
   561  00018E                     	ds	2
   562  000190                     _loop$920:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x90
   566  000190                     	ds	2
   567  000192                     _loop$921:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x92
   571  000192                     	ds	2
   572  000194                     _loop$922:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x94
   576  000194                     	ds	2
   577  000196                     _loop$923:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x96
   581  000196                     	ds	2
   582  000198                     _loop$924:
   583                           	opt stack 0
   584                           
   585                           ; 2 bytes @ 0x98
   586  000198                     	ds	2
   587  00019A                     _loop$925:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x9A
   591  00019A                     	ds	2
   592  00019C                     _loop$926:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x9C
   596  00019C                     	ds	2
   597  00019E                     _loop$927:
   598                           	opt stack 0
   599                           
   600                           ; 2 bytes @ 0x9E
   601  00019E                     	ds	2
   602  0001A0                     _loop$928:
   603                           	opt stack 0
   604                           
   605                           ; 2 bytes @ 0xA0
   606  0001A0                     	ds	2
   607  0001A2                     _loop$929:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xA2
   611  0001A2                     	ds	2
   612  0001A4                     _loop$930:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0xA4
   616  0001A4                     	ds	2
   617  0001A6                     _loop$931:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0xA6
   621  0001A6                     	ds	2
   622  0001A8                     _loop$932:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0xA8
   626  0001A8                     	ds	2
   627  0001AA                     _loop$933:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0xAA
   631  0001AA                     	ds	2
   632  0001AC                     _loop$934:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0xAC
   636  0001AC                     	ds	2
   637  0001AE                     _loop$935:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0xAE
   641  0001AE                     	ds	2
   642  0001B0                     _loop$936:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0xB0
   646  0001B0                     	ds	2
   647  0001B2                     _loop$937:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0xB2
   651  0001B2                     	ds	2
   652  0001B4                     _loop$938:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0xB4
   656  0001B4                     	ds	2
   657  0001B6                     _loop$939:
   658                           	opt stack 0
   659                           
   660                           ; 2 bytes @ 0xB6
   661  0001B6                     	ds	2
   662  0001B8                     _loop$940:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0xB8
   666  0001B8                     	ds	2
   667  0001BA                     _loop$941:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0xBA
   671  0001BA                     	ds	2
   672                           tblptru	equ	0xFF8
   673                           tblptrh	equ	0xFF7
   674                           tblptrl	equ	0xFF6
   675                           tablat	equ	0xFF5
   676                           
   677                           	psect	cstackBANK0
   678  000060                     __pcstackBANK0:
   679                           	opt stack 0
   680  000060                     ??_loop:
   681                           
   682                           ; 1 bytes @ 0x0
   683  000060                     	ds	5
   684                           tblptru	equ	0xFF8
   685                           tblptrh	equ	0xFF7
   686                           tblptrl	equ	0xFF6
   687                           tablat	equ	0xFF5
   688                           
   689                           	psect	cstackCOMRAM
   690  000001                     __pcstackCOMRAM:
   691                           	opt stack 0
   692  000001                     ??_ISR:
   693  000001                     
   694                           ; 1 bytes @ 0x0
   695  000001                     	ds	18
   696  000013                     ?___awdiv:
   697                           	opt stack 0
   698  000013                     ?___ftpack:
   699                           	opt stack 0
   700  000013                     ?_millis:
   701                           	opt stack 0
   702  000013                     ___awdiv@dividend:
   703                           	opt stack 0
   704  000013                     ___ftpack@arg:
   705                           	opt stack 0
   706                           
   707                           ; 3 bytes @ 0x12
   708  000013                     	ds	2
   709  000015                     ___awdiv@divisor:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x14
   713  000015                     	ds	1
   714  000016                     ___ftpack@exp:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x15
   718  000016                     	ds	1
   719  000017                     ___awdiv@counter:
   720                           	opt stack 0
   721  000017                     ___ftpack@sign:
   722                           	opt stack 0
   723                           
   724                           ; 1 bytes @ 0x16
   725  000017                     	ds	1
   726  000018                     ??___ftpack:
   727  000018                     ___awdiv@sign:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x17
   731  000018                     	ds	1
   732  000019                     ___awdiv@quotient:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x18
   736  000019                     	ds	2
   737  00001B                     ?___awtoft:
   738                           	opt stack 0
   739  00001B                     ___awtoft@c:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x1A
   743  00001B                     	ds	3
   744  00001E                     ___awtoft@sign:
   745                           	opt stack 0
   746                           
   747                           ; 1 bytes @ 0x1D
   748  00001E                     	ds	1
   749  00001F                     ?___ftmul:
   750                           	opt stack 0
   751  00001F                     ___ftmul@f1:
   752                           	opt stack 0
   753                           
   754                           ; 3 bytes @ 0x1E
   755  00001F                     	ds	3
   756  000022                     ___ftmul@f2:
   757                           	opt stack 0
   758                           
   759                           ; 3 bytes @ 0x21
   760  000022                     	ds	3
   761  000025                     ??___ftmul:
   762                           
   763                           ; 1 bytes @ 0x24
   764  000025                     	ds	3
   765  000028                     ___ftmul@exp:
   766                           	opt stack 0
   767                           
   768                           ; 1 bytes @ 0x27
   769  000028                     	ds	1
   770  000029                     ___ftmul@f3_as_product:
   771                           	opt stack 0
   772                           
   773                           ; 3 bytes @ 0x28
   774  000029                     	ds	3
   775  00002C                     ___ftmul@cntr:
   776                           	opt stack 0
   777                           
   778                           ; 1 bytes @ 0x2B
   779  00002C                     	ds	1
   780  00002D                     ___ftmul@sign:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x2C
   784  00002D                     	ds	1
   785  00002E                     ?___fttol:
   786                           	opt stack 0
   787  00002E                     ___fttol@f1:
   788                           	opt stack 0
   789                           
   790                           ; 3 bytes @ 0x2D
   791  00002E                     	ds	4
   792  000032                     ??___fttol:
   793                           
   794                           ; 1 bytes @ 0x31
   795  000032                     	ds	5
   796  000037                     ___fttol@sign1:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x36
   800  000037                     	ds	1
   801  000038                     ___fttol@lval:
   802                           	opt stack 0
   803                           
   804                           ; 4 bytes @ 0x37
   805  000038                     	ds	4
   806  00003C                     ___fttol@exp1:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0x3B
   810  00003C                     	ds	1
   811  00003D                     setMotores@dutyI:
   812                           	opt stack 0
   813                           
   814                           ; 2 bytes @ 0x3C
   815  00003D                     	ds	2
   816  00003F                     setMotores@dutyD:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x3E
   820  00003F                     	ds	2
   821  000041                     ??_setMotores:
   822                           
   823                           ; 1 bytes @ 0x40
   824  000041                     	ds	1
   825  000042                     _setMotores$945:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x41
   829  000042                     	ds	2
   830  000044                     _setMotores$946:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x43
   834  000044                     	ds	2
   835  000046                     tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           
   840                           ; 1 bytes @ 0x45
   841 ;;
   842 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   843 ;;
   844 ;; *************** function _main *****************
   845 ;; Defined at:
   846 ;;		line 297 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   860 ;;      Params:         0       0       0       0       0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0
   863 ;;      Totals:         0       0       0       0       0       0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels required when called:    5
   866 ;; This function calls:
   867 ;;		_init
   868 ;;		_loop
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text0
   875  000E56                     __ptext0:
   876                           	opt stack 0
   877  000E56                     _main:
   878                           	opt stack 26
   879                           
   880                           ;main.c: 298: init();
   881                           
   882                           ;incstack = 0
   883  000E56  EC59  F006         	call	_init	;wreg free
   884  000E5A                     l535:
   885  000E5A  EC09  F000         	call	_loop	;wreg free
   886  000E5E  D7FD               	goto	l535
   887  000E60                     __end_of_main:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           
   894 ;; *************** function _loop *****************
   895 ;; Defined at:
   896 ;;		line 71 in file "main.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;		None
   899 ;; Auto vars:     Size  Location     Type
   900 ;;		None
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         0       0       0       0       0       0       0       0       0
   911 ;;      Locals:         0       0     188       0       0       0       0       0       0
   912 ;;      Temps:          0       5       0       0       0       0       0       0       0
   913 ;;      Totals:         0       5     188       0       0       0       0       0       0
   914 ;;Total ram usage:      193 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    4
   917 ;; This function calls:
   918 ;;		_millis
   919 ;;		_setMotores
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text1
   926  000012                     __ptext1:
   927                           	opt stack 0
   928  000012                     _loop:
   929                           	opt stack 26
   930                           
   931                           ;main.c: 72: static unsigned long m = 0;
   932                           ;main.c: 73: static int estado = MENU;
   933                           ;main.c: 74: static int direccion = DER;
   934                           ;main.c: 75: static bit ciego; ciego = 1;
   935                           
   936                           ;incstack = 0
   937  000012  804A               	bsf	loop@ciego/(0+8),loop@ciego& (0+7),c
   938                           
   939                           ;main.c: 76: switch(estado){
   940  000014  D39F               	goto	l68
   941  000016                     
   942                           ; BSR set to: 1
   943  000016  0E00               	movlw	0
   944  000018  0101               	movlb	1	; () banked
   945  00001A  6F05               	movwf	(_loop$834+1)& (0+255),b
   946  00001C  0E00               	movlw	0
   947  00001E  6F04               	movwf	_loop$834& (0+255),b
   948                           
   949                           ; BSR set to: 1
   950                           
   951                           ; BSR set to: 1
   952  000020  C104  F102         	movff	_loop$834,_loop$833
   953  000024  C105  F103         	movff	_loop$834+1,_loop$833+1
   954                           
   955                           ; BSR set to: 1
   956                           
   957                           ; BSR set to: 1
   958                           
   959                           ; BSR set to: 1
   960                           
   961                           ; BSR set to: 1
   962  000028  C102  F100         	movff	_loop$833,_loop$832
   963  00002C  C103  F101         	movff	_loop$833+1,_loop$832+1
   964                           
   965                           ; BSR set to: 1
   966                           
   967                           ; BSR set to: 1
   968                           
   969                           ; BSR set to: 1
   970                           
   971                           ; BSR set to: 1
   972  000030  5100               	movf	_loop$832& (0+255),w,b
   973  000032  1101               	iorwf	(_loop$832+1)& (0+255),w,b
   974  000034  B4D8               	btfsc	status,2,c
   975  000036  D005               	goto	l86
   976                           
   977                           ; BSR set to: 1
   978                           ;main.c: 79: estado = LIMPIAR;
   979  000038  0E00               	movlw	0
   980  00003A  6FC1               	movwf	(loop@estado+1)& (0+255),b
   981  00003C  0E01               	movlw	1
   982  00003E  6FC0               	movwf	loop@estado& (0+255),b
   983                           
   984                           ;main.c: 80: break;
   985  000040  0012               	return	
   986  000042                     l86:
   987                           
   988                           ; BSR set to: 1
   989                           
   990                           ; BSR set to: 1
   991  000042  B280               	btfsc	3968,1,c	;volatile
   992  000044  D002               	goto	u4910
   993  000046  0E01               	movlw	1
   994  000048  D001               	goto	u4920
   995  00004A                     u4910:
   996  00004A  0E00               	movlw	0
   997  00004C                     u4920:
   998  00004C  6F06               	movwf	_loop$835& (0+255),b
   999  00004E  6B07               	clrf	(_loop$835+1)& (0+255),b
  1000                           
  1001                           ; BSR set to: 1
  1002                           
  1003                           ; BSR set to: 1
  1004  000050  5106               	movf	_loop$835& (0+255),w,b
  1005  000052  1107               	iorwf	(_loop$835+1)& (0+255),w,b
  1006  000054  B4D8               	btfsc	status,2,c
  1007  000056  D023               	goto	l118
  1008                           
  1009                           ; BSR set to: 1
  1010                           ;main.c: 84: LATAbits.LA2 = 1;
  1011  000058  8489               	bsf	3977,2,c	;volatile
  1012                           
  1013                           ;main.c: 85: LATAbits.LA3 = 1;
  1014  00005A  8689               	bsf	3977,3,c	;volatile
  1015                           
  1016                           ;main.c: 86: LATAbits.LA4 = 1;
  1017  00005C  8889               	bsf	3977,4,c	;volatile
  1018                           
  1019                           ;main.c: 87: while((1 == 1 ? !PORTAbits.RA1 : (1 == 2 ? !PORTAbits.RA5 : (1 == 0 ? 0 : 0
      +                          )))){
  1020  00005E  D013               	goto	l100
  1021  000060                     
  1022                           ; BSR set to: 1
  1023                           ;main.c: 88: m = millis();
  1024                           
  1025                           ; BSR set to: 1
  1026  000060  EC22  F007         	call	_millis	;wreg free
  1027  000064  C013  F1BC         	movff	?_millis,loop@m
  1028  000068  C014  F1BD         	movff	?_millis+1,loop@m+1
  1029  00006C  C015  F1BE         	movff	?_millis+2,loop@m+2
  1030  000070  C016  F1BF         	movff	?_millis+3,loop@m+3
  1031                           
  1032                           ;main.c: 89: direccion = DER;
  1033  000074  0E00               	movlw	0
  1034  000076  0101               	movlb	1	; () banked
  1035  000078  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  1036  00007A  0E05               	movlw	5
  1037  00007C  6FC2               	movwf	loop@direccion& (0+255),b
  1038                           
  1039                           ; BSR set to: 1
  1040                           ;main.c: 90: estado = ESPERA;
  1041  00007E  0E00               	movlw	0
  1042  000080  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1043  000082  0E02               	movlw	2
  1044  000084  6FC0               	movwf	loop@estado& (0+255),b
  1045  000086                     l100:
  1046                           
  1047                           ; BSR set to: 1
  1048                           
  1049                           ; BSR set to: 1
  1050  000086  B280               	btfsc	3968,1,c	;volatile
  1051  000088  D002               	goto	u4960
  1052  00008A  0E01               	movlw	1
  1053  00008C  D001               	goto	u4970
  1054  00008E                     u4960:
  1055  00008E  0E00               	movlw	0
  1056  000090                     u4970:
  1057  000090  6F0C               	movwf	_loop$838& (0+255),b
  1058  000092  6B0D               	clrf	(_loop$838+1)& (0+255),b
  1059                           
  1060                           ; BSR set to: 1
  1061                           
  1062                           ; BSR set to: 1
  1063  000094  510C               	movf	_loop$838& (0+255),w,b
  1064  000096  110D               	iorwf	(_loop$838+1)& (0+255),w,b
  1065  000098  B4D8               	btfsc	status,2,c
  1066  00009A  0012               	return	
  1067  00009C  D7E1               	goto	l98
  1068  00009E                     l118:
  1069                           
  1070                           ; BSR set to: 1
  1071                           
  1072                           ; BSR set to: 1
  1073  00009E  BA80               	btfsc	3968,5,c	;volatile
  1074  0000A0  D002               	goto	u4990
  1075  0000A2  0E01               	movlw	1
  1076  0000A4  D001               	goto	u5000
  1077  0000A6                     u4990:
  1078  0000A6  0E00               	movlw	0
  1079  0000A8                     u5000:
  1080  0000A8  6F14               	movwf	_loop$842& (0+255),b
  1081  0000AA  6B15               	clrf	(_loop$842+1)& (0+255),b
  1082                           
  1083                           ; BSR set to: 1
  1084                           
  1085                           ; BSR set to: 1
  1086  0000AC  C114  F112         	movff	_loop$842,_loop$841
  1087  0000B0  C115  F113         	movff	_loop$842+1,_loop$841+1
  1088                           
  1089                           ; BSR set to: 1
  1090                           
  1091                           ; BSR set to: 1
  1092                           
  1093                           ; BSR set to: 1
  1094                           
  1095                           ; BSR set to: 1
  1096  0000B4  5112               	movf	_loop$841& (0+255),w,b
  1097  0000B6  1113               	iorwf	(_loop$841+1)& (0+255),w,b
  1098  0000B8  B4D8               	btfsc	status,2,c
  1099  0000BA  D027               	goto	l112
  1100                           
  1101                           ; BSR set to: 1
  1102                           ;main.c: 96: LATAbits.LA2 = 1;
  1103  0000BC  8489               	bsf	3977,2,c	;volatile
  1104                           
  1105                           ;main.c: 97: LATAbits.LA3 = 1;
  1106  0000BE  8689               	bsf	3977,3,c	;volatile
  1107                           
  1108                           ;main.c: 98: LATAbits.LA4 = 1;
  1109  0000C0  8889               	bsf	3977,4,c	;volatile
  1110                           
  1111                           ;main.c: 99: while((2 == 1 ? !PORTAbits.RA1 : (2 == 2 ? !PORTAbits.RA5 : (2 == 0 ? 0 : 0
      +                          )))){
  1112  0000C2  D013               	goto	l132
  1113  0000C4                     
  1114                           ; BSR set to: 1
  1115                           ;main.c: 100: m = millis();
  1116                           
  1117                           ; BSR set to: 1
  1118  0000C4  EC22  F007         	call	_millis	;wreg free
  1119  0000C8  C013  F1BC         	movff	?_millis,loop@m
  1120  0000CC  C014  F1BD         	movff	?_millis+1,loop@m+1
  1121  0000D0  C015  F1BE         	movff	?_millis+2,loop@m+2
  1122  0000D4  C016  F1BF         	movff	?_millis+3,loop@m+3
  1123                           
  1124                           ;main.c: 101: direccion = IZQ;
  1125  0000D8  0E00               	movlw	0
  1126  0000DA  0101               	movlb	1	; () banked
  1127  0000DC  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  1128  0000DE  0E08               	movlw	8
  1129  0000E0  6FC2               	movwf	loop@direccion& (0+255),b
  1130                           
  1131                           ; BSR set to: 1
  1132                           ;main.c: 102: estado = ESPERA;
  1133  0000E2  0E00               	movlw	0
  1134  0000E4  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1135  0000E6  0E02               	movlw	2
  1136  0000E8  6FC0               	movwf	loop@estado& (0+255),b
  1137  0000EA                     l132:
  1138                           
  1139                           ; BSR set to: 1
  1140                           
  1141                           ; BSR set to: 1
  1142  0000EA  BA80               	btfsc	3968,5,c	;volatile
  1143  0000EC  D002               	goto	u5040
  1144  0000EE  0E01               	movlw	1
  1145  0000F0  D001               	goto	u5050
  1146  0000F2                     u5040:
  1147  0000F2  0E00               	movlw	0
  1148  0000F4                     u5050:
  1149  0000F4  6F1A               	movwf	_loop$845& (0+255),b
  1150  0000F6  6B1B               	clrf	(_loop$845+1)& (0+255),b
  1151                           
  1152                           ; BSR set to: 1
  1153                           
  1154                           ; BSR set to: 1
  1155  0000F8  C11A  F118         	movff	_loop$845,_loop$844
  1156  0000FC  C11B  F119         	movff	_loop$845+1,_loop$844+1
  1157                           
  1158                           ; BSR set to: 1
  1159                           
  1160                           ; BSR set to: 1
  1161                           
  1162                           ; BSR set to: 1
  1163                           
  1164                           ; BSR set to: 1
  1165  000100  5118               	movf	_loop$844& (0+255),w,b
  1166  000102  1119               	iorwf	(_loop$844+1)& (0+255),w,b
  1167  000104  B4D8               	btfsc	status,2,c
  1168  000106  0012               	return	
  1169  000108  D7DD               	goto	l126
  1170  00010A                     l112:
  1171                           
  1172                           ; BSR set to: 1
  1173                           ;main.c: 108: LATAbits.LA2 = (2 == 1 ? !PORTBbits.RB5 : (2 == 2 ? !PORTBbits.RB4 : (2 ==
      +                           3 ? !PORTBbits.RB1 : (2 == 4 ? !PORTCbits.RC5 : (2 == 5 ? !PORTCbits.RC4 : 0)))));
  1174                           
  1175                           ; BSR set to: 1
  1176  00010A  0E00               	movlw	0
  1177  00010C  6E3E               	movwf	setMotores@dutyI+1,c
  1178  00010E  0E00               	movlw	0
  1179  000110  6E3D               	movwf	setMotores@dutyI,c
  1180  000112  0E00               	movlw	0
  1181  000114  6E40               	movwf	setMotores@dutyD+1,c
  1182  000116  0E00               	movlw	0
  1183  000118  6E3F               	movwf	setMotores@dutyD,c
  1184  00011A  ECDF  F003         	call	_setMotores	;wreg free
  1185                           
  1186                           ; BSR set to: 1
  1187                           
  1188                           ; BSR set to: 1
  1189                           
  1190                           ; BSR set to: 1
  1191                           
  1192                           ; BSR set to: 1
  1193                           
  1194                           ; BSR set to: 1
  1195                           
  1196                           ; BSR set to: 1
  1197                           
  1198                           ; BSR set to: 1
  1199                           
  1200                           ; BSR set to: 1
  1201                           
  1202                           ; BSR set to: 1
  1203                           
  1204                           ; BSR set to: 1
  1205                           
  1206                           ; BSR set to: 1
  1207                           
  1208                           ; BSR set to: 1
  1209                           
  1210                           ; BSR set to: 1
  1211  00011E  B881               	btfsc	3969,4,c	;volatile
  1212  000120  D002               	goto	u5150
  1213  000122  0E01               	movlw	1
  1214  000124  D001               	goto	u5160
  1215  000126                     u5150:
  1216  000126  0E00               	movlw	0
  1217  000128                     u5160:
  1218  000128  0101               	movlb	1	; () banked
  1219  00012A  6F20               	movwf	_loop$864& (0+255),b
  1220  00012C  6B21               	clrf	(_loop$864+1)& (0+255),b
  1221                           
  1222                           ; BSR set to: 1
  1223                           
  1224                           ; BSR set to: 1
  1225  00012E  C120  F11E         	movff	_loop$864,_loop$863
  1226  000132  C121  F11F         	movff	_loop$864+1,_loop$863+1
  1227                           
  1228                           ; BSR set to: 1
  1229                           ;main.c: 109: LATAbits.LA3 = (3 == 1 ? !PORTBbits.RB5 : (3 == 2 ? !PORTBbits.RB4 : (3 ==
      +                           3 ? !PORTBbits.RB1 : (3 == 4 ? !PORTCbits.RC5 : (3 == 5 ? !PORTCbits.RC4 : 0)))));
  1230                           
  1231                           ; BSR set to: 1
  1232                           
  1233                           ; BSR set to: 1
  1234                           
  1235                           ; BSR set to: 1
  1236  000136  B11E               	btfsc	_loop$863& (0+255),0,b
  1237  000138  D002               	bra	u5195
  1238  00013A  9489               	bcf	3977,2,c	;volatile
  1239  00013C  D001               	bra	u5196
  1240  00013E                     u5195:
  1241  00013E  8489               	bsf	3977,2,c	;volatile
  1242  000140                     u5196:
  1243                           
  1244                           ; BSR set to: 1
  1245                           
  1246                           ; BSR set to: 1
  1247                           
  1248                           ; BSR set to: 1
  1249                           
  1250                           ; BSR set to: 1
  1251                           
  1252                           ; BSR set to: 1
  1253                           
  1254                           ; BSR set to: 1
  1255                           
  1256                           ; BSR set to: 1
  1257                           
  1258                           ; BSR set to: 1
  1259                           
  1260                           ; BSR set to: 1
  1261  000140  B281               	btfsc	3969,1,c	;volatile
  1262  000142  D002               	goto	u5240
  1263  000144  0E01               	movlw	1
  1264  000146  D001               	goto	u5250
  1265  000148                     u5240:
  1266  000148  0E00               	movlw	0
  1267  00014A                     u5250:
  1268  00014A  0101               	movlb	1	; () banked
  1269  00014C  6F2C               	movwf	_loop$870& (0+255),b
  1270  00014E  6B2D               	clrf	(_loop$870+1)& (0+255),b
  1271                           
  1272                           ; BSR set to: 1
  1273                           
  1274                           ; BSR set to: 1
  1275  000150  C12C  F12A         	movff	_loop$870,_loop$869
  1276  000154  C12D  F12B         	movff	_loop$870+1,_loop$869+1
  1277                           
  1278                           ; BSR set to: 1
  1279                           
  1280                           ; BSR set to: 1
  1281                           
  1282                           ; BSR set to: 1
  1283                           
  1284                           ; BSR set to: 1
  1285  000158  C12A  F128         	movff	_loop$869,_loop$868
  1286  00015C  C12B  F129         	movff	_loop$869+1,_loop$868+1
  1287                           
  1288                           ; BSR set to: 1
  1289                           ;main.c: 110: LATAbits.LA4 = (4 == 1 ? !PORTBbits.RB5 : (4 == 2 ? !PORTBbits.RB4 : (4 ==
      +                           3 ? !PORTBbits.RB1 : (4 == 4 ? !PORTCbits.RC5 : (4 == 5 ? !PORTCbits.RC4 : 0)))));
  1290                           
  1291                           ; BSR set to: 1
  1292                           
  1293                           ; BSR set to: 1
  1294                           
  1295                           ; BSR set to: 1
  1296  000160  B128               	btfsc	_loop$868& (0+255),0,b
  1297  000162  D002               	bra	u5305
  1298  000164  9689               	bcf	3977,3,c	;volatile
  1299  000166  D001               	bra	u5306
  1300  000168                     u5305:
  1301  000168  8689               	bsf	3977,3,c	;volatile
  1302  00016A                     u5306:
  1303                           
  1304                           ; BSR set to: 1
  1305                           
  1306                           ; BSR set to: 1
  1307                           
  1308                           ; BSR set to: 1
  1309                           
  1310                           ; BSR set to: 1
  1311                           
  1312                           ; BSR set to: 1
  1313  00016A  BA82               	btfsc	3970,5,c	;volatile
  1314  00016C  D002               	goto	u5330
  1315  00016E  0E01               	movlw	1
  1316  000170  D001               	goto	u5340
  1317  000172                     u5330:
  1318  000172  0E00               	movlw	0
  1319  000174                     u5340:
  1320  000174  0101               	movlb	1	; () banked
  1321  000176  6F38               	movwf	_loop$876& (0+255),b
  1322  000178  6B39               	clrf	(_loop$876+1)& (0+255),b
  1323                           
  1324                           ; BSR set to: 1
  1325                           
  1326                           ; BSR set to: 1
  1327  00017A  C138  F136         	movff	_loop$876,_loop$875
  1328  00017E  C139  F137         	movff	_loop$876+1,_loop$875+1
  1329                           
  1330                           ; BSR set to: 1
  1331                           
  1332                           ; BSR set to: 1
  1333                           
  1334                           ; BSR set to: 1
  1335                           
  1336                           ; BSR set to: 1
  1337  000182  C136  F134         	movff	_loop$875,_loop$874
  1338  000186  C137  F135         	movff	_loop$875+1,_loop$874+1
  1339                           
  1340                           ; BSR set to: 1
  1341                           
  1342                           ; BSR set to: 1
  1343                           
  1344                           ; BSR set to: 1
  1345                           
  1346                           ; BSR set to: 1
  1347  00018A  C134  F132         	movff	_loop$874,_loop$873
  1348  00018E  C135  F133         	movff	_loop$874+1,_loop$873+1
  1349                           
  1350                           ; BSR set to: 1
  1351                           
  1352                           ; BSR set to: 1
  1353                           
  1354                           ; BSR set to: 1
  1355                           
  1356                           ; BSR set to: 1
  1357  000192  B132               	btfsc	_loop$873& (0+255),0,b
  1358  000194  D002               	bra	u5415
  1359  000196  9889               	bcf	3977,4,c	;volatile
  1360  000198  D001               	bra	u5416
  1361  00019A                     u5415:
  1362  00019A  8889               	bsf	3977,4,c	;volatile
  1363  00019C                     u5416:
  1364                           
  1365                           ;main.c: 111: break;
  1366  00019C  0012               	return	
  1367  00019E                     
  1368                           ; BSR set to: 1
  1369  00019E  0E00               	movlw	0
  1370  0001A0  0101               	movlb	1	; () banked
  1371  0001A2  6F41               	movwf	(_loop$880+1)& (0+255),b
  1372  0001A4  0E00               	movlw	0
  1373  0001A6  6F40               	movwf	_loop$880& (0+255),b
  1374                           
  1375                           ; BSR set to: 1
  1376                           
  1377                           ; BSR set to: 1
  1378  0001A8  C140  F13E         	movff	_loop$880,_loop$879
  1379  0001AC  C141  F13F         	movff	_loop$880+1,_loop$879+1
  1380                           
  1381                           ; BSR set to: 1
  1382                           
  1383                           ; BSR set to: 1
  1384                           
  1385                           ; BSR set to: 1
  1386                           
  1387                           ; BSR set to: 1
  1388  0001B0  C13E  F13C         	movff	_loop$879,_loop$878
  1389  0001B4  C13F  F13D         	movff	_loop$879+1,_loop$878+1
  1390                           
  1391                           ; BSR set to: 1
  1392                           
  1393                           ; BSR set to: 1
  1394                           
  1395                           ; BSR set to: 1
  1396                           
  1397                           ; BSR set to: 1
  1398  0001B8  513C               	movf	_loop$878& (0+255),w,b
  1399  0001BA  113D               	iorwf	(_loop$878+1)& (0+255),w,b
  1400  0001BC  A4D8               	btfss	status,2,c
  1401  0001BE  D005               	goto	l201
  1402                           
  1403                           ; BSR set to: 1
  1404                           ;main.c: 115: estado = MENU;
  1405  0001C0  0E00               	movlw	0
  1406  0001C2  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1407  0001C4  0E00               	movlw	0
  1408  0001C6  6FC0               	movwf	loop@estado& (0+255),b
  1409                           
  1410                           ;main.c: 116: break;
  1411  0001C8  0012               	return	
  1412  0001CA                     l201:
  1413                           
  1414                           ; BSR set to: 1
  1415                           ;main.c: 117: }
  1416                           ;main.c: 119: LATAbits.LA2 = 1;
  1417  0001CA  8489               	bsf	3977,2,c	;volatile
  1418                           
  1419                           ;main.c: 120: LATAbits.LA3 = 0;
  1420  0001CC  9689               	bcf	3977,3,c	;volatile
  1421                           
  1422                           ;main.c: 121: LATAbits.LA4 = 1;
  1423  0001CE  8889               	bsf	3977,4,c	;volatile
  1424                           
  1425                           ; BSR set to: 1
  1426                           ;main.c: 122: setMotores(1000, 1000);
  1427  0001D0  0E03               	movlw	3
  1428  0001D2  6E3E               	movwf	setMotores@dutyI+1,c
  1429  0001D4  0EE8               	movlw	232
  1430  0001D6  6E3D               	movwf	setMotores@dutyI,c
  1431  0001D8  0E03               	movlw	3
  1432  0001DA  6E40               	movwf	setMotores@dutyD+1,c
  1433  0001DC  0EE8               	movlw	232
  1434  0001DE  6E3F               	movwf	setMotores@dutyD,c
  1435  0001E0  ECDF  F003         	call	_setMotores	;wreg free
  1436                           
  1437                           ;main.c: 123: break;
  1438  0001E4  0012               	return	
  1439  0001E6                     
  1440                           ;main.c: 126: if(millis() > (m + 4970)){
  1441  0001E6  EC22  F007         	call	_millis	;wreg free
  1442  0001EA  0E6A               	movlw	106
  1443  0001EC  0101               	movlb	1	; () banked
  1444  0001EE  25BC               	addwf	loop@m& (0+255),w,b
  1445  0001F0  0100               	movlb	0	; () banked
  1446  0001F2  6F60               	movwf	??_loop& (0+255),b
  1447  0001F4  0E13               	movlw	19
  1448  0001F6  0101               	movlb	1	; () banked
  1449  0001F8  21BD               	addwfc	(loop@m+1)& (0+255),w,b
  1450  0001FA  0100               	movlb	0	; () banked
  1451  0001FC  6F61               	movwf	(??_loop+1)& (0+255),b
  1452  0001FE  0E00               	movlw	0
  1453  000200  0101               	movlb	1	; () banked
  1454  000202  21BE               	addwfc	(loop@m+2)& (0+255),w,b
  1455  000204  0100               	movlb	0	; () banked
  1456  000206  6F62               	movwf	(??_loop+2)& (0+255),b
  1457  000208  0E00               	movlw	0
  1458  00020A  0101               	movlb	1	; () banked
  1459  00020C  21BF               	addwfc	(loop@m+3)& (0+255),w,b
  1460  00020E  0100               	movlb	0	; () banked
  1461  000210  6F63               	movwf	(??_loop+3)& (0+255),b
  1462  000212  5013               	movf	?_millis,w,c
  1463  000214  5D60               	subwf	??_loop& (0+255),w,b
  1464  000216  5014               	movf	?_millis+1,w,c
  1465  000218  5961               	subwfb	(??_loop+1)& (0+255),w,b
  1466  00021A  5015               	movf	?_millis+2,w,c
  1467  00021C  5962               	subwfb	(??_loop+2)& (0+255),w,b
  1468  00021E  5016               	movf	?_millis+3,w,c
  1469  000220  5963               	subwfb	(??_loop+3)& (0+255),w,b
  1470  000222  B0D8               	btfsc	status,0,c
  1471  000224  D009               	goto	l215
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;main.c: 127: estado = ANALISIS;
  1475  000226  0E00               	movlw	0
  1476  000228  0101               	movlb	1	; () banked
  1477  00022A  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1478  00022C  0E03               	movlw	3
  1479  00022E  6FC0               	movwf	loop@estado& (0+255),b
  1480                           
  1481                           ; BSR set to: 1
  1482                           ;main.c: 128: LATAbits.LA2 = 0;
  1483  000230  9489               	bcf	3977,2,c	;volatile
  1484                           
  1485                           ; BSR set to: 1
  1486                           ;main.c: 129: LATAbits.LA3 = 0;
  1487  000232  9689               	bcf	3977,3,c	;volatile
  1488                           
  1489                           ; BSR set to: 1
  1490                           ;main.c: 130: LATAbits.LA4 = 1;
  1491  000234  8889               	bsf	3977,4,c	;volatile
  1492                           
  1493                           ;main.c: 131: break;
  1494  000236  0012               	return	
  1495  000238                     l215:
  1496                           
  1497                           ;main.c: 132: }
  1498                           ;main.c: 134: setMotores(0, 0);
  1499                           
  1500                           ; BSR set to: 1
  1501  000238  0E00               	movlw	0
  1502  00023A  6E3E               	movwf	setMotores@dutyI+1,c
  1503  00023C  0E00               	movlw	0
  1504  00023E  6E3D               	movwf	setMotores@dutyI,c
  1505  000240  0E00               	movlw	0
  1506  000242  6E40               	movwf	setMotores@dutyD+1,c
  1507  000244  0E00               	movlw	0
  1508  000246  6E3F               	movwf	setMotores@dutyD,c
  1509  000248  ECDF  F003         	call	_setMotores	;wreg free
  1510                           
  1511                           ;main.c: 135: LATAbits.LA2 = 1;
  1512  00024C  8489               	bsf	3977,2,c	;volatile
  1513                           
  1514                           ;main.c: 136: LATAbits.LA3 = millis() > (m + (4970 / 2));
  1515  00024E  EC22  F007         	call	_millis	;wreg free
  1516  000252  0EB5               	movlw	181
  1517  000254  0101               	movlb	1	; () banked
  1518  000256  25BC               	addwf	loop@m& (0+255),w,b
  1519  000258  0100               	movlb	0	; () banked
  1520  00025A  6F60               	movwf	??_loop& (0+255),b
  1521  00025C  0E09               	movlw	9
  1522  00025E  0101               	movlb	1	; () banked
  1523  000260  21BD               	addwfc	(loop@m+1)& (0+255),w,b
  1524  000262  0100               	movlb	0	; () banked
  1525  000264  6F61               	movwf	(??_loop+1)& (0+255),b
  1526  000266  0E00               	movlw	0
  1527  000268  0101               	movlb	1	; () banked
  1528  00026A  21BE               	addwfc	(loop@m+2)& (0+255),w,b
  1529  00026C  0100               	movlb	0	; () banked
  1530  00026E  6F62               	movwf	(??_loop+2)& (0+255),b
  1531  000270  0E00               	movlw	0
  1532  000272  0101               	movlb	1	; () banked
  1533  000274  21BF               	addwfc	(loop@m+3)& (0+255),w,b
  1534  000276  0100               	movlb	0	; () banked
  1535  000278  6F63               	movwf	(??_loop+3)& (0+255),b
  1536  00027A  5013               	movf	?_millis,w,c
  1537  00027C  5D60               	subwf	??_loop& (0+255),w,b
  1538  00027E  5014               	movf	?_millis+1,w,c
  1539  000280  5961               	subwfb	(??_loop+1)& (0+255),w,b
  1540  000282  5015               	movf	?_millis+2,w,c
  1541  000284  5962               	subwfb	(??_loop+2)& (0+255),w,b
  1542  000286  5016               	movf	?_millis+3,w,c
  1543  000288  5963               	subwfb	(??_loop+3)& (0+255),w,b
  1544  00028A  B0D8               	btfsc	status,0,c
  1545  00028C  D003               	goto	u5480
  1546  00028E  6B64               	clrf	(??_loop+4)& (0+255),b
  1547  000290  2B64               	incf	(??_loop+4)& (0+255),f,b
  1548  000292  D002               	goto	u5498
  1549  000294                     u5480:
  1550  000294  0100               	movlb	0	; () banked
  1551  000296  6B64               	clrf	(??_loop+4)& (0+255),b
  1552  000298                     u5498:
  1553  000298  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1554  00029A  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1555  00029C  4764               	rlncf	(??_loop+4)& (0+255),f,b
  1556  00029E  5089               	movf	3977,w,c	;volatile
  1557  0002A0  1964               	xorwf	(??_loop+4)& (0+255),w,b
  1558  0002A2  0BF7               	andlw	-9
  1559  0002A4  1964               	xorwf	(??_loop+4)& (0+255),w,b
  1560  0002A6  6E89               	movwf	3977,c	;volatile
  1561                           
  1562                           ; BSR set to: 0
  1563                           ;main.c: 137: LATAbits.LA4 = 0;
  1564  0002A8  9889               	bcf	3977,4,c	;volatile
  1565                           
  1566                           ;main.c: 138: break;
  1567  0002AA  0012               	return	
  1568  0002AC                     
  1569                           ; BSR set to: 1
  1570  0002AC  B681               	btfsc	3969,3,c	;volatile
  1571  0002AE  D002               	goto	u5520
  1572  0002B0  0E01               	movlw	1
  1573  0002B2  D001               	goto	u5530
  1574  0002B4                     u5520:
  1575  0002B4  0E00               	movlw	0
  1576  0002B6                     u5530:
  1577  0002B6  0101               	movlb	1	; () banked
  1578  0002B8  6F42               	movwf	_loop$881& (0+255),b
  1579  0002BA  6B43               	clrf	(_loop$881+1)& (0+255),b
  1580                           
  1581                           ; BSR set to: 1
  1582                           
  1583                           ; BSR set to: 1
  1584  0002BC  5142               	movf	_loop$881& (0+255),w,b
  1585  0002BE  1143               	iorwf	(_loop$881+1)& (0+255),w,b
  1586  0002C0  A4D8               	btfss	status,2,c
  1587  0002C2  D00F               	goto	u5590
  1588                           
  1589                           ; BSR set to: 1
  1590                           
  1591                           ; BSR set to: 1
  1592                           
  1593                           ; BSR set to: 1
  1594                           
  1595                           ; BSR set to: 1
  1596  0002C4  BC82               	btfsc	3970,6,c	;volatile
  1597  0002C6  D002               	goto	u5550
  1598  0002C8  0E01               	movlw	1
  1599  0002CA  D001               	goto	u5560
  1600  0002CC                     u5550:
  1601  0002CC  0E00               	movlw	0
  1602  0002CE                     u5560:
  1603  0002CE  6F48               	movwf	_loop$884& (0+255),b
  1604  0002D0  6B49               	clrf	(_loop$884+1)& (0+255),b
  1605                           
  1606                           ; BSR set to: 1
  1607                           
  1608                           ; BSR set to: 1
  1609  0002D2  C148  F146         	movff	_loop$884,_loop$883
  1610  0002D6  C149  F147         	movff	_loop$884+1,_loop$883+1
  1611                           
  1612                           ; BSR set to: 1
  1613                           
  1614                           ; BSR set to: 1
  1615                           
  1616                           ; BSR set to: 1
  1617                           
  1618                           ; BSR set to: 1
  1619  0002DA  5146               	movf	_loop$883& (0+255),w,b
  1620  0002DC  1147               	iorwf	(_loop$883+1)& (0+255),w,b
  1621  0002DE  B4D8               	btfsc	status,2,c
  1622  0002E0  D00F               	goto	l217
  1623  0002E2                     u5590:
  1624                           
  1625                           ; BSR set to: 1
  1626                           ;main.c: 142: estado = ATRAS;
  1627                           
  1628                           ; BSR set to: 1
  1629  0002E2  0E00               	movlw	0
  1630  0002E4  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1631  0002E6  0E0B               	movlw	11
  1632  0002E8  6FC0               	movwf	loop@estado& (0+255),b
  1633                           
  1634                           ; BSR set to: 1
  1635                           ;main.c: 143: m = millis();
  1636  0002EA  EC22  F007         	call	_millis	;wreg free
  1637  0002EE  C013  F1BC         	movff	?_millis,loop@m
  1638  0002F2  C014  F1BD         	movff	?_millis+1,loop@m+1
  1639  0002F6  C015  F1BE         	movff	?_millis+2,loop@m+2
  1640  0002FA  C016  F1BF         	movff	?_millis+3,loop@m+3
  1641                           
  1642                           ;main.c: 144: break;
  1643  0002FE  0012               	return	
  1644  000300                     l217:
  1645                           
  1646                           ; BSR set to: 1
  1647                           ;main.c: 145: }
  1648                           ;main.c: 147: if(ciego){
  1649  000300  A04A               	btfss	loop@ciego/(0+8),loop@ciego& (0+7),c
  1650  000302  D005               	goto	l247
  1651                           
  1652                           ; BSR set to: 1
  1653                           ;main.c: 148: estado = ATAQUE;
  1654  000304  0E00               	movlw	0
  1655  000306  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1656  000308  0E04               	movlw	4
  1657  00030A  6FC0               	movwf	loop@estado& (0+255),b
  1658                           
  1659                           ;main.c: 149: break;
  1660  00030C  0012               	return	
  1661  00030E                     l247:
  1662                           
  1663                           ; BSR set to: 1
  1664                           
  1665                           ; BSR set to: 1
  1666  00030E  B281               	btfsc	3969,1,c	;volatile
  1667  000310  D002               	goto	u5650
  1668  000312  0E01               	movlw	1
  1669  000314  D001               	goto	u5660
  1670  000316                     u5650:
  1671  000316  0E00               	movlw	0
  1672  000318                     u5660:
  1673  000318  6F4E               	movwf	_loop$887& (0+255),b
  1674  00031A  6B4F               	clrf	(_loop$887+1)& (0+255),b
  1675                           
  1676                           ; BSR set to: 1
  1677                           
  1678                           ; BSR set to: 1
  1679  00031C  C14E  F14C         	movff	_loop$887,_loop$886
  1680  000320  C14F  F14D         	movff	_loop$887+1,_loop$886+1
  1681                           
  1682                           ; BSR set to: 1
  1683                           
  1684                           ; BSR set to: 1
  1685                           
  1686                           ; BSR set to: 1
  1687                           
  1688                           ; BSR set to: 1
  1689  000324  C14C  F14A         	movff	_loop$886,_loop$885
  1690  000328  C14D  F14B         	movff	_loop$886+1,_loop$885+1
  1691                           
  1692                           ; BSR set to: 1
  1693                           ;main.c: 153: if((2 == 1 ? !PORTBbits.RB5 : (2 == 2 ? !PORTBbits.RB4 : (2 == 3 ? !PORTBb
      +                          its.RB1 : (2 == 4 ? !PORTCbits.RC5 : (2 == 5 ? !PORTCbits.RC4 : 0))))) == (4 == 1 ? !POR
      +                          TBbits.RB5 : (4 == 2 ? !PORTBbits.RB4 : (4 == 3 ? !PORTBbits.RB1 : (4 == 4 ? !PORTCbits.
  1694                           
  1695                           ; BSR set to: 1
  1696                           
  1697                           ; BSR set to: 1
  1698                           
  1699                           ; BSR set to: 1
  1700  00032C  514A               	movf	_loop$885& (0+255),w,b
  1701  00032E  114B               	iorwf	(_loop$885+1)& (0+255),w,b
  1702  000330  B4D8               	btfsc	status,2,c
  1703  000332  D05A               	goto	l347
  1704                           
  1705                           ; BSR set to: 1
  1706                           
  1707                           ; BSR set to: 1
  1708                           
  1709                           ; BSR set to: 1
  1710                           
  1711                           ; BSR set to: 1
  1712                           
  1713                           ; BSR set to: 1
  1714                           
  1715                           ; BSR set to: 1
  1716                           
  1717                           ; BSR set to: 1
  1718                           
  1719                           ; BSR set to: 1
  1720  000334  BA82               	btfsc	3970,5,c	;volatile
  1721  000336  D002               	goto	u5740
  1722  000338  0E01               	movlw	1
  1723  00033A  D001               	goto	u5750
  1724  00033C                     u5740:
  1725  00033C  0E00               	movlw	0
  1726  00033E                     u5750:
  1727  00033E  6F5A               	movwf	_loop$893& (0+255),b
  1728  000340  6B5B               	clrf	(_loop$893+1)& (0+255),b
  1729                           
  1730                           ; BSR set to: 1
  1731                           
  1732                           ; BSR set to: 1
  1733  000342  C15A  F158         	movff	_loop$893,_loop$892
  1734  000346  C15B  F159         	movff	_loop$893+1,_loop$892+1
  1735                           
  1736                           ; BSR set to: 1
  1737                           
  1738                           ; BSR set to: 1
  1739                           
  1740                           ; BSR set to: 1
  1741                           
  1742                           ; BSR set to: 1
  1743  00034A  C158  F156         	movff	_loop$892,_loop$891
  1744  00034E  C159  F157         	movff	_loop$892+1,_loop$891+1
  1745                           
  1746                           ; BSR set to: 1
  1747                           
  1748                           ; BSR set to: 1
  1749                           
  1750                           ; BSR set to: 1
  1751                           
  1752                           ; BSR set to: 1
  1753  000352  C156  F154         	movff	_loop$891,_loop$890
  1754  000356  C157  F155         	movff	_loop$891+1,_loop$890+1
  1755                           
  1756                           ; BSR set to: 1
  1757                           
  1758                           ; BSR set to: 1
  1759                           
  1760                           ; BSR set to: 1
  1761                           
  1762                           ; BSR set to: 1
  1763                           
  1764                           ; BSR set to: 1
  1765                           
  1766                           ; BSR set to: 1
  1767                           
  1768                           ; BSR set to: 1
  1769                           
  1770                           ; BSR set to: 1
  1771                           
  1772                           ; BSR set to: 1
  1773                           
  1774                           ; BSR set to: 1
  1775                           
  1776                           ; BSR set to: 1
  1777                           
  1778                           ; BSR set to: 1
  1779                           
  1780                           ; BSR set to: 1
  1781                           
  1782                           ; BSR set to: 1
  1783                           
  1784                           ; BSR set to: 1
  1785                           
  1786                           ; BSR set to: 1
  1787                           
  1788                           ; BSR set to: 1
  1789                           
  1790                           ; BSR set to: 1
  1791  00035A  B881               	btfsc	3969,4,c	;volatile
  1792  00035C  D002               	goto	u5880
  1793  00035E  0E01               	movlw	1
  1794  000360  D001               	goto	u5890
  1795  000362                     u5880:
  1796  000362  0E00               	movlw	0
  1797  000364                     u5890:
  1798  000364  6F60               	movwf	_loop$896& (0+255),b
  1799  000366  6B61               	clrf	(_loop$896+1)& (0+255),b
  1800                           
  1801                           ; BSR set to: 1
  1802                           
  1803                           ; BSR set to: 1
  1804  000368  C160  F15E         	movff	_loop$896,_loop$895
  1805  00036C  C161  F15F         	movff	_loop$896+1,_loop$895+1
  1806                           
  1807                           ; BSR set to: 1
  1808                           
  1809                           ; BSR set to: 1
  1810                           
  1811                           ; BSR set to: 1
  1812                           
  1813                           ; BSR set to: 1
  1814  000370  5154               	movf	_loop$890& (0+255),w,b
  1815  000372  195E               	xorwf	_loop$895& (0+255),w,b
  1816  000374  E109               	bnz	l3168
  1817  000376  5155               	movf	(_loop$890+1)& (0+255),w,b
  1818  000378  195F               	xorwf	(_loop$895+1)& (0+255),w,b
  1819  00037A  A4D8               	btfss	status,2,c
  1820  00037C  D005               	goto	l305
  1821                           
  1822                           ; BSR set to: 1
  1823                           ;main.c: 154: estado = ATAQUE;
  1824  00037E  0E00               	movlw	0
  1825  000380  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1826  000382  0E04               	movlw	4
  1827  000384  6FC0               	movwf	loop@estado& (0+255),b
  1828                           
  1829                           ;main.c: 155: break;
  1830  000386  0012               	return	
  1831  000388                     l305:
  1832  000388                     l3168:
  1833                           
  1834                           ; BSR set to: 1
  1835  000388  B881               	btfsc	3969,4,c	;volatile
  1836  00038A  D002               	goto	u5990
  1837  00038C  0E01               	movlw	1
  1838  00038E  D001               	goto	u6000
  1839  000390                     u5990:
  1840  000390  0E00               	movlw	0
  1841  000392                     u6000:
  1842  000392  6F6A               	movwf	_loop$901& (0+255),b
  1843  000394  6B6B               	clrf	(_loop$901+1)& (0+255),b
  1844                           
  1845                           ; BSR set to: 1
  1846                           
  1847                           ; BSR set to: 1
  1848  000396  C16A  F168         	movff	_loop$901,_loop$900
  1849  00039A  C16B  F169         	movff	_loop$901+1,_loop$900+1
  1850                           
  1851                           ; BSR set to: 1
  1852                           
  1853                           ; BSR set to: 1
  1854                           
  1855                           ; BSR set to: 1
  1856                           
  1857                           ; BSR set to: 1
  1858  00039E  5168               	movf	_loop$900& (0+255),w,b
  1859  0003A0  1169               	iorwf	(_loop$900+1)& (0+255),w,b
  1860  0003A2  B4D8               	btfsc	status,2,c
  1861  0003A4  D005               	goto	l334
  1862                           
  1863                           ; BSR set to: 1
  1864                           ;main.c: 159: estado = IZQAV;
  1865  0003A6  0E00               	movlw	0
  1866  0003A8  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1867  0003AA  0E0A               	movlw	10
  1868  0003AC  6FC0               	movwf	loop@estado& (0+255),b
  1869                           
  1870                           ;main.c: 160: break;
  1871  0003AE  0012               	return	
  1872  0003B0                     l334:
  1873                           
  1874                           ; BSR set to: 1
  1875                           
  1876                           ; BSR set to: 1
  1877  0003B0  BA82               	btfsc	3970,5,c	;volatile
  1878  0003B2  D002               	goto	u6060
  1879  0003B4  0E01               	movlw	1
  1880  0003B6  D001               	goto	u6070
  1881  0003B8                     u6060:
  1882  0003B8  0E00               	movlw	0
  1883  0003BA                     u6070:
  1884  0003BA  6F78               	movwf	_loop$908& (0+255),b
  1885  0003BC  6B79               	clrf	(_loop$908+1)& (0+255),b
  1886                           
  1887                           ; BSR set to: 1
  1888                           
  1889                           ; BSR set to: 1
  1890  0003BE  C178  F176         	movff	_loop$908,_loop$907
  1891  0003C2  C179  F177         	movff	_loop$908+1,_loop$907+1
  1892                           
  1893                           ; BSR set to: 1
  1894                           
  1895                           ; BSR set to: 1
  1896                           
  1897                           ; BSR set to: 1
  1898                           
  1899                           ; BSR set to: 1
  1900  0003C6  C176  F174         	movff	_loop$907,_loop$906
  1901  0003CA  C177  F175         	movff	_loop$907+1,_loop$906+1
  1902                           
  1903                           ; BSR set to: 1
  1904                           
  1905                           ; BSR set to: 1
  1906                           
  1907                           ; BSR set to: 1
  1908                           
  1909                           ; BSR set to: 1
  1910  0003CE  C174  F172         	movff	_loop$906,_loop$905
  1911  0003D2  C175  F173         	movff	_loop$906+1,_loop$905+1
  1912                           
  1913                           ; BSR set to: 1
  1914                           
  1915                           ; BSR set to: 1
  1916                           
  1917                           ; BSR set to: 1
  1918                           
  1919                           ; BSR set to: 1
  1920  0003D6  5172               	movf	_loop$905& (0+255),w,b
  1921  0003D8  1173               	iorwf	(_loop$905+1)& (0+255),w,b
  1922  0003DA  B4D8               	btfsc	status,2,c
  1923  0003DC  D005               	goto	l347
  1924                           
  1925                           ; BSR set to: 1
  1926                           ;main.c: 164: estado = DERAV;
  1927  0003DE  0E00               	movlw	0
  1928  0003E0  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1929  0003E2  0E07               	movlw	7
  1930  0003E4  6FC0               	movwf	loop@estado& (0+255),b
  1931                           
  1932                           ;main.c: 165: break;
  1933  0003E6  0012               	return	
  1934  0003E8                     l347:
  1935                           
  1936                           ; BSR set to: 1
  1937                           
  1938                           ; BSR set to: 1
  1939  0003E8  B881               	btfsc	3969,4,c	;volatile
  1940  0003EA  D002               	goto	u6210
  1941  0003EC  0E01               	movlw	1
  1942  0003EE  D001               	goto	u6220
  1943  0003F0                     u6210:
  1944  0003F0  0E00               	movlw	0
  1945  0003F2                     u6220:
  1946  0003F2  6F7E               	movwf	_loop$911& (0+255),b
  1947  0003F4  6B7F               	clrf	(_loop$911+1)& (0+255),b
  1948                           
  1949                           ; BSR set to: 1
  1950                           
  1951                           ; BSR set to: 1
  1952  0003F6  C17E  F17C         	movff	_loop$911,_loop$910
  1953  0003FA  C17F  F17D         	movff	_loop$911+1,_loop$910+1
  1954                           
  1955                           ; BSR set to: 1
  1956                           
  1957                           ; BSR set to: 1
  1958                           
  1959                           ; BSR set to: 1
  1960                           
  1961                           ; BSR set to: 1
  1962  0003FE  517C               	movf	_loop$910& (0+255),w,b
  1963  000400  117D               	iorwf	(_loop$910+1)& (0+255),w,b
  1964  000402  B4D8               	btfsc	status,2,c
  1965  000404  D005               	goto	l376
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;main.c: 170: estado = IZQA;
  1969  000406  0E00               	movlw	0
  1970  000408  6FC1               	movwf	(loop@estado+1)& (0+255),b
  1971  00040A  0E09               	movlw	9
  1972  00040C  6FC0               	movwf	loop@estado& (0+255),b
  1973                           
  1974                           ;main.c: 171: break;
  1975  00040E  0012               	return	
  1976  000410                     l376:
  1977                           
  1978                           ; BSR set to: 1
  1979                           
  1980                           ; BSR set to: 1
  1981  000410  BA82               	btfsc	3970,5,c	;volatile
  1982  000412  D002               	goto	u6280
  1983  000414  0E01               	movlw	1
  1984  000416  D001               	goto	u6290
  1985  000418                     u6280:
  1986  000418  0E00               	movlw	0
  1987  00041A                     u6290:
  1988  00041A  6F8C               	movwf	_loop$918& (0+255),b
  1989  00041C  6B8D               	clrf	(_loop$918+1)& (0+255),b
  1990                           
  1991                           ; BSR set to: 1
  1992                           
  1993                           ; BSR set to: 1
  1994  00041E  C18C  F18A         	movff	_loop$918,_loop$917
  1995  000422  C18D  F18B         	movff	_loop$918+1,_loop$917+1
  1996                           
  1997                           ; BSR set to: 1
  1998                           
  1999                           ; BSR set to: 1
  2000                           
  2001                           ; BSR set to: 1
  2002                           
  2003                           ; BSR set to: 1
  2004  000426  C18A  F188         	movff	_loop$917,_loop$916
  2005  00042A  C18B  F189         	movff	_loop$917+1,_loop$916+1
  2006                           
  2007                           ; BSR set to: 1
  2008                           
  2009                           ; BSR set to: 1
  2010                           
  2011                           ; BSR set to: 1
  2012                           
  2013                           ; BSR set to: 1
  2014  00042E  C188  F186         	movff	_loop$916,_loop$915
  2015  000432  C189  F187         	movff	_loop$916+1,_loop$915+1
  2016                           
  2017                           ; BSR set to: 1
  2018                           
  2019                           ; BSR set to: 1
  2020                           
  2021                           ; BSR set to: 1
  2022                           
  2023                           ; BSR set to: 1
  2024  000436  5186               	movf	_loop$915& (0+255),w,b
  2025  000438  1187               	iorwf	(_loop$915+1)& (0+255),w,b
  2026  00043A  B4D8               	btfsc	status,2,c
  2027  00043C  D005               	goto	l385
  2028                           
  2029                           ; BSR set to: 1
  2030                           ;main.c: 175: estado = DERA;
  2031  00043E  0E00               	movlw	0
  2032  000440  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2033  000442  0E06               	movlw	6
  2034  000444  6FC0               	movwf	loop@estado& (0+255),b
  2035                           
  2036                           ;main.c: 176: break;
  2037  000446  0012               	return	
  2038  000448                     l385:
  2039                           
  2040                           ; BSR set to: 1
  2041                           
  2042                           ; BSR set to: 1
  2043  000448  BA81               	btfsc	3969,5,c	;volatile
  2044  00044A  D002               	goto	u6450
  2045  00044C  0E01               	movlw	1
  2046  00044E  D001               	goto	u6460
  2047  000450                     u6450:
  2048  000450  0E00               	movlw	0
  2049  000452                     u6460:
  2050  000452  6F90               	movwf	_loop$920& (0+255),b
  2051  000454  6B91               	clrf	(_loop$920+1)& (0+255),b
  2052                           
  2053                           ; BSR set to: 1
  2054                           
  2055                           ; BSR set to: 1
  2056  000456  5190               	movf	_loop$920& (0+255),w,b
  2057  000458  1191               	iorwf	(_loop$920+1)& (0+255),w,b
  2058  00045A  B4D8               	btfsc	status,2,c
  2059  00045C  D005               	goto	l422
  2060                           
  2061                           ; BSR set to: 1
  2062                           ;main.c: 180: estado = IZQ;
  2063  00045E  0E00               	movlw	0
  2064  000460  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2065  000462  0E08               	movlw	8
  2066  000464  6FC0               	movwf	loop@estado& (0+255),b
  2067                           
  2068                           ;main.c: 181: break;
  2069  000466  0012               	return	
  2070  000468                     l422:
  2071                           
  2072                           ; BSR set to: 1
  2073                           
  2074                           ; BSR set to: 1
  2075  000468  B882               	btfsc	3970,4,c	;volatile
  2076  00046A  D002               	goto	u6480
  2077  00046C  0E01               	movlw	1
  2078  00046E  D001               	goto	u6490
  2079  000470                     u6480:
  2080  000470  0E00               	movlw	0
  2081  000472                     u6490:
  2082  000472  6FA2               	movwf	_loop$929& (0+255),b
  2083  000474  6BA3               	clrf	(_loop$929+1)& (0+255),b
  2084                           
  2085                           ; BSR set to: 1
  2086                           
  2087                           ; BSR set to: 1
  2088  000476  C1A2  F1A0         	movff	_loop$929,_loop$928
  2089  00047A  C1A3  F1A1         	movff	_loop$929+1,_loop$928+1
  2090                           
  2091                           ; BSR set to: 1
  2092                           
  2093                           ; BSR set to: 1
  2094                           
  2095                           ; BSR set to: 1
  2096                           
  2097                           ; BSR set to: 1
  2098  00047E  C1A0  F19E         	movff	_loop$928,_loop$927
  2099  000482  C1A1  F19F         	movff	_loop$928+1,_loop$927+1
  2100                           
  2101                           ; BSR set to: 1
  2102                           
  2103                           ; BSR set to: 1
  2104                           
  2105                           ; BSR set to: 1
  2106                           
  2107                           ; BSR set to: 1
  2108  000486  C19E  F19C         	movff	_loop$927,_loop$926
  2109  00048A  C19F  F19D         	movff	_loop$927+1,_loop$926+1
  2110                           
  2111                           ; BSR set to: 1
  2112                           
  2113                           ; BSR set to: 1
  2114                           
  2115                           ; BSR set to: 1
  2116                           
  2117                           ; BSR set to: 1
  2118  00048E  C19C  F19A         	movff	_loop$926,_loop$925
  2119  000492  C19D  F19B         	movff	_loop$926+1,_loop$925+1
  2120                           
  2121                           ; BSR set to: 1
  2122                           
  2123                           ; BSR set to: 1
  2124                           
  2125                           ; BSR set to: 1
  2126                           
  2127                           ; BSR set to: 1
  2128  000496  519A               	movf	_loop$925& (0+255),w,b
  2129  000498  119B               	iorwf	(_loop$925+1)& (0+255),w,b
  2130  00049A  B4D8               	btfsc	status,2,c
  2131  00049C  D005               	goto	l404
  2132                           
  2133                           ; BSR set to: 1
  2134                           ;main.c: 185: estado = DER;
  2135  00049E  0E00               	movlw	0
  2136  0004A0  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2137  0004A2  0E05               	movlw	5
  2138  0004A4  6FC0               	movwf	loop@estado& (0+255),b
  2139                           
  2140                           ;main.c: 186: break;
  2141  0004A6  0012               	return	
  2142  0004A8                     l404:
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;main.c: 187: }
  2146                           ;main.c: 189: estado = direccion;
  2147  0004A8  C1C2  F1C0         	movff	loop@direccion,loop@estado
  2148  0004AC  C1C3  F1C1         	movff	loop@direccion+1,loop@estado+1
  2149                           
  2150                           ;main.c: 190: break;
  2151  0004B0  0012               	return	
  2152  0004B2                     
  2153                           ;main.c: 193: setMotores(1000, 1000);
  2154                           
  2155                           ; BSR set to: 1
  2156  0004B2  0E03               	movlw	3
  2157  0004B4  6E3E               	movwf	setMotores@dutyI+1,c
  2158  0004B6  0EE8               	movlw	232
  2159  0004B8  6E3D               	movwf	setMotores@dutyI,c
  2160  0004BA  0E03               	movlw	3
  2161  0004BC  6E40               	movwf	setMotores@dutyD+1,c
  2162  0004BE  0EE8               	movlw	232
  2163  0004C0  6E3F               	movwf	setMotores@dutyD,c
  2164  0004C2  ECDF  F003         	call	_setMotores	;wreg free
  2165                           
  2166                           ;main.c: 194: estado = ANALISIS;
  2167  0004C6  0E00               	movlw	0
  2168  0004C8  0101               	movlb	1	; () banked
  2169  0004CA  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2170  0004CC  0E03               	movlw	3
  2171  0004CE  6FC0               	movwf	loop@estado& (0+255),b
  2172                           
  2173                           ;main.c: 195: break;
  2174  0004D0  0012               	return	
  2175  0004D2                     
  2176                           ;main.c: 198: setMotores(1000, 1000 / 2);
  2177                           
  2178                           ; BSR set to: 1
  2179  0004D2  0E03               	movlw	3
  2180  0004D4  6E3E               	movwf	setMotores@dutyI+1,c
  2181  0004D6  0EE8               	movlw	232
  2182  0004D8  6E3D               	movwf	setMotores@dutyI,c
  2183  0004DA  0E01               	movlw	1
  2184  0004DC  6E40               	movwf	setMotores@dutyD+1,c
  2185  0004DE  0EF4               	movlw	244
  2186  0004E0  6E3F               	movwf	setMotores@dutyD,c
  2187  0004E2  ECDF  F003         	call	_setMotores	;wreg free
  2188                           
  2189                           ;main.c: 199: direccion = DER;
  2190  0004E6  0E00               	movlw	0
  2191  0004E8  0101               	movlb	1	; () banked
  2192  0004EA  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  2193  0004EC  0E05               	movlw	5
  2194  0004EE  6FC2               	movwf	loop@direccion& (0+255),b
  2195                           
  2196                           ; BSR set to: 1
  2197                           ;main.c: 200: estado = ANALISIS;
  2198  0004F0  0E00               	movlw	0
  2199  0004F2  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2200  0004F4  0E03               	movlw	3
  2201  0004F6  6FC0               	movwf	loop@estado& (0+255),b
  2202                           
  2203                           ;main.c: 201: break;
  2204  0004F8  0012               	return	
  2205  0004FA                     
  2206                           ;main.c: 204: setMotores(1000 / 2, 1000);
  2207                           
  2208                           ; BSR set to: 1
  2209  0004FA  0E01               	movlw	1
  2210  0004FC  6E3E               	movwf	setMotores@dutyI+1,c
  2211  0004FE  0EF4               	movlw	244
  2212  000500  6E3D               	movwf	setMotores@dutyI,c
  2213  000502  0E03               	movlw	3
  2214  000504  6E40               	movwf	setMotores@dutyD+1,c
  2215  000506  0EE8               	movlw	232
  2216  000508  6E3F               	movwf	setMotores@dutyD,c
  2217  00050A  ECDF  F003         	call	_setMotores	;wreg free
  2218                           
  2219                           ;main.c: 205: direccion = IZQ;
  2220  00050E  0E00               	movlw	0
  2221  000510  0101               	movlb	1	; () banked
  2222  000512  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  2223  000514  0E08               	movlw	8
  2224  000516  6FC2               	movwf	loop@direccion& (0+255),b
  2225                           
  2226                           ; BSR set to: 1
  2227                           ;main.c: 206: estado = ANALISIS;
  2228  000518  0E00               	movlw	0
  2229  00051A  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2230  00051C  0E03               	movlw	3
  2231  00051E  6FC0               	movwf	loop@estado& (0+255),b
  2232                           
  2233                           ;main.c: 207: break;
  2234  000520  0012               	return	
  2235  000522                     
  2236                           ;main.c: 210: if(millis() > (m + 200)){
  2237                           
  2238                           ; BSR set to: 1
  2239  000522  EC22  F007         	call	_millis	;wreg free
  2240  000526  0EC8               	movlw	200
  2241  000528  0101               	movlb	1	; () banked
  2242  00052A  25BC               	addwf	loop@m& (0+255),w,b
  2243  00052C  0100               	movlb	0	; () banked
  2244  00052E  6F60               	movwf	??_loop& (0+255),b
  2245  000530  0E00               	movlw	0
  2246  000532  0101               	movlb	1	; () banked
  2247  000534  21BD               	addwfc	(loop@m+1)& (0+255),w,b
  2248  000536  0100               	movlb	0	; () banked
  2249  000538  6F61               	movwf	(??_loop+1)& (0+255),b
  2250  00053A  0E00               	movlw	0
  2251  00053C  0101               	movlb	1	; () banked
  2252  00053E  21BE               	addwfc	(loop@m+2)& (0+255),w,b
  2253  000540  0100               	movlb	0	; () banked
  2254  000542  6F62               	movwf	(??_loop+2)& (0+255),b
  2255  000544  0E00               	movlw	0
  2256  000546  0101               	movlb	1	; () banked
  2257  000548  21BF               	addwfc	(loop@m+3)& (0+255),w,b
  2258  00054A  0100               	movlb	0	; () banked
  2259  00054C  6F63               	movwf	(??_loop+3)& (0+255),b
  2260  00054E  5013               	movf	?_millis,w,c
  2261  000550  5D60               	subwf	??_loop& (0+255),w,b
  2262  000552  5014               	movf	?_millis+1,w,c
  2263  000554  5961               	subwfb	(??_loop+1)& (0+255),w,b
  2264  000556  5015               	movf	?_millis+2,w,c
  2265  000558  5962               	subwfb	(??_loop+2)& (0+255),w,b
  2266  00055A  5016               	movf	?_millis+3,w,c
  2267  00055C  5963               	subwfb	(??_loop+3)& (0+255),w,b
  2268  00055E  B0D8               	btfsc	status,0,c
  2269  000560  D016               	goto	l429
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 211: estado = ANALISIS;
  2273  000562  0E00               	movlw	0
  2274  000564  0101               	movlb	1	; () banked
  2275  000566  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2276  000568  0E03               	movlw	3
  2277  00056A  6FC0               	movwf	loop@estado& (0+255),b
  2278                           
  2279                           ; BSR set to: 1
  2280                           ;main.c: 213: if(ciego){
  2281  00056C  A04A               	btfss	loop@ciego/(0+8),loop@ciego& (0+7),c
  2282  00056E  0012               	return	
  2283                           
  2284                           ; BSR set to: 1
  2285                           ;main.c: 214: estado = DERCIEGO;
  2286  000570  0E00               	movlw	0
  2287  000572  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2288  000574  0E0D               	movlw	13
  2289  000576  6FC0               	movwf	loop@estado& (0+255),b
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;main.c: 215: m = millis();
  2293  000578  EC22  F007         	call	_millis	;wreg free
  2294  00057C  C013  F1BC         	movff	?_millis,loop@m
  2295  000580  C014  F1BD         	movff	?_millis+1,loop@m+1
  2296  000584  C015  F1BE         	movff	?_millis+2,loop@m+2
  2297  000588  C016  F1BF         	movff	?_millis+3,loop@m+3
  2298                           
  2299                           ;main.c: 216: }
  2300                           ;main.c: 217: break;
  2301  00058C  0012               	return	
  2302  00058E                     l429:
  2303                           
  2304                           ;main.c: 218: }
  2305                           ;main.c: 220: setMotores(-1000, -1000);
  2306  00058E  0EFC               	movlw	252
  2307  000590  6E3E               	movwf	setMotores@dutyI+1,c
  2308  000592  0E18               	movlw	24
  2309  000594  6E3D               	movwf	setMotores@dutyI,c
  2310  000596  0EFC               	movlw	252
  2311  000598  6E40               	movwf	setMotores@dutyD+1,c
  2312  00059A  0E18               	movlw	24
  2313  00059C  6E3F               	movwf	setMotores@dutyD,c
  2314  00059E  ECDF  F003         	call	_setMotores	;wreg free
  2315                           
  2316                           ;main.c: 221: break;
  2317  0005A2  0012               	return	
  2318  0005A4                     
  2319                           ;main.c: 224: setMotores(0, 1000);
  2320  0005A4  0E00               	movlw	0
  2321  0005A6  6E3E               	movwf	setMotores@dutyI+1,c
  2322  0005A8  0E00               	movlw	0
  2323  0005AA  6E3D               	movwf	setMotores@dutyI,c
  2324  0005AC  0E03               	movlw	3
  2325  0005AE  6E40               	movwf	setMotores@dutyD+1,c
  2326  0005B0  0EE8               	movlw	232
  2327  0005B2  6E3F               	movwf	setMotores@dutyD,c
  2328  0005B4  ECDF  F003         	call	_setMotores	;wreg free
  2329                           
  2330                           ;main.c: 225: direccion = IZQ;
  2331  0005B8  0E00               	movlw	0
  2332  0005BA  0101               	movlb	1	; () banked
  2333  0005BC  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  2334  0005BE  0E08               	movlw	8
  2335  0005C0  6FC2               	movwf	loop@direccion& (0+255),b
  2336                           
  2337                           ; BSR set to: 1
  2338                           ;main.c: 226: estado = ANALISIS;
  2339  0005C2  0E00               	movlw	0
  2340  0005C4  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2341  0005C6  0E03               	movlw	3
  2342  0005C8  6FC0               	movwf	loop@estado& (0+255),b
  2343                           
  2344                           ;main.c: 227: break;
  2345  0005CA  0012               	return	
  2346  0005CC                     
  2347                           ;main.c: 230: setMotores(1000, 0);
  2348                           
  2349                           ; BSR set to: 1
  2350  0005CC  0E03               	movlw	3
  2351  0005CE  6E3E               	movwf	setMotores@dutyI+1,c
  2352  0005D0  0EE8               	movlw	232
  2353  0005D2  6E3D               	movwf	setMotores@dutyI,c
  2354  0005D4  0E00               	movlw	0
  2355  0005D6  6E40               	movwf	setMotores@dutyD+1,c
  2356  0005D8  0E00               	movlw	0
  2357  0005DA  6E3F               	movwf	setMotores@dutyD,c
  2358  0005DC  ECDF  F003         	call	_setMotores	;wreg free
  2359                           
  2360                           ;main.c: 231: direccion = DER;
  2361  0005E0  0E00               	movlw	0
  2362  0005E2  0101               	movlb	1	; () banked
  2363  0005E4  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  2364  0005E6  0E05               	movlw	5
  2365  0005E8  6FC2               	movwf	loop@direccion& (0+255),b
  2366                           
  2367                           ; BSR set to: 1
  2368                           ;main.c: 232: estado = ANALISIS;
  2369  0005EA  0E00               	movlw	0
  2370  0005EC  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2371  0005EE  0E03               	movlw	3
  2372  0005F0  6FC0               	movwf	loop@estado& (0+255),b
  2373                           
  2374                           ;main.c: 233: break;
  2375  0005F2  0012               	return	
  2376  0005F4                     
  2377                           ;main.c: 236: setMotores(-700, 700);
  2378                           
  2379                           ; BSR set to: 1
  2380  0005F4  0EFD               	movlw	253
  2381  0005F6  6E3E               	movwf	setMotores@dutyI+1,c
  2382  0005F8  0E44               	movlw	68
  2383  0005FA  6E3D               	movwf	setMotores@dutyI,c
  2384  0005FC  0E02               	movlw	2
  2385  0005FE  6E40               	movwf	setMotores@dutyD+1,c
  2386  000600  0EBC               	movlw	188
  2387  000602  6E3F               	movwf	setMotores@dutyD,c
  2388  000604  ECDF  F003         	call	_setMotores	;wreg free
  2389                           
  2390                           ;main.c: 237: direccion = IZQ;
  2391  000608  0E00               	movlw	0
  2392  00060A  0101               	movlb	1	; () banked
  2393  00060C  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  2394  00060E  0E08               	movlw	8
  2395  000610  6FC2               	movwf	loop@direccion& (0+255),b
  2396                           
  2397                           ; BSR set to: 1
  2398                           ;main.c: 238: estado = ANALISIS;
  2399  000612  0E00               	movlw	0
  2400  000614  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2401  000616  0E03               	movlw	3
  2402  000618  6FC0               	movwf	loop@estado& (0+255),b
  2403                           
  2404                           ;main.c: 239: break;
  2405  00061A  0012               	return	
  2406  00061C                     
  2407                           ;main.c: 242: setMotores(700, -700);
  2408                           
  2409                           ; BSR set to: 1
  2410  00061C  0E02               	movlw	2
  2411  00061E  6E3E               	movwf	setMotores@dutyI+1,c
  2412  000620  0EBC               	movlw	188
  2413  000622  6E3D               	movwf	setMotores@dutyI,c
  2414  000624  0EFD               	movlw	253
  2415  000626  6E40               	movwf	setMotores@dutyD+1,c
  2416  000628  0E44               	movlw	68
  2417  00062A  6E3F               	movwf	setMotores@dutyD,c
  2418  00062C  ECDF  F003         	call	_setMotores	;wreg free
  2419                           
  2420                           ;main.c: 243: direccion = DER;
  2421  000630  0E00               	movlw	0
  2422  000632  0101               	movlb	1	; () banked
  2423  000634  6FC3               	movwf	(loop@direccion+1)& (0+255),b
  2424  000636  0E05               	movlw	5
  2425  000638  6FC2               	movwf	loop@direccion& (0+255),b
  2426                           
  2427                           ; BSR set to: 1
  2428                           ;main.c: 244: estado = ANALISIS;
  2429  00063A  0E00               	movlw	0
  2430  00063C  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2431  00063E  0E03               	movlw	3
  2432  000640  6FC0               	movwf	loop@estado& (0+255),b
  2433                           
  2434                           ;main.c: 245: break;
  2435  000642  0012               	return	
  2436  000644                     
  2437                           ;main.c: 248: if(millis() > (m + 500)){
  2438                           
  2439                           ; BSR set to: 1
  2440  000644  EC22  F007         	call	_millis	;wreg free
  2441  000648  0EF4               	movlw	244
  2442  00064A  0101               	movlb	1	; () banked
  2443  00064C  25BC               	addwf	loop@m& (0+255),w,b
  2444  00064E  0100               	movlb	0	; () banked
  2445  000650  6F60               	movwf	??_loop& (0+255),b
  2446  000652  0E01               	movlw	1
  2447  000654  0101               	movlb	1	; () banked
  2448  000656  21BD               	addwfc	(loop@m+1)& (0+255),w,b
  2449  000658  0100               	movlb	0	; () banked
  2450  00065A  6F61               	movwf	(??_loop+1)& (0+255),b
  2451  00065C  0E00               	movlw	0
  2452  00065E  0101               	movlb	1	; () banked
  2453  000660  21BE               	addwfc	(loop@m+2)& (0+255),w,b
  2454  000662  0100               	movlb	0	; () banked
  2455  000664  6F62               	movwf	(??_loop+2)& (0+255),b
  2456  000666  0E00               	movlw	0
  2457  000668  0101               	movlb	1	; () banked
  2458  00066A  21BF               	addwfc	(loop@m+3)& (0+255),w,b
  2459  00066C  0100               	movlb	0	; () banked
  2460  00066E  6F63               	movwf	(??_loop+3)& (0+255),b
  2461  000670  5013               	movf	?_millis,w,c
  2462  000672  5D60               	subwf	??_loop& (0+255),w,b
  2463  000674  5014               	movf	?_millis+1,w,c
  2464  000676  5961               	subwfb	(??_loop+1)& (0+255),w,b
  2465  000678  5015               	movf	?_millis+2,w,c
  2466  00067A  5962               	subwfb	(??_loop+2)& (0+255),w,b
  2467  00067C  5016               	movf	?_millis+3,w,c
  2468  00067E  5963               	subwfb	(??_loop+3)& (0+255),w,b
  2469  000680  B0D8               	btfsc	status,0,c
  2470  000682  D006               	goto	l436
  2471                           
  2472                           ; BSR set to: 0
  2473                           ;main.c: 249: estado = ANALISIS;
  2474  000684  0E00               	movlw	0
  2475  000686  0101               	movlb	1	; () banked
  2476  000688  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2477  00068A  0E03               	movlw	3
  2478  00068C  6FC0               	movwf	loop@estado& (0+255),b
  2479                           
  2480                           ;main.c: 250: break;
  2481  00068E  0012               	return	
  2482  000690                     l436:
  2483                           
  2484                           ;main.c: 251: }
  2485                           ;main.c: 253: setMotores(700, -700);
  2486                           
  2487                           ; BSR set to: 1
  2488  000690  0E02               	movlw	2
  2489  000692  6E3E               	movwf	setMotores@dutyI+1,c
  2490  000694  0EBC               	movlw	188
  2491  000696  6E3D               	movwf	setMotores@dutyI,c
  2492  000698  0EFD               	movlw	253
  2493  00069A  6E40               	movwf	setMotores@dutyD+1,c
  2494  00069C  0E44               	movlw	68
  2495  00069E  6E3F               	movwf	setMotores@dutyD,c
  2496  0006A0  ECDF  F003         	call	_setMotores	;wreg free
  2497                           
  2498                           ;main.c: 254: break;
  2499  0006A4  0012               	return	
  2500  0006A6                     
  2501                           ;main.c: 257: LATAbits.LA2 = !PORTBbits.RB3;
  2502  0006A6  B681               	btfsc	3969,3,c	;volatile
  2503  0006A8  D004               	goto	u6620
  2504  0006AA  0100               	movlb	0	; () banked
  2505  0006AC  6B60               	clrf	??_loop& (0+255),b
  2506  0006AE  2B60               	incf	??_loop& (0+255),f,b
  2507  0006B0  D002               	goto	u6638
  2508  0006B2                     u6620:
  2509  0006B2  0100               	movlb	0	; () banked
  2510  0006B4  6B60               	clrf	??_loop& (0+255),b
  2511  0006B6                     u6638:
  2512  0006B6  4760               	rlncf	??_loop& (0+255),f,b
  2513  0006B8  4760               	rlncf	??_loop& (0+255),f,b
  2514  0006BA  5089               	movf	3977,w,c	;volatile
  2515  0006BC  1960               	xorwf	??_loop& (0+255),w,b
  2516  0006BE  0BFB               	andlw	-5
  2517  0006C0  1960               	xorwf	??_loop& (0+255),w,b
  2518  0006C2  6E89               	movwf	3977,c	;volatile
  2519                           
  2520                           ;main.c: 258: LATAbits.LA4 = !PORTCbits.RC6;
  2521  0006C4  BC82               	btfsc	3970,6,c	;volatile
  2522  0006C6  D003               	goto	u6640
  2523  0006C8  6B60               	clrf	??_loop& (0+255),b
  2524  0006CA  2B60               	incf	??_loop& (0+255),f,b
  2525  0006CC  D002               	goto	u6658
  2526  0006CE                     u6640:
  2527  0006CE  0100               	movlb	0	; () banked
  2528  0006D0  6B60               	clrf	??_loop& (0+255),b
  2529  0006D2                     u6658:
  2530  0006D2  3B60               	swapf	??_loop& (0+255),f,b
  2531  0006D4  5089               	movf	3977,w,c	;volatile
  2532  0006D6  1960               	xorwf	??_loop& (0+255),w,b
  2533  0006D8  0BEF               	andlw	-17
  2534  0006DA  1960               	xorwf	??_loop& (0+255),w,b
  2535  0006DC  6E89               	movwf	3977,c	;volatile
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;main.c: 259: LATAbits.LA3 = 1;
  2539  0006DE  8689               	bsf	3977,3,c	;volatile
  2540                           
  2541                           ; BSR set to: 1
  2542                           
  2543                           ; BSR set to: 1
  2544                           
  2545                           ; BSR set to: 1
  2546                           
  2547                           ; BSR set to: 1
  2548                           
  2549                           ; BSR set to: 1
  2550                           
  2551                           ; BSR set to: 1
  2552                           
  2553                           ; BSR set to: 1
  2554                           
  2555                           ; BSR set to: 1
  2556                           
  2557                           ; BSR set to: 1
  2558                           
  2559                           ; BSR set to: 0
  2560                           
  2561                           ;main.c: 260: if((1 == 1 ? !PORTAbits.RA1 : (1 == 2 ? !PORTAbits.RA5 : (1 == 0 ? 0 : 0))
      +                          ) || (2 == 1 ? !PORTAbits.RA1 : (2 == 2 ? !PORTAbits.RA5 : (2 == 0 ? 0 : 0)))){
  2562  0006E0  B280               	btfsc	3968,1,c	;volatile
  2563  0006E2  D002               	goto	u6680
  2564  0006E4  0E01               	movlw	1
  2565  0006E6  D001               	goto	u6690
  2566  0006E8                     u6680:
  2567  0006E8  0E00               	movlw	0
  2568  0006EA                     u6690:
  2569  0006EA  0101               	movlb	1	; () banked
  2570  0006EC  6FA4               	movwf	_loop$930& (0+255),b
  2571  0006EE  6BA5               	clrf	(_loop$930+1)& (0+255),b
  2572                           
  2573                           ; BSR set to: 1
  2574                           
  2575                           ; BSR set to: 1
  2576  0006F0  51A4               	movf	_loop$930& (0+255),w,b
  2577  0006F2  11A5               	iorwf	(_loop$930+1)& (0+255),w,b
  2578  0006F4  A4D8               	btfss	status,2,c
  2579  0006F6  D00F               	goto	l468
  2580                           
  2581                           ; BSR set to: 1
  2582                           
  2583                           ; BSR set to: 1
  2584                           
  2585                           ; BSR set to: 1
  2586                           
  2587                           ; BSR set to: 1
  2588                           
  2589                           ; BSR set to: 1
  2590                           
  2591                           ; BSR set to: 1
  2592                           
  2593                           ; BSR set to: 1
  2594                           
  2595                           ; BSR set to: 1
  2596  0006F8  BA80               	btfsc	3968,5,c	;volatile
  2597  0006FA  D002               	goto	u6710
  2598  0006FC  0E01               	movlw	1
  2599  0006FE  D001               	goto	u6720
  2600  000700                     u6710:
  2601  000700  0E00               	movlw	0
  2602  000702                     u6720:
  2603  000702  6FAC               	movwf	_loop$934& (0+255),b
  2604  000704  6BAD               	clrf	(_loop$934+1)& (0+255),b
  2605                           
  2606                           ; BSR set to: 1
  2607                           
  2608                           ; BSR set to: 1
  2609  000706  C1AC  F1AA         	movff	_loop$934,_loop$933
  2610  00070A  C1AD  F1AB         	movff	_loop$934+1,_loop$933+1
  2611                           
  2612                           ; BSR set to: 1
  2613                           
  2614                           ; BSR set to: 1
  2615                           
  2616                           ; BSR set to: 1
  2617                           
  2618                           ; BSR set to: 1
  2619  00070E  51AA               	movf	_loop$933& (0+255),w,b
  2620  000710  11AB               	iorwf	(_loop$933+1)& (0+255),w,b
  2621  000712  B4D8               	btfsc	status,2,c
  2622  000714  0012               	return	
  2623  000716                     l468:
  2624                           
  2625                           ; BSR set to: 1
  2626                           
  2627                           ; BSR set to: 1
  2628  000716  B280               	btfsc	3968,1,c	;volatile
  2629  000718  D002               	goto	u6780
  2630  00071A  0E01               	movlw	1
  2631  00071C  D001               	goto	u6790
  2632  00071E                     u6780:
  2633  00071E  0E00               	movlw	0
  2634  000720                     u6790:
  2635  000720  6FB0               	movwf	_loop$936& (0+255),b
  2636  000722  6BB1               	clrf	(_loop$936+1)& (0+255),b
  2637                           
  2638                           ; BSR set to: 1
  2639                           
  2640                           ; BSR set to: 1
  2641  000724  51B0               	movf	_loop$936& (0+255),w,b
  2642  000726  11B1               	iorwf	(_loop$936+1)& (0+255),w,b
  2643  000728  A4D8               	btfss	status,2,c
  2644  00072A  D7F5               	goto	l468
  2645                           
  2646                           ; BSR set to: 1
  2647                           
  2648                           ; BSR set to: 1
  2649                           
  2650                           ; BSR set to: 1
  2651                           
  2652                           ; BSR set to: 1
  2653                           
  2654                           ; BSR set to: 1
  2655                           
  2656                           ; BSR set to: 1
  2657                           
  2658                           ; BSR set to: 1
  2659                           
  2660                           ; BSR set to: 1
  2661  00072C  BA80               	btfsc	3968,5,c	;volatile
  2662  00072E  D002               	goto	u6810
  2663  000730  0E01               	movlw	1
  2664  000732  D001               	goto	u6820
  2665  000734                     u6810:
  2666  000734  0E00               	movlw	0
  2667  000736                     u6820:
  2668  000736  6FB8               	movwf	_loop$940& (0+255),b
  2669  000738  6BB9               	clrf	(_loop$940+1)& (0+255),b
  2670                           
  2671                           ; BSR set to: 1
  2672                           
  2673                           ; BSR set to: 1
  2674  00073A  C1B8  F1B6         	movff	_loop$940,_loop$939
  2675  00073E  C1B9  F1B7         	movff	_loop$940+1,_loop$939+1
  2676                           
  2677                           ; BSR set to: 1
  2678                           
  2679                           ; BSR set to: 1
  2680                           
  2681                           ; BSR set to: 1
  2682                           
  2683                           ; BSR set to: 1
  2684  000742  51B6               	movf	_loop$939& (0+255),w,b
  2685  000744  11B7               	iorwf	(_loop$939+1)& (0+255),w,b
  2686  000746  A4D8               	btfss	status,2,c
  2687  000748  D7E6               	goto	l468
  2688                           
  2689                           ; BSR set to: 1
  2690                           ;main.c: 262: estado = 0;
  2691                           
  2692                           ; BSR set to: 1
  2693  00074A  0E00               	movlw	0
  2694  00074C  6FC1               	movwf	(loop@estado+1)& (0+255),b
  2695  00074E  0E00               	movlw	0
  2696  000750  6FC0               	movwf	loop@estado& (0+255),b
  2697                           
  2698                           ; BSR set to: 1
  2699                           ;main.c: 265: }
  2700                           
  2701                           ; BSR set to: 1
  2702                           ;main.c: 263: }
  2703                           ;main.c: 264: break;
  2704  000752  0012               	return	
  2705  000754                     l68:
  2706                           
  2707                           ; BSR set to: 1
  2708  000754  C1C0  F060         	movff	loop@estado,??_loop
  2709  000758  C1C1  F061         	movff	loop@estado+1,??_loop+1
  2710                           
  2711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2712                           ; Switch size 1, requested type "space"
  2713                           ; Number of cases is 1, Range of values is 0 to 0
  2714                           ; switch strategies available:
  2715                           ; Name         Instructions Cycles
  2716                           ; simple_byte            4     3 (average)
  2717                           ;	Chosen strategy is simple_byte
  2718  00075C  0100               	movlb	0	; () banked
  2719  00075E  5161               	movf	(??_loop+1)& (0+255),w,b
  2720  000760  0A00               	xorlw	0	; case 0
  2721  000762  A4D8               	btfss	status,2,c
  2722  000764  0012               	return	
  2723                           
  2724                           ; BSR set to: 0
  2725                           ; Switch size 1, requested type "space"
  2726                           ; Number of cases is 14, Range of values is 0 to 13
  2727                           ; switch strategies available:
  2728                           ; Name         Instructions Cycles
  2729                           ; simple_byte           43    22 (average)
  2730                           ;	Chosen strategy is simple_byte
  2731  000766  5160               	movf	??_loop& (0+255),w,b
  2732  000768  0A00               	xorlw	0	; case 0
  2733  00076A  B4D8               	btfsc	status,2,c
  2734  00076C  D454               	goto	l69
  2735  00076E  0A01               	xorlw	1	; case 1
  2736  000770  B4D8               	btfsc	status,2,c
  2737  000772  D515               	goto	l200
  2738  000774  0A03               	xorlw	3	; case 2
  2739  000776  B4D8               	btfsc	status,2,c
  2740  000778  D536               	goto	l214
  2741  00077A  0A01               	xorlw	1	; case 3
  2742  00077C  B4D8               	btfsc	status,2,c
  2743  00077E  D596               	goto	l221
  2744  000780  0A07               	xorlw	7	; case 4
  2745  000782  B4D8               	btfsc	status,2,c
  2746  000784  D696               	goto	l425
  2747  000786  0A01               	xorlw	1	; case 5
  2748  000788  B4D8               	btfsc	status,2,c
  2749  00078A  D748               	goto	l434
  2750  00078C  0A03               	xorlw	3	; case 6
  2751  00078E  B4D8               	btfsc	status,2,c
  2752  000790  D71D               	goto	l432
  2753  000792  0A01               	xorlw	1	; case 7
  2754  000794  B4D8               	btfsc	status,2,c
  2755  000796  D69D               	goto	l426
  2756  000798  0A0F               	xorlw	15	; case 8
  2757  00079A  B4D8               	btfsc	status,2,c
  2758  00079C  D72B               	goto	l433
  2759  00079E  0A01               	xorlw	1	; case 9
  2760  0007A0  B4D8               	btfsc	status,2,c
  2761  0007A2  D700               	goto	l431
  2762  0007A4  0A03               	xorlw	3	; case 10
  2763  0007A6  B4D8               	btfsc	status,2,c
  2764  0007A8  D6A8               	goto	l427
  2765  0007AA  0A01               	xorlw	1	; case 11
  2766  0007AC  B4D8               	btfsc	status,2,c
  2767  0007AE  D6B9               	goto	l428
  2768  0007B0  0A07               	xorlw	7	; case 12
  2769  0007B2  B4D8               	btfsc	status,2,c
  2770  0007B4  D778               	goto	l437
  2771  0007B6  0A01               	xorlw	1	; case 13
  2772  0007B8  A4D8               	btfss	status,2,c
  2773  0007BA  0012               	return	
  2774  0007BC  D743               	goto	l435
  2775  0007BE                     __end_of_loop:
  2776                           	opt stack 0
  2777                           tblptru	equ	0xFF8
  2778                           tblptrh	equ	0xFF7
  2779                           tblptrl	equ	0xFF6
  2780                           tablat	equ	0xFF5
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _millis *****************
  2784 ;; Defined at:
  2785 ;;		line 290 in file "main.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;		None
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  4   18[COMRAM] unsigned long 
  2792 ;; Registers used:
  2793 ;;		None
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2799 ;;      Params:         4       0       0       0       0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2802 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2803 ;;Total ram usage:        4 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    1
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		_loop
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text2
  2814  000E44                     __ptext2:
  2815                           	opt stack 0
  2816  000E44                     _millis:
  2817                           	opt stack 28
  2818                           
  2819                           ;incstack = 0
  2820  000E44  C046  F013         	movff	_millisCounter,?_millis
  2821  000E48  C047  F014         	movff	_millisCounter+1,?_millis+1
  2822  000E4C  C048  F015         	movff	_millisCounter+2,?_millis+2
  2823  000E50  C049  F016         	movff	_millisCounter+3,?_millis+3
  2824  000E54  0012               	return		;funcret
  2825  000E56                     __end_of_millis:
  2826                           	opt stack 0
  2827                           tblptru	equ	0xFF8
  2828                           tblptrh	equ	0xFF7
  2829                           tblptrl	equ	0xFF6
  2830                           tablat	equ	0xFF5
  2831                           status	equ	0xFD8
  2832                           
  2833 ;; *************** function _init *****************
  2834 ;; Defined at:
  2835 ;;		line 11 in file "main.c"
  2836 ;; Parameters:    Size  Location     Type
  2837 ;;		None
  2838 ;; Auto vars:     Size  Location     Type
  2839 ;;		None
  2840 ;; Return value:  Size  Location     Type
  2841 ;;                  1    wreg      void 
  2842 ;; Registers used:
  2843 ;;		wreg, status,2, status,0, cstack
  2844 ;; Tracked objects:
  2845 ;;		On entry : 0/0
  2846 ;;		On exit  : 0/0
  2847 ;;		Unchanged: 0/0
  2848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2849 ;;      Params:         0       0       0       0       0       0       0       0       0
  2850 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2851 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2852 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2853 ;;Total ram usage:        0 bytes
  2854 ;; Hardware stack levels used:    1
  2855 ;; Hardware stack levels required when called:    4
  2856 ;; This function calls:
  2857 ;;		_setMotores
  2858 ;; This function is called by:
  2859 ;;		_main
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text3
  2864  000CB2                     __ptext3:
  2865                           	opt stack 0
  2866  000CB2                     _init:
  2867                           	opt stack 26
  2868                           
  2869                           ;main.c: 13: ADCON1bits.PCFG = 0b1111;
  2870                           
  2871                           ;incstack = 0
  2872  000CB2  80C1               	bsf	4033,0,c	;volatile
  2873  000CB4  82C1               	bsf	4033,1,c	;volatile
  2874  000CB6  84C1               	bsf	4033,2,c	;volatile
  2875  000CB8  86C1               	bsf	4033,3,c	;volatile
  2876                           
  2877                           ;main.c: 16: UCONbits.USBEN = 0;
  2878  000CBA  966D               	bcf	3949,3,c	;volatile
  2879                           
  2880                           ;main.c: 17: UCFGbits.UTRDIS = 1;
  2881  000CBC  866F               	bsf	3951,3,c	;volatile
  2882                           
  2883                           ;main.c: 20: TRISAbits.RA1 = INPUT;
  2884  000CBE  8292               	bsf	3986,1,c	;volatile
  2885                           
  2886                           ;main.c: 21: TRISAbits.RA5 = INPUT;
  2887  000CC0  8A92               	bsf	3986,5,c	;volatile
  2888                           
  2889                           ;main.c: 22: TRISAbits.RA2 = OUTPUT;
  2890  000CC2  9492               	bcf	3986,2,c	;volatile
  2891                           
  2892                           ;main.c: 23: TRISAbits.RA3 = OUTPUT;
  2893  000CC4  9692               	bcf	3986,3,c	;volatile
  2894                           
  2895                           ;main.c: 24: TRISAbits.RA4 = OUTPUT;
  2896  000CC6  9892               	bcf	3986,4,c	;volatile
  2897                           
  2898                           ;main.c: 25: TRISBbits.RB5 = INPUT;
  2899  000CC8  8A93               	bsf	3987,5,c	;volatile
  2900                           
  2901                           ;main.c: 26: TRISBbits.RB4 = INPUT;
  2902  000CCA  8893               	bsf	3987,4,c	;volatile
  2903                           
  2904                           ;main.c: 27: TRISBbits.RB1 = INPUT;
  2905  000CCC  8293               	bsf	3987,1,c	;volatile
  2906                           
  2907                           ;main.c: 30: TRISBbits.RB3 = INPUT;
  2908  000CCE  8693               	bsf	3987,3,c	;volatile
  2909                           
  2910                           ;main.c: 31: TRISCbits.RC6 = INPUT;
  2911  000CD0  8C94               	bsf	3988,6,c	;volatile
  2912                           
  2913                           ;main.c: 32: TRISCbits.RC1 = OUTPUT;
  2914  000CD2  9294               	bcf	3988,1,c	;volatile
  2915                           
  2916                           ;main.c: 33: TRISCbits.RC2 = OUTPUT;
  2917  000CD4  9494               	bcf	3988,2,c	;volatile
  2918                           
  2919                           ;main.c: 34: TRISCbits.RC0 = OUTPUT;
  2920  000CD6  9094               	bcf	3988,0,c	;volatile
  2921                           
  2922                           ;main.c: 35: TRISAbits.RA0 = OUTPUT;
  2923  000CD8  9092               	bcf	3986,0,c	;volatile
  2924                           
  2925                           ;main.c: 38: T2CON = 0;
  2926  000CDA  0E00               	movlw	0
  2927  000CDC  6ECA               	movwf	4042,c	;volatile
  2928                           
  2929                           ;main.c: 39: T2CONbits.TOUTPS=11;
  2930  000CDE  50CA               	movf	4042,w,c	;volatile
  2931  000CE0  0B87               	andlw	-121
  2932  000CE2  0958               	iorlw	88
  2933  000CE4  6ECA               	movwf	4042,c	;volatile
  2934                           
  2935                           ;main.c: 40: T2CONbits.T2CKPS=1;
  2936  000CE6  50CA               	movf	4042,w,c	;volatile
  2937  000CE8  0BFC               	andlw	-4
  2938  000CEA  0901               	iorlw	1
  2939  000CEC  6ECA               	movwf	4042,c	;volatile
  2940                           
  2941                           ;main.c: 41: PR2=249;
  2942  000CEE  0EF9               	movlw	249
  2943  000CF0  6ECB               	movwf	4043,c	;volatile
  2944                           
  2945                           ;main.c: 42: T2CONbits.TMR2ON=1;
  2946  000CF2  84CA               	bsf	4042,2,c	;volatile
  2947                           
  2948                           ;main.c: 45: CCPR1L=0;
  2949  000CF4  0E00               	movlw	0
  2950  000CF6  6EBE               	movwf	4030,c	;volatile
  2951                           
  2952                           ;main.c: 46: CCP1CONbits.DC1B=0;
  2953  000CF8  0ECF               	movlw	-49
  2954  000CFA  16BD               	andwf	4029,f,c	;volatile
  2955                           
  2956                           ;main.c: 47: CCP1CONbits.CCP1M=12;
  2957  000CFC  50BD               	movf	4029,w,c	;volatile
  2958  000CFE  0BF0               	andlw	-16
  2959  000D00  090C               	iorlw	12
  2960  000D02  6EBD               	movwf	4029,c	;volatile
  2961                           
  2962                           ;main.c: 48: CCPR2L=0;
  2963  000D04  0E00               	movlw	0
  2964  000D06  6EBB               	movwf	4027,c	;volatile
  2965                           
  2966                           ;main.c: 49: CCP2CONbits.DC2B=0;
  2967  000D08  0ECF               	movlw	-49
  2968  000D0A  16BA               	andwf	4026,f,c	;volatile
  2969                           
  2970                           ;main.c: 50: CCP2CONbits.CCP2M=12;
  2971  000D0C  50BA               	movf	4026,w,c	;volatile
  2972  000D0E  0BF0               	andlw	-16
  2973  000D10  090C               	iorlw	12
  2974  000D12  6EBA               	movwf	4026,c	;volatile
  2975                           
  2976                           ;main.c: 53: INTCON3=0;
  2977  000D14  0E00               	movlw	0
  2978  000D16  6EF0               	movwf	intcon3,c	;volatile
  2979                           
  2980                           ;main.c: 54: PIE1=0;
  2981  000D18  0E00               	movlw	0
  2982  000D1A  6E9D               	movwf	3997,c	;volatile
  2983                           
  2984                           ;main.c: 55: PIE2=0;
  2985  000D1C  0E00               	movlw	0
  2986  000D1E  6EA0               	movwf	4000,c	;volatile
  2987                           
  2988                           ;main.c: 56: RCONbits.IPEN=0;
  2989  000D20  9ED0               	bcf	4048,7,c	;volatile
  2990                           
  2991                           ;main.c: 57: PIE1bits.TMR2IE=1;
  2992  000D22  829D               	bsf	3997,1,c	;volatile
  2993                           
  2994                           ;main.c: 58: INTCONbits.PEIE_GIEL=1;
  2995  000D24  8CF2               	bsf	intcon,6,c	;volatile
  2996                           
  2997                           ;main.c: 59: INTCONbits.GIE_GIEH=1;
  2998  000D26  8EF2               	bsf	intcon,7,c	;volatile
  2999                           
  3000                           ;main.c: 60: RCONbits.IPEN = 0;
  3001  000D28  9ED0               	bcf	4048,7,c	;volatile
  3002                           
  3003                           ;main.c: 61: INTCONbits.PEIE = 1;
  3004  000D2A  8CF2               	bsf	intcon,6,c	;volatile
  3005                           
  3006                           ;main.c: 62: INTCONbits.GIE = 1;
  3007  000D2C  8EF2               	bsf	intcon,7,c	;volatile
  3008                           
  3009                           ;main.c: 65: setMotores(0, 0);
  3010  000D2E  0E00               	movlw	0
  3011  000D30  6E3E               	movwf	setMotores@dutyI+1,c
  3012  000D32  0E00               	movlw	0
  3013  000D34  6E3D               	movwf	setMotores@dutyI,c
  3014  000D36  0E00               	movlw	0
  3015  000D38  6E40               	movwf	setMotores@dutyD+1,c
  3016  000D3A  0E00               	movlw	0
  3017  000D3C  6E3F               	movwf	setMotores@dutyD,c
  3018  000D3E  ECDF  F003         	call	_setMotores	;wreg free
  3019                           
  3020                           ;main.c: 66: LATAbits.LA2 = 0;
  3021  000D42  9489               	bcf	3977,2,c	;volatile
  3022                           
  3023                           ;main.c: 67: LATAbits.LA3 = 0;
  3024  000D44  9689               	bcf	3977,3,c	;volatile
  3025                           
  3026                           ;main.c: 68: LATAbits.LA4 = 0;
  3027  000D46  9889               	bcf	3977,4,c	;volatile
  3028  000D48  0012               	return		;funcret
  3029  000D4A                     __end_of_init:
  3030                           	opt stack 0
  3031                           tblptru	equ	0xFF8
  3032                           tblptrh	equ	0xFF7
  3033                           tblptrl	equ	0xFF6
  3034                           tablat	equ	0xFF5
  3035                           intcon	equ	0xFF2
  3036                           intcon3	equ	0xFF0
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _setMotores *****************
  3040 ;; Defined at:
  3041 ;;		line 268 in file "main.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;  dutyI           2   60[COMRAM] int 
  3044 ;;  dutyD           2   62[COMRAM] int 
  3045 ;; Auto vars:     Size  Location     Type
  3046 ;;		None
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    wreg      void 
  3049 ;; Registers used:
  3050 ;;		wreg, status,2, status,0, cstack
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3056 ;;      Params:         4       0       0       0       0       0       0       0       0
  3057 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3058 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3059 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3060 ;;Total ram usage:        9 bytes
  3061 ;; Hardware stack levels used:    1
  3062 ;; Hardware stack levels required when called:    3
  3063 ;; This function calls:
  3064 ;;		___awdiv
  3065 ;;		___awtoft
  3066 ;;		___ftmul
  3067 ;;		___fttol
  3068 ;; This function is called by:
  3069 ;;		_init
  3070 ;;		_loop
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text4
  3075  0007BE                     __ptext4:
  3076                           	opt stack 0
  3077  0007BE                     _setMotores:
  3078                           	opt stack 26
  3079                           
  3080                           ;main.c: 269: dutyD = -dutyD;
  3081                           
  3082                           ;incstack = 0
  3083  0007BE  6C3F               	negf	setMotores@dutyD,c
  3084  0007C0  1E40               	comf	setMotores@dutyD+1,f,c
  3085  0007C2  B0D8               	btfsc	status,0,c
  3086  0007C4  2A40               	incf	setMotores@dutyD+1,f,c
  3087                           
  3088                           ;main.c: 271: dutyI = (dutyI > 1000 ? 1000 : (dutyI < -1000 ? -1000 : dutyI));
  3089  0007C6  BE3E               	btfsc	setMotores@dutyI+1,7,c
  3090  0007C8  D006               	goto	u2720
  3091  0007CA  0EE9               	movlw	233
  3092  0007CC  5C3D               	subwf	setMotores@dutyI,w,c
  3093  0007CE  0E03               	movlw	3
  3094  0007D0  583E               	subwfb	setMotores@dutyI+1,w,c
  3095  0007D2  B0D8               	btfsc	status,0,c
  3096  0007D4  D016               	goto	l496
  3097  0007D6                     u2720:
  3098  0007D6  AE3E               	btfss	setMotores@dutyI+1,7,c
  3099  0007D8  D006               	goto	u2730
  3100  0007DA  0E18               	movlw	24
  3101  0007DC  5C3D               	subwf	setMotores@dutyI,w,c
  3102  0007DE  0EFC               	movlw	252
  3103  0007E0  583E               	subwfb	setMotores@dutyI+1,w,c
  3104  0007E2  A0D8               	btfss	status,0,c
  3105  0007E4  D005               	goto	l500
  3106  0007E6                     u2730:
  3107  0007E6  C03D  F042         	movff	setMotores@dutyI,_setMotores$945
  3108  0007EA  C03E  F043         	movff	setMotores@dutyI+1,_setMotores$945+1
  3109  0007EE  D004               	goto	l502
  3110  0007F0                     l500:
  3111  0007F0  0EFC               	movlw	252
  3112  0007F2  6E43               	movwf	_setMotores$945+1,c
  3113  0007F4  0E18               	movlw	24
  3114  0007F6  6E42               	movwf	_setMotores$945,c
  3115  0007F8                     l502:
  3116  0007F8  C042  F03D         	movff	_setMotores$945,setMotores@dutyI
  3117  0007FC  C043  F03E         	movff	_setMotores$945+1,setMotores@dutyI+1
  3118  000800  D004               	goto	l498
  3119  000802                     l496:
  3120  000802  0E03               	movlw	3
  3121  000804  6E3E               	movwf	setMotores@dutyI+1,c
  3122  000806  0EE8               	movlw	232
  3123  000808  6E3D               	movwf	setMotores@dutyI,c
  3124  00080A                     l498:
  3125                           
  3126                           ;main.c: 272: dutyD = (dutyD > 1000 ? 1000 : (dutyD < -1000 ? -1000 : dutyD));
  3127  00080A  BE40               	btfsc	setMotores@dutyD+1,7,c
  3128  00080C  D006               	goto	u2740
  3129  00080E  0EE9               	movlw	233
  3130  000810  5C3F               	subwf	setMotores@dutyD,w,c
  3131  000812  0E03               	movlw	3
  3132  000814  5840               	subwfb	setMotores@dutyD+1,w,c
  3133  000816  B0D8               	btfsc	status,0,c
  3134  000818  D016               	goto	l504
  3135  00081A                     u2740:
  3136  00081A  AE40               	btfss	setMotores@dutyD+1,7,c
  3137  00081C  D006               	goto	u2750
  3138  00081E  0E18               	movlw	24
  3139  000820  5C3F               	subwf	setMotores@dutyD,w,c
  3140  000822  0EFC               	movlw	252
  3141  000824  5840               	subwfb	setMotores@dutyD+1,w,c
  3142  000826  A0D8               	btfss	status,0,c
  3143  000828  D005               	goto	l508
  3144  00082A                     u2750:
  3145  00082A  C03F  F044         	movff	setMotores@dutyD,_setMotores$946
  3146  00082E  C040  F045         	movff	setMotores@dutyD+1,_setMotores$946+1
  3147  000832  D004               	goto	l510
  3148  000834                     l508:
  3149  000834  0EFC               	movlw	252
  3150  000836  6E45               	movwf	_setMotores$946+1,c
  3151  000838  0E18               	movlw	24
  3152  00083A  6E44               	movwf	_setMotores$946,c
  3153  00083C                     l510:
  3154  00083C  C044  F03F         	movff	_setMotores$946,setMotores@dutyD
  3155  000840  C045  F040         	movff	_setMotores$946+1,setMotores@dutyD+1
  3156  000844  D004               	goto	l506
  3157  000846                     l504:
  3158  000846  0E03               	movlw	3
  3159  000848  6E40               	movwf	setMotores@dutyD+1,c
  3160  00084A  0EE8               	movlw	232
  3161  00084C  6E3F               	movwf	setMotores@dutyD,c
  3162  00084E                     l506:
  3163                           
  3164                           ;main.c: 274: LATAbits.LA0 = dutyI < 0;
  3165  00084E  AE3E               	btfss	setMotores@dutyI+1,7,c
  3166  000850  D003               	goto	u2760
  3167  000852  6A41               	clrf	??_setMotores& (0+255),c
  3168  000854  2A41               	incf	??_setMotores& (0+255),f,c
  3169  000856  D001               	goto	u2778
  3170  000858                     u2760:
  3171  000858  6A41               	clrf	??_setMotores& (0+255),c
  3172  00085A                     u2778:
  3173  00085A  5089               	movf	3977,w,c	;volatile
  3174  00085C  1841               	xorwf	??_setMotores,w,c
  3175  00085E  0BFE               	andlw	-2
  3176  000860  1841               	xorwf	??_setMotores,w,c
  3177  000862  6E89               	movwf	3977,c	;volatile
  3178                           
  3179                           ;main.c: 275: LATCbits.LC0 = dutyD < 0;
  3180  000864  AE40               	btfss	setMotores@dutyD+1,7,c
  3181  000866  D003               	goto	u2780
  3182  000868  6A41               	clrf	??_setMotores& (0+255),c
  3183  00086A  2A41               	incf	??_setMotores& (0+255),f,c
  3184  00086C  D001               	goto	u2798
  3185  00086E                     u2780:
  3186  00086E  6A41               	clrf	??_setMotores& (0+255),c
  3187  000870                     u2798:
  3188  000870  508B               	movf	3979,w,c	;volatile
  3189  000872  1841               	xorwf	??_setMotores,w,c
  3190  000874  0BFE               	andlw	-2
  3191  000876  1841               	xorwf	??_setMotores,w,c
  3192  000878  6E8B               	movwf	3979,c	;volatile
  3193                           
  3194                           ;main.c: 277: dutyI = (dutyI < 0 ? 1000+dutyI : dutyI);
  3195  00087A  AE3E               	btfss	setMotores@dutyI+1,7,c
  3196  00087C  D006               	goto	l514
  3197  00087E  0EE8               	movlw	232
  3198  000880  243D               	addwf	setMotores@dutyI,w,c
  3199  000882  6E3D               	movwf	setMotores@dutyI,c
  3200  000884  0E03               	movlw	3
  3201  000886  203E               	addwfc	setMotores@dutyI+1,w,c
  3202  000888  6E3E               	movwf	setMotores@dutyI+1,c
  3203  00088A                     l514:
  3204                           
  3205                           ;main.c: 278: dutyD = (dutyD < 0 ? 1000+dutyD : dutyD);
  3206  00088A  AE40               	btfss	setMotores@dutyD+1,7,c
  3207  00088C  D006               	goto	l518
  3208  00088E  0EE8               	movlw	232
  3209  000890  243F               	addwf	setMotores@dutyD,w,c
  3210  000892  6E3F               	movwf	setMotores@dutyD,c
  3211  000894  0E03               	movlw	3
  3212  000896  2040               	addwfc	setMotores@dutyD+1,w,c
  3213  000898  6E40               	movwf	setMotores@dutyD+1,c
  3214  00089A                     l518:
  3215                           
  3216                           ;main.c: 280: dutyI *= 1.023;
  3217  00089A  0EF2               	movlw	242
  3218  00089C  6E22               	movwf	___ftmul@f2,c
  3219  00089E  0E82               	movlw	130
  3220  0008A0  6E23               	movwf	___ftmul@f2+1,c
  3221  0008A2  0E3F               	movlw	63
  3222  0008A4  6E24               	movwf	___ftmul@f2+2,c
  3223  0008A6  C03D  F01B         	movff	setMotores@dutyI,___awtoft@c
  3224  0008AA  C03E  F01C         	movff	setMotores@dutyI+1,___awtoft@c+1
  3225  0008AE  EC06  F007         	call	___awtoft	;wreg free
  3226  0008B2  C01B  F01F         	movff	?___awtoft,___ftmul@f1
  3227  0008B6  C01C  F020         	movff	?___awtoft+1,___ftmul@f1+1
  3228  0008BA  C01D  F021         	movff	?___awtoft+2,___ftmul@f1+2
  3229  0008BE  EC34  F005         	call	___ftmul	;wreg free
  3230  0008C2  C01F  F02E         	movff	?___ftmul,___fttol@f1
  3231  0008C6  C020  F02F         	movff	?___ftmul+1,___fttol@f1+1
  3232  0008CA  C021  F030         	movff	?___ftmul+2,___fttol@f1+2
  3233  0008CE  ECBA  F004         	call	___fttol	;wreg free
  3234  0008D2  C02E  F03D         	movff	?___fttol,setMotores@dutyI
  3235  0008D6  C02F  F03E         	movff	?___fttol+1,setMotores@dutyI+1
  3236                           
  3237                           ;main.c: 281: dutyD *= 1.023;
  3238  0008DA  0EF2               	movlw	242
  3239  0008DC  6E22               	movwf	___ftmul@f2,c
  3240  0008DE  0E82               	movlw	130
  3241  0008E0  6E23               	movwf	___ftmul@f2+1,c
  3242  0008E2  0E3F               	movlw	63
  3243  0008E4  6E24               	movwf	___ftmul@f2+2,c
  3244  0008E6  C03F  F01B         	movff	setMotores@dutyD,___awtoft@c
  3245  0008EA  C040  F01C         	movff	setMotores@dutyD+1,___awtoft@c+1
  3246  0008EE  EC06  F007         	call	___awtoft	;wreg free
  3247  0008F2  C01B  F01F         	movff	?___awtoft,___ftmul@f1
  3248  0008F6  C01C  F020         	movff	?___awtoft+1,___ftmul@f1+1
  3249  0008FA  C01D  F021         	movff	?___awtoft+2,___ftmul@f1+2
  3250  0008FE  EC34  F005         	call	___ftmul	;wreg free
  3251  000902  C01F  F02E         	movff	?___ftmul,___fttol@f1
  3252  000906  C020  F02F         	movff	?___ftmul+1,___fttol@f1+1
  3253  00090A  C021  F030         	movff	?___ftmul+2,___fttol@f1+2
  3254  00090E  ECBA  F004         	call	___fttol	;wreg free
  3255  000912  C02E  F03F         	movff	?___fttol,setMotores@dutyD
  3256  000916  C02F  F040         	movff	?___fttol+1,setMotores@dutyD+1
  3257                           
  3258                           ;main.c: 283: CCPR1L = dutyI / 4;
  3259  00091A  C03D  F013         	movff	setMotores@dutyI,___awdiv@dividend
  3260  00091E  C03E  F014         	movff	setMotores@dutyI+1,___awdiv@dividend+1
  3261  000922  0E00               	movlw	0
  3262  000924  6E16               	movwf	___awdiv@divisor+1,c
  3263  000926  0E04               	movlw	4
  3264  000928  6E15               	movwf	___awdiv@divisor,c
  3265  00092A  ECA5  F006         	call	___awdiv	;wreg free
  3266  00092E  5013               	movf	?___awdiv,w,c
  3267  000930  6EBE               	movwf	4030,c	;volatile
  3268                           
  3269                           ;main.c: 284: CCPR2L = dutyD / 4;
  3270  000932  C03F  F013         	movff	setMotores@dutyD,___awdiv@dividend
  3271  000936  C040  F014         	movff	setMotores@dutyD+1,___awdiv@dividend+1
  3272  00093A  0E00               	movlw	0
  3273  00093C  6E16               	movwf	___awdiv@divisor+1,c
  3274  00093E  0E04               	movlw	4
  3275  000940  6E15               	movwf	___awdiv@divisor,c
  3276  000942  ECA5  F006         	call	___awdiv	;wreg free
  3277  000946  5013               	movf	?___awdiv,w,c
  3278  000948  6EBB               	movwf	4027,c	;volatile
  3279                           
  3280                           ;main.c: 285: CCP1CONbits.DC1B = dutyI % 4;
  3281  00094A  C03D  F041         	movff	setMotores@dutyI,??_setMotores
  3282  00094E  0E03               	movlw	3
  3283  000950  1641               	andwf	??_setMotores,f,c
  3284  000952  3A41               	swapf	??_setMotores,f,c
  3285  000954  50BD               	movf	4029,w,c	;volatile
  3286  000956  1841               	xorwf	??_setMotores,w,c
  3287  000958  0BCF               	andlw	-49
  3288  00095A  1841               	xorwf	??_setMotores,w,c
  3289  00095C  6EBD               	movwf	4029,c	;volatile
  3290                           
  3291                           ;main.c: 286: CCP2CONbits.DC2B = dutyD % 4;
  3292  00095E  C03F  F041         	movff	setMotores@dutyD,??_setMotores
  3293  000962  0E03               	movlw	3
  3294  000964  1641               	andwf	??_setMotores,f,c
  3295  000966  3A41               	swapf	??_setMotores,f,c
  3296  000968  50BA               	movf	4026,w,c	;volatile
  3297  00096A  1841               	xorwf	??_setMotores,w,c
  3298  00096C  0BCF               	andlw	-49
  3299  00096E  1841               	xorwf	??_setMotores,w,c
  3300  000970  6EBA               	movwf	4026,c	;volatile
  3301  000972  0012               	return		;funcret
  3302  000974                     __end_of_setMotores:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           intcon	equ	0xFF2
  3309                           intcon3	equ	0xFF0
  3310                           status	equ	0xFD8
  3311                           
  3312 ;; *************** function ___fttol *****************
  3313 ;; Defined at:
  3314 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  f1              3   45[COMRAM] float 
  3317 ;; Auto vars:     Size  Location     Type
  3318 ;;  lval            4   55[COMRAM] unsigned long 
  3319 ;;  exp1            1   59[COMRAM] unsigned char 
  3320 ;;  sign1           1   54[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  4   45[COMRAM] long 
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3330 ;;      Params:         4       0       0       0       0       0       0       0       0
  3331 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3332 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3333 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3334 ;;Total ram usage:       15 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    1
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_setMotores
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text5
  3345  000974                     __ptext5:
  3346                           	opt stack 0
  3347  000974                     ___fttol:
  3348                           	opt stack 27
  3349                           
  3350                           ;incstack = 0
  3351  000974  C030  F032         	movff	___fttol@f1+2,??___fttol
  3352  000978  6A33               	clrf	(??___fttol+1)& (0+255),c
  3353  00097A  6A34               	clrf	(??___fttol+2)& (0+255),c
  3354  00097C  342F               	rlcf	___fttol@f1+1,w,c
  3355  00097E  3632               	rlcf	??___fttol& (0+255),f,c
  3356  000980  E301               	bnc	u2641
  3357  000982  8033               	bsf	(??___fttol+1)& (0+255),0,c
  3358  000984                     u2641:
  3359  000984  5032               	movf	??___fttol,w,c
  3360  000986  6E3C               	movwf	___fttol@exp1,c
  3361  000988  503C               	movf	___fttol@exp1,w,c
  3362  00098A  A4D8               	btfss	status,2,c
  3363  00098C  D009               	goto	l853
  3364  00098E  0E00               	movlw	0
  3365  000990  6E2E               	movwf	?___fttol,c
  3366  000992  0E00               	movlw	0
  3367  000994  6E2F               	movwf	?___fttol+1,c
  3368  000996  0E00               	movlw	0
  3369  000998  6E30               	movwf	?___fttol+2,c
  3370  00099A  0E00               	movlw	0
  3371  00099C  6E31               	movwf	?___fttol+3,c
  3372  00099E  0012               	return	
  3373  0009A0                     l853:
  3374  0009A0  0E17               	movlw	23
  3375  0009A2  6E32               	movwf	??___fttol& (0+255),c
  3376  0009A4  C02E  F033         	movff	___fttol@f1,??___fttol+1
  3377  0009A8  C02F  F034         	movff	___fttol@f1+1,??___fttol+2
  3378  0009AC  C030  F035         	movff	___fttol@f1+2,??___fttol+3
  3379  0009B0  2832               	incf	??___fttol,w,c
  3380  0009B2  6E36               	movwf	(??___fttol+4)& (0+255),c
  3381  0009B4  D004               	goto	u2660
  3382  0009B6                     u2665:
  3383  0009B6  90D8               	bcf	status,0,c
  3384  0009B8  3235               	rrcf	??___fttol+3,f,c
  3385  0009BA  3234               	rrcf	??___fttol+2,f,c
  3386  0009BC  3233               	rrcf	??___fttol+1,f,c
  3387  0009BE                     u2660:
  3388  0009BE  2E36               	decfsz	(??___fttol+4)& (0+255),f,c
  3389  0009C0  D7FA               	goto	u2665
  3390  0009C2  5033               	movf	??___fttol+1,w,c
  3391  0009C4  6E37               	movwf	___fttol@sign1,c
  3392  0009C6  8E2F               	bsf	___fttol@f1+1,7,c
  3393  0009C8  0EFF               	movlw	255
  3394  0009CA  162E               	andwf	___fttol@f1,f,c
  3395  0009CC  0EFF               	movlw	255
  3396  0009CE  162F               	andwf	___fttol@f1+1,f,c
  3397  0009D0  0E00               	movlw	0
  3398  0009D2  1630               	andwf	___fttol@f1+2,f,c
  3399  0009D4  502E               	movf	___fttol@f1,w,c
  3400  0009D6  6E38               	movwf	___fttol@lval,c
  3401  0009D8  502F               	movf	___fttol@f1+1,w,c
  3402  0009DA  6E39               	movwf	___fttol@lval+1,c
  3403  0009DC  5030               	movf	___fttol@f1+2,w,c
  3404  0009DE  6E3A               	movwf	___fttol@lval+2,c
  3405  0009E0  6A3B               	clrf	___fttol@lval+3,c
  3406  0009E2  0E8E               	movlw	142
  3407  0009E4  5E3C               	subwf	___fttol@exp1,f,c
  3408  0009E6  AE3C               	btfss	___fttol@exp1,7,c
  3409  0009E8  D016               	goto	l855
  3410  0009EA  503C               	movf	___fttol@exp1,w,c
  3411  0009EC  0A80               	xorlw	128
  3412  0009EE  0F8F               	addlw	143
  3413  0009F0  B0D8               	btfsc	status,0,c
  3414  0009F2  D009               	goto	l856
  3415  0009F4  0E00               	movlw	0
  3416  0009F6  6E2E               	movwf	?___fttol,c
  3417  0009F8  0E00               	movlw	0
  3418  0009FA  6E2F               	movwf	?___fttol+1,c
  3419  0009FC  0E00               	movlw	0
  3420  0009FE  6E30               	movwf	?___fttol+2,c
  3421  000A00  0E00               	movlw	0
  3422  000A02  6E31               	movwf	?___fttol+3,c
  3423  000A04  0012               	return	
  3424  000A06                     l856:
  3425  000A06  90D8               	bcf	status,0,c
  3426  000A08  323B               	rrcf	___fttol@lval+3,f,c
  3427  000A0A  323A               	rrcf	___fttol@lval+2,f,c
  3428  000A0C  3239               	rrcf	___fttol@lval+1,f,c
  3429  000A0E  3238               	rrcf	___fttol@lval,f,c
  3430  000A10  3E3C               	incfsz	___fttol@exp1,f,c
  3431  000A12  D7F9               	goto	l856
  3432  000A14  D015               	goto	u2700
  3433  000A16                     l855:
  3434  000A16  0E17               	movlw	23
  3435  000A18  643C               	cpfsgt	___fttol@exp1,c
  3436  000A1A  D00F               	goto	l861
  3437  000A1C  0E00               	movlw	0
  3438  000A1E  6E2E               	movwf	?___fttol,c
  3439  000A20  0E00               	movlw	0
  3440  000A22  6E2F               	movwf	?___fttol+1,c
  3441  000A24  0E00               	movlw	0
  3442  000A26  6E30               	movwf	?___fttol+2,c
  3443  000A28  0E00               	movlw	0
  3444  000A2A  6E31               	movwf	?___fttol+3,c
  3445  000A2C  0012               	return	
  3446  000A2E  90D8               	bcf	status,0,c
  3447  000A30  3638               	rlcf	___fttol@lval,f,c
  3448  000A32  3639               	rlcf	___fttol@lval+1,f,c
  3449  000A34  363A               	rlcf	___fttol@lval+2,f,c
  3450  000A36  363B               	rlcf	___fttol@lval+3,f,c
  3451  000A38  063C               	decf	___fttol@exp1,f,c
  3452  000A3A                     l861:
  3453  000A3A  503C               	movf	___fttol@exp1,w,c
  3454  000A3C  A4D8               	btfss	status,2,c
  3455  000A3E  D7F7               	goto	l862
  3456  000A40                     u2700:
  3457  000A40  5037               	movf	___fttol@sign1,w,c
  3458  000A42  B4D8               	btfsc	status,2,c
  3459  000A44  D008               	goto	l864
  3460  000A46  1E3B               	comf	___fttol@lval+3,f,c
  3461  000A48  1E3A               	comf	___fttol@lval+2,f,c
  3462  000A4A  1E39               	comf	___fttol@lval+1,f,c
  3463  000A4C  6C38               	negf	___fttol@lval,c
  3464  000A4E  0E00               	movlw	0
  3465  000A50  2239               	addwfc	___fttol@lval+1,f,c
  3466  000A52  223A               	addwfc	___fttol@lval+2,f,c
  3467  000A54  223B               	addwfc	___fttol@lval+3,f,c
  3468  000A56                     l864:
  3469  000A56  C038  F02E         	movff	___fttol@lval,?___fttol
  3470  000A5A  C039  F02F         	movff	___fttol@lval+1,?___fttol+1
  3471  000A5E  C03A  F030         	movff	___fttol@lval+2,?___fttol+2
  3472  000A62  C03B  F031         	movff	___fttol@lval+3,?___fttol+3
  3473  000A66  0012               	return	
  3474  000A68                     __end_of___fttol:
  3475                           	opt stack 0
  3476                           tblptru	equ	0xFF8
  3477                           tblptrh	equ	0xFF7
  3478                           tblptrl	equ	0xFF6
  3479                           tablat	equ	0xFF5
  3480                           intcon	equ	0xFF2
  3481                           intcon3	equ	0xFF0
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function ___ftmul *****************
  3485 ;; Defined at:
  3486 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  f1              3   30[COMRAM] float 
  3489 ;;  f2              3   33[COMRAM] float 
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;  f3_as_produc    3   40[COMRAM] unsigned um
  3492 ;;  sign            1   44[COMRAM] unsigned char 
  3493 ;;  cntr            1   43[COMRAM] unsigned char 
  3494 ;;  exp             1   39[COMRAM] unsigned char 
  3495 ;; Return value:  Size  Location     Type
  3496 ;;                  3   30[COMRAM] float 
  3497 ;; Registers used:
  3498 ;;		wreg, status,2, status,0, cstack
  3499 ;; Tracked objects:
  3500 ;;		On entry : 0/0
  3501 ;;		On exit  : 0/0
  3502 ;;		Unchanged: 0/0
  3503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3504 ;;      Params:         6       0       0       0       0       0       0       0       0
  3505 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3506 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3507 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3508 ;;Total ram usage:       15 bytes
  3509 ;; Hardware stack levels used:    1
  3510 ;; Hardware stack levels required when called:    2
  3511 ;; This function calls:
  3512 ;;		___ftpack
  3513 ;; This function is called by:
  3514 ;;		_setMotores
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text6
  3519  000A68                     __ptext6:
  3520                           	opt stack 0
  3521  000A68                     ___ftmul:
  3522                           	opt stack 26
  3523                           
  3524                           ;incstack = 0
  3525  000A68  C021  F025         	movff	___ftmul@f1+2,??___ftmul
  3526  000A6C  6A26               	clrf	(??___ftmul+1)& (0+255),c
  3527  000A6E  6A27               	clrf	(??___ftmul+2)& (0+255),c
  3528  000A70  3420               	rlcf	___ftmul@f1+1,w,c
  3529  000A72  3625               	rlcf	??___ftmul& (0+255),f,c
  3530  000A74  E301               	bnc	u2511
  3531  000A76  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  3532  000A78                     u2511:
  3533  000A78  5025               	movf	??___ftmul,w,c
  3534  000A7A  6E28               	movwf	___ftmul@exp,c
  3535  000A7C  5028               	movf	___ftmul@exp,w,c
  3536  000A7E  A4D8               	btfss	status,2,c
  3537  000A80  D007               	goto	l832
  3538  000A82  0E00               	movlw	0
  3539  000A84  6E1F               	movwf	?___ftmul,c
  3540  000A86  0E00               	movlw	0
  3541  000A88  6E20               	movwf	?___ftmul+1,c
  3542  000A8A  0E00               	movlw	0
  3543  000A8C  6E21               	movwf	?___ftmul+2,c
  3544  000A8E  0012               	return	
  3545  000A90                     l832:
  3546  000A90  C024  F025         	movff	___ftmul@f2+2,??___ftmul
  3547  000A94  6A26               	clrf	(??___ftmul+1)& (0+255),c
  3548  000A96  6A27               	clrf	(??___ftmul+2)& (0+255),c
  3549  000A98  3423               	rlcf	___ftmul@f2+1,w,c
  3550  000A9A  3625               	rlcf	??___ftmul& (0+255),f,c
  3551  000A9C  E301               	bnc	u2531
  3552  000A9E  8026               	bsf	(??___ftmul+1)& (0+255),0,c
  3553  000AA0                     u2531:
  3554  000AA0  5025               	movf	??___ftmul,w,c
  3555  000AA2  6E2D               	movwf	___ftmul@sign,c
  3556  000AA4  502D               	movf	___ftmul@sign,w,c
  3557  000AA6  A4D8               	btfss	status,2,c
  3558  000AA8  D007               	goto	l834
  3559  000AAA  0E00               	movlw	0
  3560  000AAC  6E1F               	movwf	?___ftmul,c
  3561  000AAE  0E00               	movlw	0
  3562  000AB0  6E20               	movwf	?___ftmul+1,c
  3563  000AB2  0E00               	movlw	0
  3564  000AB4  6E21               	movwf	?___ftmul+2,c
  3565  000AB6  0012               	return	
  3566  000AB8                     l834:
  3567  000AB8  502D               	movf	___ftmul@sign,w,c
  3568  000ABA  0F7B               	addlw	123
  3569  000ABC  2628               	addwf	___ftmul@exp,f,c
  3570  000ABE  C021  F02D         	movff	___ftmul@f1+2,___ftmul@sign
  3571  000AC2  5024               	movf	___ftmul@f2+2,w,c
  3572  000AC4  1A2D               	xorwf	___ftmul@sign,f,c
  3573  000AC6  0E80               	movlw	128
  3574  000AC8  162D               	andwf	___ftmul@sign,f,c
  3575  000ACA  8E20               	bsf	___ftmul@f1+1,7,c
  3576  000ACC  8E23               	bsf	___ftmul@f2+1,7,c
  3577  000ACE  0EFF               	movlw	255
  3578  000AD0  1622               	andwf	___ftmul@f2,f,c
  3579  000AD2  0EFF               	movlw	255
  3580  000AD4  1623               	andwf	___ftmul@f2+1,f,c
  3581  000AD6  0E00               	movlw	0
  3582  000AD8  1624               	andwf	___ftmul@f2+2,f,c
  3583  000ADA  0E00               	movlw	0
  3584  000ADC  6E29               	movwf	___ftmul@f3_as_product,c
  3585  000ADE  0E00               	movlw	0
  3586  000AE0  6E2A               	movwf	___ftmul@f3_as_product+1,c
  3587  000AE2  0E00               	movlw	0
  3588  000AE4  6E2B               	movwf	___ftmul@f3_as_product+2,c
  3589  000AE6  0E07               	movlw	7
  3590  000AE8  6E2C               	movwf	___ftmul@cntr,c
  3591  000AEA  A01F               	btfss	___ftmul@f1,0,c
  3592  000AEC  D006               	goto	l836
  3593  000AEE  5022               	movf	___ftmul@f2,w,c
  3594  000AF0  2629               	addwf	___ftmul@f3_as_product,f,c
  3595  000AF2  5023               	movf	___ftmul@f2+1,w,c
  3596  000AF4  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3597  000AF6  5024               	movf	___ftmul@f2+2,w,c
  3598  000AF8  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3599  000AFA                     l836:
  3600  000AFA  90D8               	bcf	status,0,c
  3601  000AFC  3221               	rrcf	___ftmul@f1+2,f,c
  3602  000AFE  3220               	rrcf	___ftmul@f1+1,f,c
  3603  000B00  321F               	rrcf	___ftmul@f1,f,c
  3604  000B02  90D8               	bcf	status,0,c
  3605  000B04  3622               	rlcf	___ftmul@f2,f,c
  3606  000B06  3623               	rlcf	___ftmul@f2+1,f,c
  3607  000B08  3624               	rlcf	___ftmul@f2+2,f,c
  3608  000B0A  2E2C               	decfsz	___ftmul@cntr,f,c
  3609  000B0C  D7EE               	goto	l835
  3610  000B0E  0E09               	movlw	9
  3611  000B10  6E2C               	movwf	___ftmul@cntr,c
  3612  000B12  A01F               	btfss	___ftmul@f1,0,c
  3613  000B14  D006               	goto	l839
  3614  000B16  5022               	movf	___ftmul@f2,w,c
  3615  000B18  2629               	addwf	___ftmul@f3_as_product,f,c
  3616  000B1A  5023               	movf	___ftmul@f2+1,w,c
  3617  000B1C  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3618  000B1E  5024               	movf	___ftmul@f2+2,w,c
  3619  000B20  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3620  000B22                     l839:
  3621  000B22  90D8               	bcf	status,0,c
  3622  000B24  3221               	rrcf	___ftmul@f1+2,f,c
  3623  000B26  3220               	rrcf	___ftmul@f1+1,f,c
  3624  000B28  321F               	rrcf	___ftmul@f1,f,c
  3625  000B2A  90D8               	bcf	status,0,c
  3626  000B2C  322B               	rrcf	___ftmul@f3_as_product+2,f,c
  3627  000B2E  322A               	rrcf	___ftmul@f3_as_product+1,f,c
  3628  000B30  3229               	rrcf	___ftmul@f3_as_product,f,c
  3629  000B32  2E2C               	decfsz	___ftmul@cntr,f,c
  3630  000B34  D7EE               	goto	l838
  3631  000B36  C029  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  3632  000B3A  C02A  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3633  000B3E  C02B  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3634  000B42  C028  F016         	movff	___ftmul@exp,___ftpack@exp
  3635  000B46  C02D  F017         	movff	___ftmul@sign,___ftpack@sign
  3636  000B4A  ECAE  F005         	call	___ftpack	;wreg free
  3637  000B4E  C013  F01F         	movff	?___ftpack,?___ftmul
  3638  000B52  C014  F020         	movff	?___ftpack+1,?___ftmul+1
  3639  000B56  C015  F021         	movff	?___ftpack+2,?___ftmul+2
  3640  000B5A  0012               	return	
  3641  000B5C                     __end_of___ftmul:
  3642                           	opt stack 0
  3643                           tblptru	equ	0xFF8
  3644                           tblptrh	equ	0xFF7
  3645                           tblptrl	equ	0xFF6
  3646                           tablat	equ	0xFF5
  3647                           intcon	equ	0xFF2
  3648                           intcon3	equ	0xFF0
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function ___awtoft *****************
  3652 ;; Defined at:
  3653 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  c               2   26[COMRAM] int 
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;  sign            1   29[COMRAM] unsigned char 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  3   26[COMRAM] float 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3667 ;;      Params:         3       0       0       0       0       0       0       0       0
  3668 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3670 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3671 ;;Total ram usage:        4 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    2
  3674 ;; This function calls:
  3675 ;;		___ftpack
  3676 ;; This function is called by:
  3677 ;;		_setMotores
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text7
  3682  000E0C                     __ptext7:
  3683                           	opt stack 0
  3684  000E0C                     ___awtoft:
  3685                           	opt stack 26
  3686                           
  3687                           ;incstack = 0
  3688  000E0C  0E00               	movlw	0
  3689  000E0E  6E1E               	movwf	___awtoft@sign,c
  3690  000E10  AE1C               	btfss	___awtoft@c+1,7,c
  3691  000E12  D006               	goto	l734
  3692  000E14  6C1B               	negf	___awtoft@c,c
  3693  000E16  1E1C               	comf	___awtoft@c+1,f,c
  3694  000E18  B0D8               	btfsc	status,0,c
  3695  000E1A  2A1C               	incf	___awtoft@c+1,f,c
  3696  000E1C  0E01               	movlw	1
  3697  000E1E  6E1E               	movwf	___awtoft@sign,c
  3698  000E20                     l734:
  3699  000E20  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  3700  000E24  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  3701  000E28  6A15               	clrf	___ftpack@arg+2,c
  3702  000E2A  0E8E               	movlw	142
  3703  000E2C  6E16               	movwf	___ftpack@exp,c
  3704  000E2E  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  3705  000E32  ECAE  F005         	call	___ftpack	;wreg free
  3706  000E36  C013  F01B         	movff	?___ftpack,?___awtoft
  3707  000E3A  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  3708  000E3E  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  3709  000E42  0012               	return	
  3710  000E44                     __end_of___awtoft:
  3711                           	opt stack 0
  3712                           tblptru	equ	0xFF8
  3713                           tblptrh	equ	0xFF7
  3714                           tblptrl	equ	0xFF6
  3715                           tablat	equ	0xFF5
  3716                           intcon	equ	0xFF2
  3717                           intcon3	equ	0xFF0
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function ___ftpack *****************
  3721 ;; Defined at:
  3722 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;  arg             3   18[COMRAM] unsigned um
  3725 ;;  exp             1   21[COMRAM] unsigned char 
  3726 ;;  sign            1   22[COMRAM] unsigned char 
  3727 ;; Auto vars:     Size  Location     Type
  3728 ;;		None
  3729 ;; Return value:  Size  Location     Type
  3730 ;;                  3   18[COMRAM] float 
  3731 ;; Registers used:
  3732 ;;		wreg, status,2, status,0
  3733 ;; Tracked objects:
  3734 ;;		On entry : 0/0
  3735 ;;		On exit  : 0/0
  3736 ;;		Unchanged: 0/0
  3737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3738 ;;      Params:         5       0       0       0       0       0       0       0       0
  3739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3740 ;;      Temps:          3       0       0       0       0       0       0       0       0
  3741 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3742 ;;Total ram usage:        8 bytes
  3743 ;; Hardware stack levels used:    1
  3744 ;; Hardware stack levels required when called:    1
  3745 ;; This function calls:
  3746 ;;		Nothing
  3747 ;; This function is called by:
  3748 ;;		___awtoft
  3749 ;;		___ftmul
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           	psect	text8
  3754  000B5C                     __ptext8:
  3755                           	opt stack 0
  3756  000B5C                     ___ftpack:
  3757                           	opt stack 26
  3758                           
  3759                           ;incstack = 0
  3760  000B5C  5016               	movf	___ftpack@exp,w,c
  3761  000B5E  B4D8               	btfsc	status,2,c
  3762  000B60  D005               	goto	u2440
  3763  000B62  5013               	movf	___ftpack@arg,w,c
  3764  000B64  1014               	iorwf	___ftpack@arg+1,w,c
  3765  000B66  1015               	iorwf	___ftpack@arg+2,w,c
  3766  000B68  A4D8               	btfss	status,2,c
  3767  000B6A  D00C               	goto	l753
  3768  000B6C                     u2440:
  3769  000B6C  0E00               	movlw	0
  3770  000B6E  6E13               	movwf	?___ftpack,c
  3771  000B70  0E00               	movlw	0
  3772  000B72  6E14               	movwf	?___ftpack+1,c
  3773  000B74  0E00               	movlw	0
  3774  000B76  6E15               	movwf	?___ftpack+2,c
  3775  000B78  0012               	return	
  3776  000B7A  2A16               	incf	___ftpack@exp,f,c
  3777  000B7C  90D8               	bcf	status,0,c
  3778  000B7E  3215               	rrcf	___ftpack@arg+2,f,c
  3779  000B80  3214               	rrcf	___ftpack@arg+1,f,c
  3780  000B82  3213               	rrcf	___ftpack@arg,f,c
  3781  000B84                     l753:
  3782  000B84  0E00               	movlw	0
  3783  000B86  1413               	andwf	___ftpack@arg,w,c
  3784  000B88  6E18               	movwf	??___ftpack& (0+255),c
  3785  000B8A  0E00               	movlw	0
  3786  000B8C  1414               	andwf	___ftpack@arg+1,w,c
  3787  000B8E  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3788  000B90  0EFE               	movlw	254
  3789  000B92  1415               	andwf	___ftpack@arg+2,w,c
  3790  000B94  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3791  000B96  5018               	movf	??___ftpack,w,c
  3792  000B98  1019               	iorwf	??___ftpack+1,w,c
  3793  000B9A  101A               	iorwf	??___ftpack+2,w,c
  3794  000B9C  B4D8               	btfsc	status,2,c
  3795  000B9E  D00C               	goto	l756
  3796  000BA0  D7EC               	goto	l754
  3797  000BA2  2A16               	incf	___ftpack@exp,f,c
  3798  000BA4  0E01               	movlw	1
  3799  000BA6  2613               	addwf	___ftpack@arg,f,c
  3800  000BA8  0E00               	movlw	0
  3801  000BAA  2214               	addwfc	___ftpack@arg+1,f,c
  3802  000BAC  0E00               	movlw	0
  3803  000BAE  2215               	addwfc	___ftpack@arg+2,f,c
  3804  000BB0  90D8               	bcf	status,0,c
  3805  000BB2  3215               	rrcf	___ftpack@arg+2,f,c
  3806  000BB4  3214               	rrcf	___ftpack@arg+1,f,c
  3807  000BB6  3213               	rrcf	___ftpack@arg,f,c
  3808  000BB8                     l756:
  3809  000BB8  0E00               	movlw	0
  3810  000BBA  1413               	andwf	___ftpack@arg,w,c
  3811  000BBC  6E18               	movwf	??___ftpack& (0+255),c
  3812  000BBE  0E00               	movlw	0
  3813  000BC0  1414               	andwf	___ftpack@arg+1,w,c
  3814  000BC2  6E19               	movwf	(??___ftpack+1)& (0+255),c
  3815  000BC4  0EFF               	movlw	255
  3816  000BC6  1415               	andwf	___ftpack@arg+2,w,c
  3817  000BC8  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  3818  000BCA  5018               	movf	??___ftpack,w,c
  3819  000BCC  1019               	iorwf	??___ftpack+1,w,c
  3820  000BCE  101A               	iorwf	??___ftpack+2,w,c
  3821  000BD0  B4D8               	btfsc	status,2,c
  3822  000BD2  D006               	goto	l759
  3823  000BD4  D7E6               	goto	l757
  3824  000BD6  0616               	decf	___ftpack@exp,f,c
  3825  000BD8  90D8               	bcf	status,0,c
  3826  000BDA  3613               	rlcf	___ftpack@arg,f,c
  3827  000BDC  3614               	rlcf	___ftpack@arg+1,f,c
  3828  000BDE  3615               	rlcf	___ftpack@arg+2,f,c
  3829  000BE0                     l759:
  3830  000BE0  BE14               	btfsc	___ftpack@arg+1,7,c
  3831  000BE2  D003               	goto	u2480
  3832  000BE4  0E02               	movlw	2
  3833  000BE6  6016               	cpfslt	___ftpack@exp,c
  3834  000BE8  D7F6               	goto	l760
  3835  000BEA                     u2480:
  3836  000BEA  A016               	btfss	___ftpack@exp,0,c
  3837  000BEC  9E14               	bcf	___ftpack@arg+1,7,c
  3838  000BEE  90D8               	bcf	status,0,c
  3839  000BF0  3216               	rrcf	___ftpack@exp,f,c
  3840  000BF2  5016               	movf	___ftpack@exp,w,c
  3841  000BF4  1215               	iorwf	___ftpack@arg+2,f,c
  3842  000BF6  5017               	movf	___ftpack@sign,w,c
  3843  000BF8  A4D8               	btfss	status,2,c
  3844  000BFA  8E15               	bsf	___ftpack@arg+2,7,c
  3845  000BFC  C013  F013         	movff	___ftpack@arg,?___ftpack
  3846  000C00  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  3847  000C04  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  3848  000C08  0012               	return	
  3849  000C0A                     __end_of___ftpack:
  3850                           	opt stack 0
  3851                           tblptru	equ	0xFF8
  3852                           tblptrh	equ	0xFF7
  3853                           tblptrl	equ	0xFF6
  3854                           tablat	equ	0xFF5
  3855                           intcon	equ	0xFF2
  3856                           intcon3	equ	0xFF0
  3857                           status	equ	0xFD8
  3858                           
  3859 ;; *************** function ___awdiv *****************
  3860 ;; Defined at:
  3861 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;  dividend        2   18[COMRAM] int 
  3864 ;;  divisor         2   20[COMRAM] int 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  quotient        2   24[COMRAM] int 
  3867 ;;  sign            1   23[COMRAM] unsigned char 
  3868 ;;  counter         1   22[COMRAM] unsigned char 
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  2   18[COMRAM] int 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, status,0
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3878 ;;      Params:         4       0       0       0       0       0       0       0       0
  3879 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3881 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3882 ;;Total ram usage:        8 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_setMotores
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text9
  3893  000D4A                     __ptext9:
  3894                           	opt stack 0
  3895  000D4A                     ___awdiv:
  3896                           	opt stack 27
  3897                           
  3898                           ;incstack = 0
  3899  000D4A  0E00               	movlw	0
  3900  000D4C  6E18               	movwf	___awdiv@sign,c
  3901  000D4E  AE16               	btfss	___awdiv@divisor+1,7,c
  3902  000D50  D006               	goto	l706
  3903  000D52  6C15               	negf	___awdiv@divisor,c
  3904  000D54  1E16               	comf	___awdiv@divisor+1,f,c
  3905  000D56  B0D8               	btfsc	status,0,c
  3906  000D58  2A16               	incf	___awdiv@divisor+1,f,c
  3907  000D5A  0E01               	movlw	1
  3908  000D5C  6E18               	movwf	___awdiv@sign,c
  3909  000D5E                     l706:
  3910  000D5E  AE14               	btfss	___awdiv@dividend+1,7,c
  3911  000D60  D006               	goto	l707
  3912  000D62  6C13               	negf	___awdiv@dividend,c
  3913  000D64  1E14               	comf	___awdiv@dividend+1,f,c
  3914  000D66  B0D8               	btfsc	status,0,c
  3915  000D68  2A14               	incf	___awdiv@dividend+1,f,c
  3916  000D6A  0E01               	movlw	1
  3917  000D6C  1A18               	xorwf	___awdiv@sign,f,c
  3918  000D6E                     l707:
  3919  000D6E  0E00               	movlw	0
  3920  000D70  6E1A               	movwf	___awdiv@quotient+1,c
  3921  000D72  0E00               	movlw	0
  3922  000D74  6E19               	movwf	___awdiv@quotient,c
  3923  000D76  5015               	movf	___awdiv@divisor,w,c
  3924  000D78  1016               	iorwf	___awdiv@divisor+1,w,c
  3925  000D7A  B4D8               	btfsc	status,2,c
  3926  000D7C  D01C               	goto	l714
  3927  000D7E  0E01               	movlw	1
  3928  000D80  6E17               	movwf	___awdiv@counter,c
  3929  000D82  D004               	goto	l709
  3930  000D84  90D8               	bcf	status,0,c
  3931  000D86  3615               	rlcf	___awdiv@divisor,f,c
  3932  000D88  3616               	rlcf	___awdiv@divisor+1,f,c
  3933  000D8A  2A17               	incf	___awdiv@counter,f,c
  3934  000D8C                     l709:
  3935  000D8C  AE16               	btfss	___awdiv@divisor+1,7,c
  3936  000D8E  D7FA               	goto	l710
  3937  000D90                     u2600:
  3938  000D90  90D8               	bcf	status,0,c
  3939  000D92  3619               	rlcf	___awdiv@quotient,f,c
  3940  000D94  361A               	rlcf	___awdiv@quotient+1,f,c
  3941  000D96  5015               	movf	___awdiv@divisor,w,c
  3942  000D98  5C13               	subwf	___awdiv@dividend,w,c
  3943  000D9A  5016               	movf	___awdiv@divisor+1,w,c
  3944  000D9C  5814               	subwfb	___awdiv@dividend+1,w,c
  3945  000D9E  A0D8               	btfss	status,0,c
  3946  000DA0  D005               	goto	l713
  3947  000DA2  5015               	movf	___awdiv@divisor,w,c
  3948  000DA4  5E13               	subwf	___awdiv@dividend,f,c
  3949  000DA6  5016               	movf	___awdiv@divisor+1,w,c
  3950  000DA8  5A14               	subwfb	___awdiv@dividend+1,f,c
  3951  000DAA  8019               	bsf	___awdiv@quotient,0,c
  3952  000DAC                     l713:
  3953  000DAC  90D8               	bcf	status,0,c
  3954  000DAE  3216               	rrcf	___awdiv@divisor+1,f,c
  3955  000DB0  3215               	rrcf	___awdiv@divisor,f,c
  3956  000DB2  2E17               	decfsz	___awdiv@counter,f,c
  3957  000DB4  D7ED               	goto	u2600
  3958  000DB6                     l714:
  3959  000DB6  5018               	movf	___awdiv@sign,w,c
  3960  000DB8  B4D8               	btfsc	status,2,c
  3961  000DBA  D004               	goto	l715
  3962  000DBC  6C19               	negf	___awdiv@quotient,c
  3963  000DBE  1E1A               	comf	___awdiv@quotient+1,f,c
  3964  000DC0  B0D8               	btfsc	status,0,c
  3965  000DC2  2A1A               	incf	___awdiv@quotient+1,f,c
  3966  000DC4                     l715:
  3967  000DC4  C019  F013         	movff	___awdiv@quotient,?___awdiv
  3968  000DC8  C01A  F014         	movff	___awdiv@quotient+1,?___awdiv+1
  3969  000DCC  0012               	return	
  3970  000DCE                     __end_of___awdiv:
  3971                           	opt stack 0
  3972                           tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           intcon	equ	0xFF2
  3977                           intcon3	equ	0xFF0
  3978                           status	equ	0xFD8
  3979                           
  3980 ;; *************** function _ISR *****************
  3981 ;; Defined at:
  3982 ;;		line 291 in file "main.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;		None
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;		None
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  1    wreg      void 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3996 ;;      Params:         0       0       0       0       0       0       0       0       0
  3997 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3998 ;;      Temps:         18       0       0       0       0       0       0       0       0
  3999 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4000 ;;Total ram usage:       18 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		Interrupt level 2
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	intcode
  4010  000008                     __pintcode:
  4011                           	opt stack 0
  4012  000008                     _ISR:
  4013                           	opt stack 26
  4014                           
  4015                           ;incstack = 0
  4016  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  4017  00000A  ED05  F006         	call	int_func,f	;refresh shadow registers
  4018                           tblptru	equ	0xFF8
  4019                           tblptrh	equ	0xFF7
  4020                           tblptrl	equ	0xFF6
  4021                           tablat	equ	0xFF5
  4022                           intcon	equ	0xFF2
  4023                           intcon3	equ	0xFF0
  4024                           status	equ	0xFD8
  4025                           
  4026                           	psect	intcode_body
  4027  000C0A                     __pintcode_body:
  4028                           	opt stack 26
  4029  000C0A                     int_func:
  4030                           	opt stack 26
  4031  000C0A  0006               	pop		; remove dummy address from shadow register refresh
  4032  000C0C  CFFA F001          	movff	pclath,??_ISR
  4033  000C10  CFFB F002          	movff	pclatu,??_ISR+1
  4034  000C14  CFE9 F003          	movff	fsr0l,??_ISR+2
  4035  000C18  CFEA F004          	movff	fsr0h,??_ISR+3
  4036  000C1C  CFE1 F005          	movff	fsr1l,??_ISR+4
  4037  000C20  CFE2 F006          	movff	fsr1h,??_ISR+5
  4038  000C24  CFD9 F007          	movff	fsr2l,??_ISR+6
  4039  000C28  CFDA F008          	movff	fsr2h,??_ISR+7
  4040  000C2C  CFF3 F009          	movff	prodl,??_ISR+8
  4041  000C30  CFF4 F00A          	movff	prodh,??_ISR+9
  4042  000C34  CFF6 F00B          	movff	tblptrl,??_ISR+10
  4043  000C38  CFF7 F00C          	movff	tblptrh,??_ISR+11
  4044  000C3C  CFF8 F00D          	movff	tblptru,??_ISR+12
  4045  000C40  CFF5 F00E          	movff	tablat,??_ISR+13
  4046  000C44  C04B  F00F         	movff	btemp,??_ISR+14
  4047  000C48  C04C  F010         	movff	btemp+1,??_ISR+15
  4048  000C4C  C04D  F011         	movff	btemp+2,??_ISR+16
  4049  000C50  C04E  F012         	movff	btemp+3,??_ISR+17
  4050                           
  4051                           ;main.c: 292: if(!TMR2IF) return;
  4052  000C54  A29E               	btfss	3998,1,c	;volatile
  4053  000C56  D007               	goto	i2l530
  4054                           
  4055                           ;main.c: 293: TMR2IF = 0;
  4056  000C58  929E               	bcf	3998,1,c	;volatile
  4057                           
  4058                           ;main.c: 294: millisCounter++;
  4059  000C5A  0E01               	movlw	1
  4060  000C5C  2646               	addwf	_millisCounter,f,c
  4061  000C5E  0E00               	movlw	0
  4062  000C60  2247               	addwfc	_millisCounter+1,f,c
  4063  000C62  2248               	addwfc	_millisCounter+2,f,c
  4064  000C64  2249               	addwfc	_millisCounter+3,f,c
  4065  000C66                     i2l530:
  4066  000C66  C012  F04E         	movff	??_ISR+17,btemp+3
  4067  000C6A  C011  F04D         	movff	??_ISR+16,btemp+2
  4068  000C6E  C010  F04C         	movff	??_ISR+15,btemp+1
  4069  000C72  C00F  F04B         	movff	??_ISR+14,btemp
  4070  000C76  C00E  FFF5         	movff	??_ISR+13,tablat
  4071  000C7A  C00D  FFF8         	movff	??_ISR+12,tblptru
  4072  000C7E  C00C  FFF7         	movff	??_ISR+11,tblptrh
  4073  000C82  C00B  FFF6         	movff	??_ISR+10,tblptrl
  4074  000C86  C00A  FFF4         	movff	??_ISR+9,prodh
  4075  000C8A  C009  FFF3         	movff	??_ISR+8,prodl
  4076  000C8E  C008  FFDA         	movff	??_ISR+7,fsr2h
  4077  000C92  C007  FFD9         	movff	??_ISR+6,fsr2l
  4078  000C96  C006  FFE2         	movff	??_ISR+5,fsr1h
  4079  000C9A  C005  FFE1         	movff	??_ISR+4,fsr1l
  4080  000C9E  C004  FFEA         	movff	??_ISR+3,fsr0h
  4081  000CA2  C003  FFE9         	movff	??_ISR+2,fsr0l
  4082  000CA6  C002  FFFB         	movff	??_ISR+1,pclatu
  4083  000CAA  C001  FFFA         	movff	??_ISR,pclath
  4084  000CAE  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  4085  000CB0  0011               	retfie		f
  4086  000CB2                     __end_of_ISR:
  4087                           	opt stack 0
  4088  0000                     pclatu	equ	0xFFB
  4089                           pclath	equ	0xFFA
  4090                           tblptru	equ	0xFF8
  4091                           tblptrh	equ	0xFF7
  4092                           tblptrl	equ	0xFF6
  4093                           tablat	equ	0xFF5
  4094                           prodh	equ	0xFF4
  4095                           prodl	equ	0xFF3
  4096                           intcon	equ	0xFF2
  4097                           intcon3	equ	0xFF0
  4098                           fsr0h	equ	0xFEA
  4099                           fsr0l	equ	0xFE9
  4100                           fsr1h	equ	0xFE2
  4101                           fsr1l	equ	0xFE1
  4102                           fsr2h	equ	0xFDA
  4103                           fsr2l	equ	0xFD9
  4104                           status	equ	0xFD8
  4105                           pclatu	equ	0xFFB
  4106                           pclath	equ	0xFFA
  4107                           tblptru	equ	0xFF8
  4108                           tblptrh	equ	0xFF7
  4109                           tblptrl	equ	0xFF6
  4110                           tablat	equ	0xFF5
  4111                           prodh	equ	0xFF4
  4112                           prodl	equ	0xFF3
  4113                           intcon	equ	0xFF2
  4114                           intcon3	equ	0xFF0
  4115                           fsr0h	equ	0xFEA
  4116                           fsr0l	equ	0xFE9
  4117                           fsr1h	equ	0xFE2
  4118                           fsr1l	equ	0xFE1
  4119                           fsr2h	equ	0xFDA
  4120                           fsr2l	equ	0xFD9
  4121                           status	equ	0xFD8
  4122                           
  4123                           	psect	rparam
  4124  0000                     pclatu	equ	0xFFB
  4125                           pclath	equ	0xFFA
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           prodh	equ	0xFF4
  4131                           prodl	equ	0xFF3
  4132                           intcon	equ	0xFF2
  4133                           intcon3	equ	0xFF0
  4134                           fsr0h	equ	0xFEA
  4135                           fsr0l	equ	0xFE9
  4136                           fsr1h	equ	0xFE2
  4137                           fsr1l	equ	0xFE1
  4138                           fsr2h	equ	0xFDA
  4139                           fsr2l	equ	0xFD9
  4140                           status	equ	0xFD8
  4141                           
  4142                           	psect	temp
  4143  00004B                     btemp:
  4144                           	opt stack 0
  4145  00004B                     	ds	1
  4146  0000                     int$flags	set	btemp
  4147  0000                     wtemp6	set	btemp+1
  4148                           pclatu	equ	0xFFB
  4149                           pclath	equ	0xFFA
  4150                           tblptru	equ	0xFF8
  4151                           tblptrh	equ	0xFF7
  4152                           tblptrl	equ	0xFF6
  4153                           tablat	equ	0xFF5
  4154                           prodh	equ	0xFF4
  4155                           prodl	equ	0xFF3
  4156                           intcon	equ	0xFF2
  4157                           intcon3	equ	0xFF0
  4158                           fsr0h	equ	0xFEA
  4159                           fsr0l	equ	0xFE9
  4160                           fsr1h	equ	0xFE2
  4161                           fsr1l	equ	0xFE1
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     69      74
    BANK0           160      5       5
    BANK1           256    188     196
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _loop->_setMotores
    _init->_setMotores
    _setMotores->___fttol
    ___fttol->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_loop

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21946
                               _init
                               _loop
 ---------------------------------------------------------------------------------
 (1) _loop                                               193   193      0   12712
                                              0 BANK0      5     5      0
                                              0 BANK1    188   188      0
                             _millis
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _millis                                               4     0      4       0
                                             18 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0    9234
                         _setMotores
 ---------------------------------------------------------------------------------
 (2) _setMotores                                           9     5      4    9234
                                             60 COMRAM     9     5      4
                            ___awdiv
                           ___awtoft
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     404
                                             45 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3144
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2631
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2388
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                             18 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
   _loop
     _millis
     _setMotores
       ___awdiv
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BC      C4       7       76.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5       5       5        3.1%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     45      4A       1       78.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      20        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 11 19:16:30 2019

                     l68 0754                       l69 0016                       l86 0042  
                     l98 0060             ___awdiv@sign 0018              __CFG_BORV$0 000000  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000                      l100 0086                      l200 019E  
                    l112 010A                      l201 01CA                      l132 00EA  
                    l221 02AC                      l214 01E6                      l126 00C4  
                    l118 009E                      l215 0238                      l305 0388  
                    l217 0300                      l500 07F0                      l404 04A8  
                    l510 083C                      l502 07F8                      l422 0468  
                    l334 03B0                      l431 05A4                      l247 030E  
                    l504 0846                      l432 05CC                      l433 05F4  
                    l425 04B2                      l514 088A                      l506 084E  
                    l434 061C                      l426 04D2                      l435 0644  
                    l427 04FA                      l347 03E8                      l508 0834  
                    l436 0690                      l428 0522                      l437 06A6  
                    l429 058E                      l710 0D84                      l518 089A  
                    l535 0E5A                      l376 0410                      l713 0DAC  
                    l385 0448                      l714 0DB6                      l706 0D5E  
                    l715 0DC4                      l707 0D6E                      l468 0716  
                    l709 0D8C                      l734 0E20                      l760 0BD6  
                    l832 0A90                      l496 0802                      l753 0B84  
                    l754 0B7A                      l834 0AB8                      l498 080A  
                    l835 0AEA                      l756 0BB8                      l836 0AFA  
                    l757 0BA2                      l861 0A3A                      l853 09A0  
                    l838 0B12                      l862 0A2E                      l759 0BE0  
                    l839 0B22                      l855 0A16                      l864 0A56  
                    l856 0A06             __CFG_CPB$OFF 000000                      _PR2 000FCB  
           __CFG_CPD$OFF 000000                      _ISR 0008             __CFG_BOR$OFF 000000  
           __CFG_LVP$OFF 000000                     ?_ISR 0001             __CFG_WDT$OFF 000000  
                   l3168 0388                     u2511 0A78                     u2600 0D90  
                   u2440 0B6C                     u5000 00A8                     u2531 0AA0  
                   u2700 0A40                     _PIE1 000F9D                     u2480 0BEA  
                   u2720 07D6                     u6000 0392                     u5040 00F2  
                   _PIE2 000FA0                     u2641 0984                     u2730 07E6  
                   u5050 00F4                     u2660 09BE                     u2740 081A  
                   u2750 082A                     u5150 0126                     u2760 0858  
                   u5240 0148                     u5160 0128                     u2665 09B6  
                   u5305 0168                     u6210 03F0                     u5330 0172  
                   u5306 016A                     u5250 014A                     u2780 086E  
                   u6220 03F2                     u6060 03B8                     u5340 0174  
                   u6070 03BA                     u5415 019A                     u5520 02B4  
                   u5416 019C                     u2778 085A                     u5530 02B6  
                   u5195 013E                     u5196 0140                     u2798 0870  
                   u5550 02CC                     u4910 004A                     u6280 0418  
                   u5560 02CE                     u5480 0294                     u4920 004C  
                   u6450 0450                     u6290 041A                     u5650 0316  
                   u6620 06B2                     u6460 0452                     u5740 033C  
                   u5660 0318                     u6710 0700                     u5750 033E  
                   u5590 02E2                     u6720 0702                     u6640 06CE  
                   u6480 0470                     u4960 008E                     u6810 0734  
                   u6490 0472                     u5498 0298                     u4970 0090  
                   u6820 0736                     u6638 06B6                     u4990 00A6  
                   u6680 06E8                     u5880 0362                     u6690 06EA  
                   u6658 06D2                     u5890 0364                     u6780 071E  
                   u6790 0720                     u5990 0390                     _main 0E56  
           ___ftpack@arg 0013                     _init 0CB2                     _loop 0012  
           ___ftpack@exp 0016                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 004B                     prodh 000FF4  
                   prodl 000FF3                     start 000E            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 002C             ___param_bank 000000             ___ftmul@sign 002D  
                  ??_ISR 0001             ___fttol@exp1 003C             ___fttol@lval 0038  
          __CFG_PLLDIV$5 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  ?_init 0001          __end_of___awdiv 0DCE                    ?_loop 0001  
        __end_of___ftmul 0B5C          ___awdiv@divisor 0015          __end_of___fttol 0A68  
                  _T2CON 000FCA                    i2l530 0C66          ___awdiv@counter 0017  
          __CFG_USBDIV$2 000000            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          ___awtoft@sign 001E            ___ftpack@sign 0017           __pbitbssCOMRAM 0250  
                  pclath 000FFA                    tablat 000FF5                    loop@m 01BC  
                  status 000FD8                    wtemp6 004C           __CFG_MCLRE$OFF 000000  
        __initialization 0DCE             __end_of_main 0E60             __end_of_init 0D4A  
           __end_of_loop 07BE          setMotores@dutyD 003F          setMotores@dutyI 003D  
                 ??_main 0046            ___fttol@sign1 0037                   ??_init 0046  
                 ??_loop 0060            __activetblptr 000002                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         ___awdiv@dividend 0013         __end_of___awtoft 0E44  
       __end_of___ftpack 0C0A                   _TMR2IF 007CF1           __CFG_XINST$OFF 000000  
              ??___awdiv 0017                ??___ftmul 0025                ??___fttol 0032  
          loop@direccion 01C2                   _millis 0E44         ___awdiv@quotient 0019  
  ___ftmul@f3_as_product 0029                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0DFE  
        __CFG_PBADEN$OFF 000000           _setMotores$945 0042           _setMotores$946 0044  
          ___rparam_used 000001               ___awtoft@c 001B               ___ftmul@f1 001F  
             ___ftmul@f2 0022               ___fttol@f1 002E           __pcstackCOMRAM 0001  
           __pidataBANK1 0E60               __pbssBANK1 01BC                  ?_millis 0013  
              ?___awtoft 001B                ?___ftpack 0013                  _INTCON3 000FF0  
        __CFG_VREGEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
                ___awdiv 0D4A                  ___ftmul 0A68                  ___fttol 0974  
        __CFG_STVREN$OFF 000000                  __pcinit 0DCE               ??___awtoft 001E  
             ??___ftpack 0018          __size_of_millis 0012                  __ramtop 0800  
                __ptext0 0E56                  __ptext1 0012                  __ptext2 0E44  
                __ptext3 0CB2                  __ptext4 07BE                  __ptext5 0974  
                __ptext6 0A68                  __ptext7 0E0C                  __ptext8 0B5C  
                __ptext9 0D4A            _millisCounter 0046             __size_of_ISR 0CAA  
              _T2CONbits 000FCA           __pintcode_body 0C0A     end_of_initialization 0DFE  
          __Lmediumconst 0000                  int_func 0C0A               _setMotores 07BE  
              _PORTAbits 000F80                _PORTBbits 000F81                _PORTCbits 000F82  
              _TRISAbits 000F92                _TRISBbits 000F93                _TRISCbits 000F94  
            _CCP1CONbits 000FBD              _CCP2CONbits 000FBA              ___ftmul@exp 0028  
         __end_of_millis 0E56      start_initialization 0DCE              __end_of_ISR 0CB2  
            ?_setMotores 003D              __pdataBANK1 01C2         __CFG_LPT1OSC$OFF 000000  
               ??_millis 0017        __size_of___awtoft 0038        __size_of___ftpack 00AE  
            __pbssCOMRAM 0046            __pcstackBANK0 0060            __pcstackBANK1 0100  
             loop@estado 01C0                __pintcode 0008                 ?___awdiv 0013  
               ?___ftmul 001F                 ?___fttol 002E      __size_of_setMotores 01B6  
               _LATAbits 000F89                 _LATCbits 000F8B                 _PIE1bits 000F9D  
               _UCFGbits 000F6F                 _RCONbits 000FD0         __CFG_WDTPS$32768 000000  
               _UCONbits 000F6D               _ADCON1bits 000FC1                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0084         __size_of___ftmul 00F4  
       __size_of___fttol 00F4                 ___awtoft 0E0C                 ___ftpack 0B5C  
              loop@ciego 0250                 _loop$900 0168                 _loop$901 016A  
               _loop$910 017C                 _loop$902 016C                 _loop$911 017E  
               _loop$903 016E                 _loop$920 0190                 _loop$912 0180  
               _loop$904 0170                 _loop$840 0110                 _loop$832 0100  
               _loop$921 0192                 _loop$913 0182                 _loop$905 0172  
               _loop$841 0112                 _loop$833 0102                 _loop$930 01A4  
               _loop$922 0194                 _loop$914 0184                 _loop$906 0174  
               _loop$842 0114                 _loop$834 0104                 _loop$931 01A6  
               _loop$923 0196                 _loop$915 0186                 _loop$907 0176  
               _loop$843 0116                 _loop$835 0106                 _loop$940 01B8  
               _loop$932 01A8                 _loop$924 0198                 _loop$916 0188  
               _loop$908 0178                 _loop$844 0118                 _loop$836 0108  
               _loop$941 01BA                 _loop$933 01AA                 _loop$925 019A  
               _loop$917 018A                 _loop$909 017A                 _loop$845 011A  
               _loop$837 010A                 _loop$934 01AC                 _loop$926 019C  
               _loop$918 018C                 _loop$870 012C                 _loop$846 011C  
               _loop$838 010C                 _loop$935 01AE                 _loop$927 019E  
               _loop$919 018E                 _loop$871 012E                 _loop$863 011E  
               _loop$839 010E                 _loop$936 01B0                 _loop$928 01A0  
               _loop$880 0140                 _loop$872 0130                 _loop$864 0120  
               _loop$937 01B2                 _loop$929 01A2                 _loop$881 0142  
               _loop$873 0132                 _loop$865 0122                 _loop$938 01B4  
               _loop$890 0154                 _loop$882 0144                 _loop$874 0134  
               _loop$866 0124                 _loop$939 01B6                 _loop$891 0156  
               _loop$883 0146                 _loop$875 0136                 _loop$867 0126  
               _loop$892 0158                 _loop$884 0148                 _loop$876 0138  
               _loop$868 0128                 _loop$893 015A                 _loop$885 014A  
               _loop$877 013A                 _loop$869 012A                 _loop$894 015C  
               _loop$886 014C                 _loop$878 013C                 _loop$895 015E  
               _loop$887 014E                 _loop$879 013E                 _loop$896 0160  
               _loop$888 0150                 _loop$897 0162                 _loop$889 0152  
               _loop$898 0164                 _loop$899 0166             ??_setMotores 0041  
          __size_of_main 000A            __size_of_init 0098            __size_of_loop 07AC  
               int$flags 004B    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
     __end_of_setMotores 0974                 intlevel2 0000       __CFG_FOSC$HSPLL_HS 000000  
